// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: bpfmap-data.proto

package bpfmap_data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BpfmapDataEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MapId         *uint32                `protobuf:"varint,1,req,name=map_id,json=mapId" json:"map_id,omitempty"`
	KeysBytes     *uint32                `protobuf:"varint,2,req,name=keys_bytes,json=keysBytes" json:"keys_bytes,omitempty"`       // Bytes required to store keys
	ValuesBytes   *uint32                `protobuf:"varint,3,req,name=values_bytes,json=valuesBytes" json:"values_bytes,omitempty"` // Bytes required to store values
	Count         *uint32                `protobuf:"varint,4,req,name=count" json:"count,omitempty"`                                // Number of key-value pairs stored
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BpfmapDataEntry) Reset() {
	*x = BpfmapDataEntry{}
	mi := &file_bpfmap_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BpfmapDataEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BpfmapDataEntry) ProtoMessage() {}

func (x *BpfmapDataEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bpfmap_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BpfmapDataEntry.ProtoReflect.Descriptor instead.
func (*BpfmapDataEntry) Descriptor() ([]byte, []int) {
	return file_bpfmap_data_proto_rawDescGZIP(), []int{0}
}

func (x *BpfmapDataEntry) GetMapId() uint32 {
	if x != nil && x.MapId != nil {
		return *x.MapId
	}
	return 0
}

func (x *BpfmapDataEntry) GetKeysBytes() uint32 {
	if x != nil && x.KeysBytes != nil {
		return *x.KeysBytes
	}
	return 0
}

func (x *BpfmapDataEntry) GetValuesBytes() uint32 {
	if x != nil && x.ValuesBytes != nil {
		return *x.ValuesBytes
	}
	return 0
}

func (x *BpfmapDataEntry) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

var File_bpfmap_data_proto protoreflect.FileDescriptor

const file_bpfmap_data_proto_rawDesc = "" +
	"\n" +
	"\x11bpfmap-data.proto\"\x82\x01\n" +
	"\x11bpfmap_data_entry\x12\x15\n" +
	"\x06map_id\x18\x01 \x02(\rR\x05mapId\x12\x1d\n" +
	"\n" +
	"keys_bytes\x18\x02 \x02(\rR\tkeysBytes\x12!\n" +
	"\fvalues_bytes\x18\x03 \x02(\rR\vvaluesBytes\x12\x14\n" +
	"\x05count\x18\x04 \x02(\rR\x05count"

var (
	file_bpfmap_data_proto_rawDescOnce sync.Once
	file_bpfmap_data_proto_rawDescData []byte
)

func file_bpfmap_data_proto_rawDescGZIP() []byte {
	file_bpfmap_data_proto_rawDescOnce.Do(func() {
		file_bpfmap_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bpfmap_data_proto_rawDesc), len(file_bpfmap_data_proto_rawDesc)))
	})
	return file_bpfmap_data_proto_rawDescData
}

var file_bpfmap_data_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_bpfmap_data_proto_goTypes = []any{
	(*BpfmapDataEntry)(nil), // 0: bpfmap_data_entry
}
var file_bpfmap_data_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bpfmap_data_proto_init() }
func file_bpfmap_data_proto_init() {
	if File_bpfmap_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bpfmap_data_proto_rawDesc), len(file_bpfmap_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bpfmap_data_proto_goTypes,
		DependencyIndexes: file_bpfmap_data_proto_depIdxs,
		MessageInfos:      file_bpfmap_data_proto_msgTypes,
	}.Build()
	File_bpfmap_data_proto = out.File
	file_bpfmap_data_proto_goTypes = nil
	file_bpfmap_data_proto_depIdxs = nil
}
