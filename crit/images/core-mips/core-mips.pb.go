// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: core-mips.proto

package core_mips

import (
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserMipsRegsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R0            *uint64                `protobuf:"varint,1,req,name=r0" json:"r0,omitempty"`
	R1            *uint64                `protobuf:"varint,2,req,name=r1" json:"r1,omitempty"`
	R2            *uint64                `protobuf:"varint,3,req,name=r2" json:"r2,omitempty"`
	R3            *uint64                `protobuf:"varint,4,req,name=r3" json:"r3,omitempty"`
	R4            *uint64                `protobuf:"varint,5,req,name=r4" json:"r4,omitempty"`
	R5            *uint64                `protobuf:"varint,6,req,name=r5" json:"r5,omitempty"`
	R6            *uint64                `protobuf:"varint,7,req,name=r6" json:"r6,omitempty"`
	R7            *uint64                `protobuf:"varint,8,req,name=r7" json:"r7,omitempty"`
	R8            *uint64                `protobuf:"varint,9,req,name=r8" json:"r8,omitempty"`
	R9            *uint64                `protobuf:"varint,10,req,name=r9" json:"r9,omitempty"`
	R10           *uint64                `protobuf:"varint,11,req,name=r10" json:"r10,omitempty"`
	R11           *uint64                `protobuf:"varint,12,req,name=r11" json:"r11,omitempty"`
	R12           *uint64                `protobuf:"varint,13,req,name=r12" json:"r12,omitempty"`
	R13           *uint64                `protobuf:"varint,14,req,name=r13" json:"r13,omitempty"`
	R14           *uint64                `protobuf:"varint,15,req,name=r14" json:"r14,omitempty"`
	R15           *uint64                `protobuf:"varint,16,req,name=r15" json:"r15,omitempty"`
	R16           *uint64                `protobuf:"varint,17,req,name=r16" json:"r16,omitempty"`
	R17           *uint64                `protobuf:"varint,18,req,name=r17" json:"r17,omitempty"`
	R18           *uint64                `protobuf:"varint,19,req,name=r18" json:"r18,omitempty"`
	R19           *uint64                `protobuf:"varint,20,req,name=r19" json:"r19,omitempty"`
	R20           *uint64                `protobuf:"varint,21,req,name=r20" json:"r20,omitempty"`
	R21           *uint64                `protobuf:"varint,22,req,name=r21" json:"r21,omitempty"`
	R22           *uint64                `protobuf:"varint,23,req,name=r22" json:"r22,omitempty"`
	R23           *uint64                `protobuf:"varint,24,req,name=r23" json:"r23,omitempty"`
	R24           *uint64                `protobuf:"varint,25,req,name=r24" json:"r24,omitempty"`
	R25           *uint64                `protobuf:"varint,26,req,name=r25" json:"r25,omitempty"`
	R26           *uint64                `protobuf:"varint,27,req,name=r26" json:"r26,omitempty"`
	R27           *uint64                `protobuf:"varint,28,req,name=r27" json:"r27,omitempty"`
	R28           *uint64                `protobuf:"varint,29,req,name=r28" json:"r28,omitempty"`
	R29           *uint64                `protobuf:"varint,30,req,name=r29" json:"r29,omitempty"`
	R30           *uint64                `protobuf:"varint,31,req,name=r30" json:"r30,omitempty"`
	R31           *uint64                `protobuf:"varint,32,req,name=r31" json:"r31,omitempty"`
	Lo            *uint64                `protobuf:"varint,33,req,name=lo" json:"lo,omitempty"`
	Hi            *uint64                `protobuf:"varint,34,req,name=hi" json:"hi,omitempty"`
	Cp0Epc        *uint64                `protobuf:"varint,35,req,name=cp0_epc,json=cp0Epc" json:"cp0_epc,omitempty"`
	Cp0Badvaddr   *uint64                `protobuf:"varint,36,req,name=cp0_badvaddr,json=cp0Badvaddr" json:"cp0_badvaddr,omitempty"`
	Cp0Status     *uint64                `protobuf:"varint,37,req,name=cp0_status,json=cp0Status" json:"cp0_status,omitempty"`
	Cp0Cause      *uint64                `protobuf:"varint,38,req,name=cp0_cause,json=cp0Cause" json:"cp0_cause,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMipsRegsEntry) Reset() {
	*x = UserMipsRegsEntry{}
	mi := &file_core_mips_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMipsRegsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMipsRegsEntry) ProtoMessage() {}

func (x *UserMipsRegsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_mips_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMipsRegsEntry.ProtoReflect.Descriptor instead.
func (*UserMipsRegsEntry) Descriptor() ([]byte, []int) {
	return file_core_mips_proto_rawDescGZIP(), []int{0}
}

func (x *UserMipsRegsEntry) GetR0() uint64 {
	if x != nil && x.R0 != nil {
		return *x.R0
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR1() uint64 {
	if x != nil && x.R1 != nil {
		return *x.R1
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR2() uint64 {
	if x != nil && x.R2 != nil {
		return *x.R2
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR3() uint64 {
	if x != nil && x.R3 != nil {
		return *x.R3
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR4() uint64 {
	if x != nil && x.R4 != nil {
		return *x.R4
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR5() uint64 {
	if x != nil && x.R5 != nil {
		return *x.R5
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR6() uint64 {
	if x != nil && x.R6 != nil {
		return *x.R6
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR7() uint64 {
	if x != nil && x.R7 != nil {
		return *x.R7
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR8() uint64 {
	if x != nil && x.R8 != nil {
		return *x.R8
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR9() uint64 {
	if x != nil && x.R9 != nil {
		return *x.R9
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR10() uint64 {
	if x != nil && x.R10 != nil {
		return *x.R10
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR11() uint64 {
	if x != nil && x.R11 != nil {
		return *x.R11
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR12() uint64 {
	if x != nil && x.R12 != nil {
		return *x.R12
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR13() uint64 {
	if x != nil && x.R13 != nil {
		return *x.R13
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR14() uint64 {
	if x != nil && x.R14 != nil {
		return *x.R14
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR15() uint64 {
	if x != nil && x.R15 != nil {
		return *x.R15
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR16() uint64 {
	if x != nil && x.R16 != nil {
		return *x.R16
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR17() uint64 {
	if x != nil && x.R17 != nil {
		return *x.R17
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR18() uint64 {
	if x != nil && x.R18 != nil {
		return *x.R18
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR19() uint64 {
	if x != nil && x.R19 != nil {
		return *x.R19
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR20() uint64 {
	if x != nil && x.R20 != nil {
		return *x.R20
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR21() uint64 {
	if x != nil && x.R21 != nil {
		return *x.R21
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR22() uint64 {
	if x != nil && x.R22 != nil {
		return *x.R22
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR23() uint64 {
	if x != nil && x.R23 != nil {
		return *x.R23
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR24() uint64 {
	if x != nil && x.R24 != nil {
		return *x.R24
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR25() uint64 {
	if x != nil && x.R25 != nil {
		return *x.R25
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR26() uint64 {
	if x != nil && x.R26 != nil {
		return *x.R26
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR27() uint64 {
	if x != nil && x.R27 != nil {
		return *x.R27
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR28() uint64 {
	if x != nil && x.R28 != nil {
		return *x.R28
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR29() uint64 {
	if x != nil && x.R29 != nil {
		return *x.R29
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR30() uint64 {
	if x != nil && x.R30 != nil {
		return *x.R30
	}
	return 0
}

func (x *UserMipsRegsEntry) GetR31() uint64 {
	if x != nil && x.R31 != nil {
		return *x.R31
	}
	return 0
}

func (x *UserMipsRegsEntry) GetLo() uint64 {
	if x != nil && x.Lo != nil {
		return *x.Lo
	}
	return 0
}

func (x *UserMipsRegsEntry) GetHi() uint64 {
	if x != nil && x.Hi != nil {
		return *x.Hi
	}
	return 0
}

func (x *UserMipsRegsEntry) GetCp0Epc() uint64 {
	if x != nil && x.Cp0Epc != nil {
		return *x.Cp0Epc
	}
	return 0
}

func (x *UserMipsRegsEntry) GetCp0Badvaddr() uint64 {
	if x != nil && x.Cp0Badvaddr != nil {
		return *x.Cp0Badvaddr
	}
	return 0
}

func (x *UserMipsRegsEntry) GetCp0Status() uint64 {
	if x != nil && x.Cp0Status != nil {
		return *x.Cp0Status
	}
	return 0
}

func (x *UserMipsRegsEntry) GetCp0Cause() uint64 {
	if x != nil && x.Cp0Cause != nil {
		return *x.Cp0Cause
	}
	return 0
}

type UserMipsFpregsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R0            *uint64                `protobuf:"varint,1,req,name=r0" json:"r0,omitempty"`
	R1            *uint64                `protobuf:"varint,2,req,name=r1" json:"r1,omitempty"`
	R2            *uint64                `protobuf:"varint,3,req,name=r2" json:"r2,omitempty"`
	R3            *uint64                `protobuf:"varint,4,req,name=r3" json:"r3,omitempty"`
	R4            *uint64                `protobuf:"varint,5,req,name=r4" json:"r4,omitempty"`
	R5            *uint64                `protobuf:"varint,6,req,name=r5" json:"r5,omitempty"`
	R6            *uint64                `protobuf:"varint,7,req,name=r6" json:"r6,omitempty"`
	R7            *uint64                `protobuf:"varint,8,req,name=r7" json:"r7,omitempty"`
	R8            *uint64                `protobuf:"varint,9,req,name=r8" json:"r8,omitempty"`
	R9            *uint64                `protobuf:"varint,10,req,name=r9" json:"r9,omitempty"`
	R10           *uint64                `protobuf:"varint,11,req,name=r10" json:"r10,omitempty"`
	R11           *uint64                `protobuf:"varint,12,req,name=r11" json:"r11,omitempty"`
	R12           *uint64                `protobuf:"varint,13,req,name=r12" json:"r12,omitempty"`
	R13           *uint64                `protobuf:"varint,14,req,name=r13" json:"r13,omitempty"`
	R14           *uint64                `protobuf:"varint,15,req,name=r14" json:"r14,omitempty"`
	R15           *uint64                `protobuf:"varint,16,req,name=r15" json:"r15,omitempty"`
	R16           *uint64                `protobuf:"varint,17,req,name=r16" json:"r16,omitempty"`
	R17           *uint64                `protobuf:"varint,18,req,name=r17" json:"r17,omitempty"`
	R18           *uint64                `protobuf:"varint,19,req,name=r18" json:"r18,omitempty"`
	R19           *uint64                `protobuf:"varint,20,req,name=r19" json:"r19,omitempty"`
	R20           *uint64                `protobuf:"varint,21,req,name=r20" json:"r20,omitempty"`
	R21           *uint64                `protobuf:"varint,22,req,name=r21" json:"r21,omitempty"`
	R22           *uint64                `protobuf:"varint,23,req,name=r22" json:"r22,omitempty"`
	R23           *uint64                `protobuf:"varint,24,req,name=r23" json:"r23,omitempty"`
	R24           *uint64                `protobuf:"varint,25,req,name=r24" json:"r24,omitempty"`
	R25           *uint64                `protobuf:"varint,26,req,name=r25" json:"r25,omitempty"`
	R26           *uint64                `protobuf:"varint,27,req,name=r26" json:"r26,omitempty"`
	R27           *uint64                `protobuf:"varint,28,req,name=r27" json:"r27,omitempty"`
	R28           *uint64                `protobuf:"varint,29,req,name=r28" json:"r28,omitempty"`
	R29           *uint64                `protobuf:"varint,30,req,name=r29" json:"r29,omitempty"`
	R30           *uint64                `protobuf:"varint,31,req,name=r30" json:"r30,omitempty"`
	R31           *uint64                `protobuf:"varint,32,req,name=r31" json:"r31,omitempty"`
	Lo            *uint64                `protobuf:"varint,33,req,name=lo" json:"lo,omitempty"`
	Hi            *uint64                `protobuf:"varint,34,req,name=hi" json:"hi,omitempty"`
	FpuFcr31      *uint32                `protobuf:"varint,35,req,name=fpu_fcr31,json=fpuFcr31" json:"fpu_fcr31,omitempty"`
	FpuId         *uint32                `protobuf:"varint,36,req,name=fpu_id,json=fpuId" json:"fpu_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMipsFpregsEntry) Reset() {
	*x = UserMipsFpregsEntry{}
	mi := &file_core_mips_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMipsFpregsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMipsFpregsEntry) ProtoMessage() {}

func (x *UserMipsFpregsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_mips_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMipsFpregsEntry.ProtoReflect.Descriptor instead.
func (*UserMipsFpregsEntry) Descriptor() ([]byte, []int) {
	return file_core_mips_proto_rawDescGZIP(), []int{1}
}

func (x *UserMipsFpregsEntry) GetR0() uint64 {
	if x != nil && x.R0 != nil {
		return *x.R0
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR1() uint64 {
	if x != nil && x.R1 != nil {
		return *x.R1
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR2() uint64 {
	if x != nil && x.R2 != nil {
		return *x.R2
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR3() uint64 {
	if x != nil && x.R3 != nil {
		return *x.R3
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR4() uint64 {
	if x != nil && x.R4 != nil {
		return *x.R4
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR5() uint64 {
	if x != nil && x.R5 != nil {
		return *x.R5
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR6() uint64 {
	if x != nil && x.R6 != nil {
		return *x.R6
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR7() uint64 {
	if x != nil && x.R7 != nil {
		return *x.R7
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR8() uint64 {
	if x != nil && x.R8 != nil {
		return *x.R8
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR9() uint64 {
	if x != nil && x.R9 != nil {
		return *x.R9
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR10() uint64 {
	if x != nil && x.R10 != nil {
		return *x.R10
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR11() uint64 {
	if x != nil && x.R11 != nil {
		return *x.R11
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR12() uint64 {
	if x != nil && x.R12 != nil {
		return *x.R12
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR13() uint64 {
	if x != nil && x.R13 != nil {
		return *x.R13
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR14() uint64 {
	if x != nil && x.R14 != nil {
		return *x.R14
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR15() uint64 {
	if x != nil && x.R15 != nil {
		return *x.R15
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR16() uint64 {
	if x != nil && x.R16 != nil {
		return *x.R16
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR17() uint64 {
	if x != nil && x.R17 != nil {
		return *x.R17
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR18() uint64 {
	if x != nil && x.R18 != nil {
		return *x.R18
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR19() uint64 {
	if x != nil && x.R19 != nil {
		return *x.R19
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR20() uint64 {
	if x != nil && x.R20 != nil {
		return *x.R20
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR21() uint64 {
	if x != nil && x.R21 != nil {
		return *x.R21
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR22() uint64 {
	if x != nil && x.R22 != nil {
		return *x.R22
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR23() uint64 {
	if x != nil && x.R23 != nil {
		return *x.R23
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR24() uint64 {
	if x != nil && x.R24 != nil {
		return *x.R24
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR25() uint64 {
	if x != nil && x.R25 != nil {
		return *x.R25
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR26() uint64 {
	if x != nil && x.R26 != nil {
		return *x.R26
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR27() uint64 {
	if x != nil && x.R27 != nil {
		return *x.R27
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR28() uint64 {
	if x != nil && x.R28 != nil {
		return *x.R28
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR29() uint64 {
	if x != nil && x.R29 != nil {
		return *x.R29
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR30() uint64 {
	if x != nil && x.R30 != nil {
		return *x.R30
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetR31() uint64 {
	if x != nil && x.R31 != nil {
		return *x.R31
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetLo() uint64 {
	if x != nil && x.Lo != nil {
		return *x.Lo
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetHi() uint64 {
	if x != nil && x.Hi != nil {
		return *x.Hi
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetFpuFcr31() uint32 {
	if x != nil && x.FpuFcr31 != nil {
		return *x.FpuFcr31
	}
	return 0
}

func (x *UserMipsFpregsEntry) GetFpuId() uint32 {
	if x != nil && x.FpuId != nil {
		return *x.FpuId
	}
	return 0
}

type ThreadInfoMips struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClearTidAddr  *uint64                `protobuf:"varint,1,req,name=clear_tid_addr,json=clearTidAddr" json:"clear_tid_addr,omitempty"`
	Tls           *uint64                `protobuf:"varint,2,req,name=tls" json:"tls,omitempty"`
	Gpregs        *UserMipsRegsEntry     `protobuf:"bytes,3,req,name=gpregs" json:"gpregs,omitempty"`
	Fpregs        *UserMipsFpregsEntry   `protobuf:"bytes,4,req,name=fpregs" json:"fpregs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadInfoMips) Reset() {
	*x = ThreadInfoMips{}
	mi := &file_core_mips_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadInfoMips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadInfoMips) ProtoMessage() {}

func (x *ThreadInfoMips) ProtoReflect() protoreflect.Message {
	mi := &file_core_mips_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadInfoMips.ProtoReflect.Descriptor instead.
func (*ThreadInfoMips) Descriptor() ([]byte, []int) {
	return file_core_mips_proto_rawDescGZIP(), []int{2}
}

func (x *ThreadInfoMips) GetClearTidAddr() uint64 {
	if x != nil && x.ClearTidAddr != nil {
		return *x.ClearTidAddr
	}
	return 0
}

func (x *ThreadInfoMips) GetTls() uint64 {
	if x != nil && x.Tls != nil {
		return *x.Tls
	}
	return 0
}

func (x *ThreadInfoMips) GetGpregs() *UserMipsRegsEntry {
	if x != nil {
		return x.Gpregs
	}
	return nil
}

func (x *ThreadInfoMips) GetFpregs() *UserMipsFpregsEntry {
	if x != nil {
		return x.Fpregs
	}
	return nil
}

var File_core_mips_proto protoreflect.FileDescriptor

const file_core_mips_proto_rawDesc = "" +
	"\n" +
	"\x0fcore-mips.proto\x1a\n" +
	"opts.proto\"\xda\x05\n" +
	"\x14user_mips_regs_entry\x12\x0e\n" +
	"\x02r0\x18\x01 \x02(\x04R\x02r0\x12\x0e\n" +
	"\x02r1\x18\x02 \x02(\x04R\x02r1\x12\x0e\n" +
	"\x02r2\x18\x03 \x02(\x04R\x02r2\x12\x0e\n" +
	"\x02r3\x18\x04 \x02(\x04R\x02r3\x12\x0e\n" +
	"\x02r4\x18\x05 \x02(\x04R\x02r4\x12\x0e\n" +
	"\x02r5\x18\x06 \x02(\x04R\x02r5\x12\x0e\n" +
	"\x02r6\x18\a \x02(\x04R\x02r6\x12\x0e\n" +
	"\x02r7\x18\b \x02(\x04R\x02r7\x12\x0e\n" +
	"\x02r8\x18\t \x02(\x04R\x02r8\x12\x0e\n" +
	"\x02r9\x18\n" +
	" \x02(\x04R\x02r9\x12\x10\n" +
	"\x03r10\x18\v \x02(\x04R\x03r10\x12\x10\n" +
	"\x03r11\x18\f \x02(\x04R\x03r11\x12\x10\n" +
	"\x03r12\x18\r \x02(\x04R\x03r12\x12\x10\n" +
	"\x03r13\x18\x0e \x02(\x04R\x03r13\x12\x10\n" +
	"\x03r14\x18\x0f \x02(\x04R\x03r14\x12\x10\n" +
	"\x03r15\x18\x10 \x02(\x04R\x03r15\x12\x10\n" +
	"\x03r16\x18\x11 \x02(\x04R\x03r16\x12\x10\n" +
	"\x03r17\x18\x12 \x02(\x04R\x03r17\x12\x10\n" +
	"\x03r18\x18\x13 \x02(\x04R\x03r18\x12\x10\n" +
	"\x03r19\x18\x14 \x02(\x04R\x03r19\x12\x10\n" +
	"\x03r20\x18\x15 \x02(\x04R\x03r20\x12\x10\n" +
	"\x03r21\x18\x16 \x02(\x04R\x03r21\x12\x10\n" +
	"\x03r22\x18\x17 \x02(\x04R\x03r22\x12\x10\n" +
	"\x03r23\x18\x18 \x02(\x04R\x03r23\x12\x10\n" +
	"\x03r24\x18\x19 \x02(\x04R\x03r24\x12\x10\n" +
	"\x03r25\x18\x1a \x02(\x04R\x03r25\x12\x10\n" +
	"\x03r26\x18\x1b \x02(\x04R\x03r26\x12\x10\n" +
	"\x03r27\x18\x1c \x02(\x04R\x03r27\x12\x10\n" +
	"\x03r28\x18\x1d \x02(\x04R\x03r28\x12\x10\n" +
	"\x03r29\x18\x1e \x02(\x04R\x03r29\x12\x10\n" +
	"\x03r30\x18\x1f \x02(\x04R\x03r30\x12\x10\n" +
	"\x03r31\x18  \x02(\x04R\x03r31\x12\x0e\n" +
	"\x02lo\x18! \x02(\x04R\x02lo\x12\x0e\n" +
	"\x02hi\x18\" \x02(\x04R\x02hi\x12\x17\n" +
	"\acp0_epc\x18# \x02(\x04R\x06cp0Epc\x12!\n" +
	"\fcp0_badvaddr\x18$ \x02(\x04R\vcp0Badvaddr\x12\x1d\n" +
	"\n" +
	"cp0_status\x18% \x02(\x04R\tcp0Status\x12\x1b\n" +
	"\tcp0_cause\x18& \x02(\x04R\bcp0Cause\"\x98\x05\n" +
	"\x16user_mips_fpregs_entry\x12\x0e\n" +
	"\x02r0\x18\x01 \x02(\x04R\x02r0\x12\x0e\n" +
	"\x02r1\x18\x02 \x02(\x04R\x02r1\x12\x0e\n" +
	"\x02r2\x18\x03 \x02(\x04R\x02r2\x12\x0e\n" +
	"\x02r3\x18\x04 \x02(\x04R\x02r3\x12\x0e\n" +
	"\x02r4\x18\x05 \x02(\x04R\x02r4\x12\x0e\n" +
	"\x02r5\x18\x06 \x02(\x04R\x02r5\x12\x0e\n" +
	"\x02r6\x18\a \x02(\x04R\x02r6\x12\x0e\n" +
	"\x02r7\x18\b \x02(\x04R\x02r7\x12\x0e\n" +
	"\x02r8\x18\t \x02(\x04R\x02r8\x12\x0e\n" +
	"\x02r9\x18\n" +
	" \x02(\x04R\x02r9\x12\x10\n" +
	"\x03r10\x18\v \x02(\x04R\x03r10\x12\x10\n" +
	"\x03r11\x18\f \x02(\x04R\x03r11\x12\x10\n" +
	"\x03r12\x18\r \x02(\x04R\x03r12\x12\x10\n" +
	"\x03r13\x18\x0e \x02(\x04R\x03r13\x12\x10\n" +
	"\x03r14\x18\x0f \x02(\x04R\x03r14\x12\x10\n" +
	"\x03r15\x18\x10 \x02(\x04R\x03r15\x12\x10\n" +
	"\x03r16\x18\x11 \x02(\x04R\x03r16\x12\x10\n" +
	"\x03r17\x18\x12 \x02(\x04R\x03r17\x12\x10\n" +
	"\x03r18\x18\x13 \x02(\x04R\x03r18\x12\x10\n" +
	"\x03r19\x18\x14 \x02(\x04R\x03r19\x12\x10\n" +
	"\x03r20\x18\x15 \x02(\x04R\x03r20\x12\x10\n" +
	"\x03r21\x18\x16 \x02(\x04R\x03r21\x12\x10\n" +
	"\x03r22\x18\x17 \x02(\x04R\x03r22\x12\x10\n" +
	"\x03r23\x18\x18 \x02(\x04R\x03r23\x12\x10\n" +
	"\x03r24\x18\x19 \x02(\x04R\x03r24\x12\x10\n" +
	"\x03r25\x18\x1a \x02(\x04R\x03r25\x12\x10\n" +
	"\x03r26\x18\x1b \x02(\x04R\x03r26\x12\x10\n" +
	"\x03r27\x18\x1c \x02(\x04R\x03r27\x12\x10\n" +
	"\x03r28\x18\x1d \x02(\x04R\x03r28\x12\x10\n" +
	"\x03r29\x18\x1e \x02(\x04R\x03r29\x12\x10\n" +
	"\x03r30\x18\x1f \x02(\x04R\x03r30\x12\x10\n" +
	"\x03r31\x18  \x02(\x04R\x03r31\x12\x0e\n" +
	"\x02lo\x18! \x02(\x04R\x02lo\x12\x0e\n" +
	"\x02hi\x18\" \x02(\x04R\x02hi\x12\x1b\n" +
	"\tfpu_fcr31\x18# \x02(\rR\bfpuFcr31\x12\x15\n" +
	"\x06fpu_id\x18$ \x02(\rR\x05fpuId\"\xbf\x01\n" +
	"\x10thread_info_mips\x12+\n" +
	"\x0eclear_tid_addr\x18\x01 \x02(\x04B\x05\x92~\x02\b\x01R\fclearTidAddr\x12\x10\n" +
	"\x03tls\x18\x02 \x02(\x04R\x03tls\x124\n" +
	"\x06gpregs\x18\x03 \x02(\v2\x15.user_mips_regs_entryB\x05\x92~\x02\b\x01R\x06gpregs\x126\n" +
	"\x06fpregs\x18\x04 \x02(\v2\x17.user_mips_fpregs_entryB\x05\x92~\x02\b\x01R\x06fpregs"

var (
	file_core_mips_proto_rawDescOnce sync.Once
	file_core_mips_proto_rawDescData []byte
)

func file_core_mips_proto_rawDescGZIP() []byte {
	file_core_mips_proto_rawDescOnce.Do(func() {
		file_core_mips_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_mips_proto_rawDesc), len(file_core_mips_proto_rawDesc)))
	})
	return file_core_mips_proto_rawDescData
}

var file_core_mips_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_core_mips_proto_goTypes = []any{
	(*UserMipsRegsEntry)(nil),   // 0: user_mips_regs_entry
	(*UserMipsFpregsEntry)(nil), // 1: user_mips_fpregs_entry
	(*ThreadInfoMips)(nil),      // 2: thread_info_mips
}
var file_core_mips_proto_depIdxs = []int32{
	0, // 0: thread_info_mips.gpregs:type_name -> user_mips_regs_entry
	1, // 1: thread_info_mips.fpregs:type_name -> user_mips_fpregs_entry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_core_mips_proto_init() }
func file_core_mips_proto_init() {
	if File_core_mips_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_mips_proto_rawDesc), len(file_core_mips_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_mips_proto_goTypes,
		DependencyIndexes: file_core_mips_proto_depIdxs,
		MessageInfos:      file_core_mips_proto_msgTypes,
	}.Build()
	File_core_mips_proto = out.File
	file_core_mips_proto_goTypes = nil
	file_core_mips_proto_depIdxs = nil
}
