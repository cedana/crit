// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: core-x86.proto

package core_x86

import (
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserX86RegsMode int32

const (
	UserX86RegsMode_NATIVE UserX86RegsMode = 1
	UserX86RegsMode_COMPAT UserX86RegsMode = 2
)

// Enum value maps for UserX86RegsMode.
var (
	UserX86RegsMode_name = map[int32]string{
		1: "NATIVE",
		2: "COMPAT",
	}
	UserX86RegsMode_value = map[string]int32{
		"NATIVE": 1,
		"COMPAT": 2,
	}
)

func (x UserX86RegsMode) Enum() *UserX86RegsMode {
	p := new(UserX86RegsMode)
	*p = x
	return p
}

func (x UserX86RegsMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserX86RegsMode) Descriptor() protoreflect.EnumDescriptor {
	return file_core_x86_proto_enumTypes[0].Descriptor()
}

func (UserX86RegsMode) Type() protoreflect.EnumType {
	return &file_core_x86_proto_enumTypes[0]
}

func (x UserX86RegsMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UserX86RegsMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UserX86RegsMode(num)
	return nil
}

// Deprecated: Use UserX86RegsMode.Descriptor instead.
func (UserX86RegsMode) EnumDescriptor() ([]byte, []int) {
	return file_core_x86_proto_rawDescGZIP(), []int{0}
}

// Reusing entry for both 64 and 32 bits register sets
type UserX86RegsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R15           *uint64                `protobuf:"varint,1,req,name=r15" json:"r15,omitempty"`
	R14           *uint64                `protobuf:"varint,2,req,name=r14" json:"r14,omitempty"`
	R13           *uint64                `protobuf:"varint,3,req,name=r13" json:"r13,omitempty"`
	R12           *uint64                `protobuf:"varint,4,req,name=r12" json:"r12,omitempty"`
	Bp            *uint64                `protobuf:"varint,5,req,name=bp" json:"bp,omitempty"`
	Bx            *uint64                `protobuf:"varint,6,req,name=bx" json:"bx,omitempty"`
	R11           *uint64                `protobuf:"varint,7,req,name=r11" json:"r11,omitempty"`
	R10           *uint64                `protobuf:"varint,8,req,name=r10" json:"r10,omitempty"`
	R9            *uint64                `protobuf:"varint,9,req,name=r9" json:"r9,omitempty"`
	R8            *uint64                `protobuf:"varint,10,req,name=r8" json:"r8,omitempty"`
	Ax            *uint64                `protobuf:"varint,11,req,name=ax" json:"ax,omitempty"`
	Cx            *uint64                `protobuf:"varint,12,req,name=cx" json:"cx,omitempty"`
	Dx            *uint64                `protobuf:"varint,13,req,name=dx" json:"dx,omitempty"`
	Si            *uint64                `protobuf:"varint,14,req,name=si" json:"si,omitempty"`
	Di            *uint64                `protobuf:"varint,15,req,name=di" json:"di,omitempty"`
	OrigAx        *uint64                `protobuf:"varint,16,req,name=orig_ax,json=origAx" json:"orig_ax,omitempty"`
	Ip            *uint64                `protobuf:"varint,17,req,name=ip" json:"ip,omitempty"`
	Cs            *uint64                `protobuf:"varint,18,req,name=cs" json:"cs,omitempty"`
	Flags         *uint64                `protobuf:"varint,19,req,name=flags" json:"flags,omitempty"`
	Sp            *uint64                `protobuf:"varint,20,req,name=sp" json:"sp,omitempty"`
	Ss            *uint64                `protobuf:"varint,21,req,name=ss" json:"ss,omitempty"`
	FsBase        *uint64                `protobuf:"varint,22,req,name=fs_base,json=fsBase" json:"fs_base,omitempty"`
	GsBase        *uint64                `protobuf:"varint,23,req,name=gs_base,json=gsBase" json:"gs_base,omitempty"`
	Ds            *uint64                `protobuf:"varint,24,req,name=ds" json:"ds,omitempty"`
	Es            *uint64                `protobuf:"varint,25,req,name=es" json:"es,omitempty"`
	Fs            *uint64                `protobuf:"varint,26,req,name=fs" json:"fs,omitempty"`
	Gs            *uint64                `protobuf:"varint,27,req,name=gs" json:"gs,omitempty"`
	Mode          *UserX86RegsMode       `protobuf:"varint,28,opt,name=mode,enum=UserX86RegsMode,def=1" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for UserX86RegsEntry fields.
const (
	Default_UserX86RegsEntry_Mode = UserX86RegsMode_NATIVE
)

func (x *UserX86RegsEntry) Reset() {
	*x = UserX86RegsEntry{}
	mi := &file_core_x86_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserX86RegsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserX86RegsEntry) ProtoMessage() {}

func (x *UserX86RegsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_x86_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserX86RegsEntry.ProtoReflect.Descriptor instead.
func (*UserX86RegsEntry) Descriptor() ([]byte, []int) {
	return file_core_x86_proto_rawDescGZIP(), []int{0}
}

func (x *UserX86RegsEntry) GetR15() uint64 {
	if x != nil && x.R15 != nil {
		return *x.R15
	}
	return 0
}

func (x *UserX86RegsEntry) GetR14() uint64 {
	if x != nil && x.R14 != nil {
		return *x.R14
	}
	return 0
}

func (x *UserX86RegsEntry) GetR13() uint64 {
	if x != nil && x.R13 != nil {
		return *x.R13
	}
	return 0
}

func (x *UserX86RegsEntry) GetR12() uint64 {
	if x != nil && x.R12 != nil {
		return *x.R12
	}
	return 0
}

func (x *UserX86RegsEntry) GetBp() uint64 {
	if x != nil && x.Bp != nil {
		return *x.Bp
	}
	return 0
}

func (x *UserX86RegsEntry) GetBx() uint64 {
	if x != nil && x.Bx != nil {
		return *x.Bx
	}
	return 0
}

func (x *UserX86RegsEntry) GetR11() uint64 {
	if x != nil && x.R11 != nil {
		return *x.R11
	}
	return 0
}

func (x *UserX86RegsEntry) GetR10() uint64 {
	if x != nil && x.R10 != nil {
		return *x.R10
	}
	return 0
}

func (x *UserX86RegsEntry) GetR9() uint64 {
	if x != nil && x.R9 != nil {
		return *x.R9
	}
	return 0
}

func (x *UserX86RegsEntry) GetR8() uint64 {
	if x != nil && x.R8 != nil {
		return *x.R8
	}
	return 0
}

func (x *UserX86RegsEntry) GetAx() uint64 {
	if x != nil && x.Ax != nil {
		return *x.Ax
	}
	return 0
}

func (x *UserX86RegsEntry) GetCx() uint64 {
	if x != nil && x.Cx != nil {
		return *x.Cx
	}
	return 0
}

func (x *UserX86RegsEntry) GetDx() uint64 {
	if x != nil && x.Dx != nil {
		return *x.Dx
	}
	return 0
}

func (x *UserX86RegsEntry) GetSi() uint64 {
	if x != nil && x.Si != nil {
		return *x.Si
	}
	return 0
}

func (x *UserX86RegsEntry) GetDi() uint64 {
	if x != nil && x.Di != nil {
		return *x.Di
	}
	return 0
}

func (x *UserX86RegsEntry) GetOrigAx() uint64 {
	if x != nil && x.OrigAx != nil {
		return *x.OrigAx
	}
	return 0
}

func (x *UserX86RegsEntry) GetIp() uint64 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *UserX86RegsEntry) GetCs() uint64 {
	if x != nil && x.Cs != nil {
		return *x.Cs
	}
	return 0
}

func (x *UserX86RegsEntry) GetFlags() uint64 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *UserX86RegsEntry) GetSp() uint64 {
	if x != nil && x.Sp != nil {
		return *x.Sp
	}
	return 0
}

func (x *UserX86RegsEntry) GetSs() uint64 {
	if x != nil && x.Ss != nil {
		return *x.Ss
	}
	return 0
}

func (x *UserX86RegsEntry) GetFsBase() uint64 {
	if x != nil && x.FsBase != nil {
		return *x.FsBase
	}
	return 0
}

func (x *UserX86RegsEntry) GetGsBase() uint64 {
	if x != nil && x.GsBase != nil {
		return *x.GsBase
	}
	return 0
}

func (x *UserX86RegsEntry) GetDs() uint64 {
	if x != nil && x.Ds != nil {
		return *x.Ds
	}
	return 0
}

func (x *UserX86RegsEntry) GetEs() uint64 {
	if x != nil && x.Es != nil {
		return *x.Es
	}
	return 0
}

func (x *UserX86RegsEntry) GetFs() uint64 {
	if x != nil && x.Fs != nil {
		return *x.Fs
	}
	return 0
}

func (x *UserX86RegsEntry) GetGs() uint64 {
	if x != nil && x.Gs != nil {
		return *x.Gs
	}
	return 0
}

func (x *UserX86RegsEntry) GetMode() UserX86RegsMode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return Default_UserX86RegsEntry_Mode
}

type UserX86CetEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cet           *uint64                `protobuf:"varint,1,req,name=cet" json:"cet,omitempty"`
	Ssp           *uint64                `protobuf:"varint,2,req,name=ssp" json:"ssp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserX86CetEntry) Reset() {
	*x = UserX86CetEntry{}
	mi := &file_core_x86_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserX86CetEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserX86CetEntry) ProtoMessage() {}

func (x *UserX86CetEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_x86_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserX86CetEntry.ProtoReflect.Descriptor instead.
func (*UserX86CetEntry) Descriptor() ([]byte, []int) {
	return file_core_x86_proto_rawDescGZIP(), []int{1}
}

func (x *UserX86CetEntry) GetCet() uint64 {
	if x != nil && x.Cet != nil {
		return *x.Cet
	}
	return 0
}

func (x *UserX86CetEntry) GetSsp() uint64 {
	if x != nil && x.Ssp != nil {
		return *x.Ssp
	}
	return 0
}

type UserX86XsaveEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// standard xsave features
	XstateBv *uint64 `protobuf:"varint,1,req,name=xstate_bv,json=xstateBv" json:"xstate_bv,omitempty"`
	// AVX components: 16x 256-bit ymm registers, hi 128 bits
	YmmhSpace []uint32 `protobuf:"varint,2,rep,name=ymmh_space,json=ymmhSpace" json:"ymmh_space,omitempty"`
	// MPX components
	BndregState []uint64 `protobuf:"varint,3,rep,name=bndreg_state,json=bndregState" json:"bndreg_state,omitempty"`
	BndcsrState []uint64 `protobuf:"varint,4,rep,name=bndcsr_state,json=bndcsrState" json:"bndcsr_state,omitempty"`
	// AVX512 components: k0-k7, ZMM_Hi256, Hi16_ZMM
	OpmaskReg []uint64 `protobuf:"varint,5,rep,name=opmask_reg,json=opmaskReg" json:"opmask_reg,omitempty"`
	ZmmUpper  []uint64 `protobuf:"varint,6,rep,name=zmm_upper,json=zmmUpper" json:"zmm_upper,omitempty"`
	Hi16Zmm   []uint64 `protobuf:"varint,7,rep,name=hi16_zmm,json=hi16Zmm" json:"hi16_zmm,omitempty"`
	// Protected keys
	Pkru []uint32 `protobuf:"varint,8,rep,name=pkru" json:"pkru,omitempty"`
	// CET
	Cet           *UserX86CetEntry `protobuf:"bytes,9,opt,name=cet" json:"cet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserX86XsaveEntry) Reset() {
	*x = UserX86XsaveEntry{}
	mi := &file_core_x86_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserX86XsaveEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserX86XsaveEntry) ProtoMessage() {}

func (x *UserX86XsaveEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_x86_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserX86XsaveEntry.ProtoReflect.Descriptor instead.
func (*UserX86XsaveEntry) Descriptor() ([]byte, []int) {
	return file_core_x86_proto_rawDescGZIP(), []int{2}
}

func (x *UserX86XsaveEntry) GetXstateBv() uint64 {
	if x != nil && x.XstateBv != nil {
		return *x.XstateBv
	}
	return 0
}

func (x *UserX86XsaveEntry) GetYmmhSpace() []uint32 {
	if x != nil {
		return x.YmmhSpace
	}
	return nil
}

func (x *UserX86XsaveEntry) GetBndregState() []uint64 {
	if x != nil {
		return x.BndregState
	}
	return nil
}

func (x *UserX86XsaveEntry) GetBndcsrState() []uint64 {
	if x != nil {
		return x.BndcsrState
	}
	return nil
}

func (x *UserX86XsaveEntry) GetOpmaskReg() []uint64 {
	if x != nil {
		return x.OpmaskReg
	}
	return nil
}

func (x *UserX86XsaveEntry) GetZmmUpper() []uint64 {
	if x != nil {
		return x.ZmmUpper
	}
	return nil
}

func (x *UserX86XsaveEntry) GetHi16Zmm() []uint64 {
	if x != nil {
		return x.Hi16Zmm
	}
	return nil
}

func (x *UserX86XsaveEntry) GetPkru() []uint32 {
	if x != nil {
		return x.Pkru
	}
	return nil
}

func (x *UserX86XsaveEntry) GetCet() *UserX86CetEntry {
	if x != nil {
		return x.Cet
	}
	return nil
}

type UserX86FpregsEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// fxsave data
	Cwd       *uint32  `protobuf:"varint,1,req,name=cwd" json:"cwd,omitempty"`
	Swd       *uint32  `protobuf:"varint,2,req,name=swd" json:"swd,omitempty"`
	Twd       *uint32  `protobuf:"varint,3,req,name=twd" json:"twd,omitempty"`
	Fop       *uint32  `protobuf:"varint,4,req,name=fop" json:"fop,omitempty"`
	Rip       *uint64  `protobuf:"varint,5,req,name=rip" json:"rip,omitempty"`
	Rdp       *uint64  `protobuf:"varint,6,req,name=rdp" json:"rdp,omitempty"`
	Mxcsr     *uint32  `protobuf:"varint,7,req,name=mxcsr" json:"mxcsr,omitempty"`
	MxcsrMask *uint32  `protobuf:"varint,8,req,name=mxcsr_mask,json=mxcsrMask" json:"mxcsr_mask,omitempty"`
	StSpace   []uint32 `protobuf:"varint,9,rep,name=st_space,json=stSpace" json:"st_space,omitempty"`
	XmmSpace  []uint32 `protobuf:"varint,10,rep,name=xmm_space,json=xmmSpace" json:"xmm_space,omitempty"`
	// Unused, but present for backward compatibility
	Padding []uint32 `protobuf:"varint,11,rep,name=padding" json:"padding,omitempty"`
	// xsave extension
	Xsave         *UserX86XsaveEntry `protobuf:"bytes,13,opt,name=xsave" json:"xsave,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserX86FpregsEntry) Reset() {
	*x = UserX86FpregsEntry{}
	mi := &file_core_x86_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserX86FpregsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserX86FpregsEntry) ProtoMessage() {}

func (x *UserX86FpregsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_x86_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserX86FpregsEntry.ProtoReflect.Descriptor instead.
func (*UserX86FpregsEntry) Descriptor() ([]byte, []int) {
	return file_core_x86_proto_rawDescGZIP(), []int{3}
}

func (x *UserX86FpregsEntry) GetCwd() uint32 {
	if x != nil && x.Cwd != nil {
		return *x.Cwd
	}
	return 0
}

func (x *UserX86FpregsEntry) GetSwd() uint32 {
	if x != nil && x.Swd != nil {
		return *x.Swd
	}
	return 0
}

func (x *UserX86FpregsEntry) GetTwd() uint32 {
	if x != nil && x.Twd != nil {
		return *x.Twd
	}
	return 0
}

func (x *UserX86FpregsEntry) GetFop() uint32 {
	if x != nil && x.Fop != nil {
		return *x.Fop
	}
	return 0
}

func (x *UserX86FpregsEntry) GetRip() uint64 {
	if x != nil && x.Rip != nil {
		return *x.Rip
	}
	return 0
}

func (x *UserX86FpregsEntry) GetRdp() uint64 {
	if x != nil && x.Rdp != nil {
		return *x.Rdp
	}
	return 0
}

func (x *UserX86FpregsEntry) GetMxcsr() uint32 {
	if x != nil && x.Mxcsr != nil {
		return *x.Mxcsr
	}
	return 0
}

func (x *UserX86FpregsEntry) GetMxcsrMask() uint32 {
	if x != nil && x.MxcsrMask != nil {
		return *x.MxcsrMask
	}
	return 0
}

func (x *UserX86FpregsEntry) GetStSpace() []uint32 {
	if x != nil {
		return x.StSpace
	}
	return nil
}

func (x *UserX86FpregsEntry) GetXmmSpace() []uint32 {
	if x != nil {
		return x.XmmSpace
	}
	return nil
}

func (x *UserX86FpregsEntry) GetPadding() []uint32 {
	if x != nil {
		return x.Padding
	}
	return nil
}

func (x *UserX86FpregsEntry) GetXsave() *UserX86XsaveEntry {
	if x != nil {
		return x.Xsave
	}
	return nil
}

type UserDescT struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	EntryNumber *uint32                `protobuf:"varint,1,req,name=entry_number,json=entryNumber" json:"entry_number,omitempty"`
	// this is for GDT, not for MSRs - 32-bit base
	BaseAddr      *uint32 `protobuf:"varint,2,req,name=base_addr,json=baseAddr" json:"base_addr,omitempty"`
	Limit         *uint32 `protobuf:"varint,3,req,name=limit" json:"limit,omitempty"`
	Seg_32Bit     *bool   `protobuf:"varint,4,req,name=seg_32bit,json=seg32bit" json:"seg_32bit,omitempty"`
	ContentsH     *bool   `protobuf:"varint,5,req,name=contents_h,json=contentsH" json:"contents_h,omitempty"`
	ContentsL     *bool   `protobuf:"varint,6,req,name=contents_l,json=contentsL" json:"contents_l,omitempty"`
	ReadExecOnly  *bool   `protobuf:"varint,7,req,name=read_exec_only,json=readExecOnly,def=1" json:"read_exec_only,omitempty"`
	LimitInPages  *bool   `protobuf:"varint,8,req,name=limit_in_pages,json=limitInPages" json:"limit_in_pages,omitempty"`
	SegNotPresent *bool   `protobuf:"varint,9,req,name=seg_not_present,json=segNotPresent,def=1" json:"seg_not_present,omitempty"`
	Usable        *bool   `protobuf:"varint,10,req,name=usable" json:"usable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for UserDescT fields.
const (
	Default_UserDescT_ReadExecOnly  = bool(true)
	Default_UserDescT_SegNotPresent = bool(true)
)

func (x *UserDescT) Reset() {
	*x = UserDescT{}
	mi := &file_core_x86_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDescT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDescT) ProtoMessage() {}

func (x *UserDescT) ProtoReflect() protoreflect.Message {
	mi := &file_core_x86_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDescT.ProtoReflect.Descriptor instead.
func (*UserDescT) Descriptor() ([]byte, []int) {
	return file_core_x86_proto_rawDescGZIP(), []int{4}
}

func (x *UserDescT) GetEntryNumber() uint32 {
	if x != nil && x.EntryNumber != nil {
		return *x.EntryNumber
	}
	return 0
}

func (x *UserDescT) GetBaseAddr() uint32 {
	if x != nil && x.BaseAddr != nil {
		return *x.BaseAddr
	}
	return 0
}

func (x *UserDescT) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *UserDescT) GetSeg_32Bit() bool {
	if x != nil && x.Seg_32Bit != nil {
		return *x.Seg_32Bit
	}
	return false
}

func (x *UserDescT) GetContentsH() bool {
	if x != nil && x.ContentsH != nil {
		return *x.ContentsH
	}
	return false
}

func (x *UserDescT) GetContentsL() bool {
	if x != nil && x.ContentsL != nil {
		return *x.ContentsL
	}
	return false
}

func (x *UserDescT) GetReadExecOnly() bool {
	if x != nil && x.ReadExecOnly != nil {
		return *x.ReadExecOnly
	}
	return Default_UserDescT_ReadExecOnly
}

func (x *UserDescT) GetLimitInPages() bool {
	if x != nil && x.LimitInPages != nil {
		return *x.LimitInPages
	}
	return false
}

func (x *UserDescT) GetSegNotPresent() bool {
	if x != nil && x.SegNotPresent != nil {
		return *x.SegNotPresent
	}
	return Default_UserDescT_SegNotPresent
}

func (x *UserDescT) GetUsable() bool {
	if x != nil && x.Usable != nil {
		return *x.Usable
	}
	return false
}

type ThreadInfoX86 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClearTidAddr  *uint64                `protobuf:"varint,1,req,name=clear_tid_addr,json=clearTidAddr" json:"clear_tid_addr,omitempty"`
	Gpregs        *UserX86RegsEntry      `protobuf:"bytes,2,req,name=gpregs" json:"gpregs,omitempty"`
	Fpregs        *UserX86FpregsEntry    `protobuf:"bytes,3,req,name=fpregs" json:"fpregs,omitempty"`
	Tls           []*UserDescT           `protobuf:"bytes,4,rep,name=tls" json:"tls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadInfoX86) Reset() {
	*x = ThreadInfoX86{}
	mi := &file_core_x86_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadInfoX86) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadInfoX86) ProtoMessage() {}

func (x *ThreadInfoX86) ProtoReflect() protoreflect.Message {
	mi := &file_core_x86_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadInfoX86.ProtoReflect.Descriptor instead.
func (*ThreadInfoX86) Descriptor() ([]byte, []int) {
	return file_core_x86_proto_rawDescGZIP(), []int{5}
}

func (x *ThreadInfoX86) GetClearTidAddr() uint64 {
	if x != nil && x.ClearTidAddr != nil {
		return *x.ClearTidAddr
	}
	return 0
}

func (x *ThreadInfoX86) GetGpregs() *UserX86RegsEntry {
	if x != nil {
		return x.Gpregs
	}
	return nil
}

func (x *ThreadInfoX86) GetFpregs() *UserX86FpregsEntry {
	if x != nil {
		return x.Fpregs
	}
	return nil
}

func (x *ThreadInfoX86) GetTls() []*UserDescT {
	if x != nil {
		return x.Tls
	}
	return nil
}

var File_core_x86_proto protoreflect.FileDescriptor

const file_core_x86_proto_rawDesc = "" +
	"\n" +
	"\x0ecore-x86.proto\x1a\n" +
	"opts.proto\"\xa3\x04\n" +
	"\x13user_x86_regs_entry\x12\x10\n" +
	"\x03r15\x18\x01 \x02(\x04R\x03r15\x12\x10\n" +
	"\x03r14\x18\x02 \x02(\x04R\x03r14\x12\x10\n" +
	"\x03r13\x18\x03 \x02(\x04R\x03r13\x12\x10\n" +
	"\x03r12\x18\x04 \x02(\x04R\x03r12\x12\x0e\n" +
	"\x02bp\x18\x05 \x02(\x04R\x02bp\x12\x0e\n" +
	"\x02bx\x18\x06 \x02(\x04R\x02bx\x12\x10\n" +
	"\x03r11\x18\a \x02(\x04R\x03r11\x12\x10\n" +
	"\x03r10\x18\b \x02(\x04R\x03r10\x12\x0e\n" +
	"\x02r9\x18\t \x02(\x04R\x02r9\x12\x0e\n" +
	"\x02r8\x18\n" +
	" \x02(\x04R\x02r8\x12\x0e\n" +
	"\x02ax\x18\v \x02(\x04R\x02ax\x12\x0e\n" +
	"\x02cx\x18\f \x02(\x04R\x02cx\x12\x0e\n" +
	"\x02dx\x18\r \x02(\x04R\x02dx\x12\x0e\n" +
	"\x02si\x18\x0e \x02(\x04R\x02si\x12\x0e\n" +
	"\x02di\x18\x0f \x02(\x04R\x02di\x12\x17\n" +
	"\aorig_ax\x18\x10 \x02(\x04R\x06origAx\x12\x0e\n" +
	"\x02ip\x18\x11 \x02(\x04R\x02ip\x12\x0e\n" +
	"\x02cs\x18\x12 \x02(\x04R\x02cs\x12\x14\n" +
	"\x05flags\x18\x13 \x02(\x04R\x05flags\x12\x0e\n" +
	"\x02sp\x18\x14 \x02(\x04R\x02sp\x12\x0e\n" +
	"\x02ss\x18\x15 \x02(\x04R\x02ss\x12\x17\n" +
	"\afs_base\x18\x16 \x02(\x04R\x06fsBase\x12\x17\n" +
	"\ags_base\x18\x17 \x02(\x04R\x06gsBase\x12\x0e\n" +
	"\x02ds\x18\x18 \x02(\x04R\x02ds\x12\x0e\n" +
	"\x02es\x18\x19 \x02(\x04R\x02es\x12\x0e\n" +
	"\x02fs\x18\x1a \x02(\x04R\x02fs\x12\x0e\n" +
	"\x02gs\x18\x1b \x02(\x04R\x02gs\x12/\n" +
	"\x04mode\x18\x1c \x01(\x0e2\x13.user_x86_regs_mode:\x06NATIVER\x04mode\"F\n" +
	"\x12user_x86_cet_entry\x12\x17\n" +
	"\x03cet\x18\x01 \x02(\x04B\x05\x92~\x02\b\x01R\x03cet\x12\x17\n" +
	"\x03ssp\x18\x02 \x02(\x04B\x05\x92~\x02\b\x01R\x03ssp\"\xaa\x02\n" +
	"\x14user_x86_xsave_entry\x12\x1b\n" +
	"\txstate_bv\x18\x01 \x02(\x04R\bxstateBv\x12\x1d\n" +
	"\n" +
	"ymmh_space\x18\x02 \x03(\rR\tymmhSpace\x12!\n" +
	"\fbndreg_state\x18\x03 \x03(\x04R\vbndregState\x12!\n" +
	"\fbndcsr_state\x18\x04 \x03(\x04R\vbndcsrState\x12\x1d\n" +
	"\n" +
	"opmask_reg\x18\x05 \x03(\x04R\topmaskReg\x12\x1b\n" +
	"\tzmm_upper\x18\x06 \x03(\x04R\bzmmUpper\x12\x19\n" +
	"\bhi16_zmm\x18\a \x03(\x04R\ahi16Zmm\x12\x12\n" +
	"\x04pkru\x18\b \x03(\rR\x04pkru\x12%\n" +
	"\x03cet\x18\t \x01(\v2\x13.user_x86_cet_entryR\x03cet\"\xb7\x02\n" +
	"\x15user_x86_fpregs_entry\x12\x10\n" +
	"\x03cwd\x18\x01 \x02(\rR\x03cwd\x12\x10\n" +
	"\x03swd\x18\x02 \x02(\rR\x03swd\x12\x10\n" +
	"\x03twd\x18\x03 \x02(\rR\x03twd\x12\x10\n" +
	"\x03fop\x18\x04 \x02(\rR\x03fop\x12\x10\n" +
	"\x03rip\x18\x05 \x02(\x04R\x03rip\x12\x10\n" +
	"\x03rdp\x18\x06 \x02(\x04R\x03rdp\x12\x14\n" +
	"\x05mxcsr\x18\a \x02(\rR\x05mxcsr\x12\x1d\n" +
	"\n" +
	"mxcsr_mask\x18\b \x02(\rR\tmxcsrMask\x12\x19\n" +
	"\bst_space\x18\t \x03(\rR\astSpace\x12\x1b\n" +
	"\txmm_space\x18\n" +
	" \x03(\rR\bxmmSpace\x12\x18\n" +
	"\apadding\x18\v \x03(\rR\apadding\x12+\n" +
	"\x05xsave\x18\r \x01(\v2\x15.user_x86_xsave_entryR\x05xsave\"\xd6\x02\n" +
	"\vuser_desc_t\x12!\n" +
	"\fentry_number\x18\x01 \x02(\rR\ventryNumber\x12\x1b\n" +
	"\tbase_addr\x18\x02 \x02(\rR\bbaseAddr\x12\x14\n" +
	"\x05limit\x18\x03 \x02(\rR\x05limit\x12\x1b\n" +
	"\tseg_32bit\x18\x04 \x02(\bR\bseg32bit\x12\x1d\n" +
	"\n" +
	"contents_h\x18\x05 \x02(\bR\tcontentsH\x12\x1d\n" +
	"\n" +
	"contents_l\x18\x06 \x02(\bR\tcontentsL\x12*\n" +
	"\x0eread_exec_only\x18\a \x02(\b:\x04trueR\freadExecOnly\x12$\n" +
	"\x0elimit_in_pages\x18\b \x02(\bR\flimitInPages\x12,\n" +
	"\x0fseg_not_present\x18\t \x02(\b:\x04trueR\rsegNotPresent\x12\x16\n" +
	"\x06usable\x18\n" +
	" \x02(\bR\x06usable\"\xc3\x01\n" +
	"\x0fthread_info_x86\x12+\n" +
	"\x0eclear_tid_addr\x18\x01 \x02(\x04B\x05\x92~\x02\b\x01R\fclearTidAddr\x123\n" +
	"\x06gpregs\x18\x02 \x02(\v2\x14.user_x86_regs_entryB\x05\x92~\x02\b\x01R\x06gpregs\x12.\n" +
	"\x06fpregs\x18\x03 \x02(\v2\x16.user_x86_fpregs_entryR\x06fpregs\x12\x1e\n" +
	"\x03tls\x18\x04 \x03(\v2\f.user_desc_tR\x03tls*,\n" +
	"\x12user_x86_regs_mode\x12\n" +
	"\n" +
	"\x06NATIVE\x10\x01\x12\n" +
	"\n" +
	"\x06COMPAT\x10\x02"

var (
	file_core_x86_proto_rawDescOnce sync.Once
	file_core_x86_proto_rawDescData []byte
)

func file_core_x86_proto_rawDescGZIP() []byte {
	file_core_x86_proto_rawDescOnce.Do(func() {
		file_core_x86_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_x86_proto_rawDesc), len(file_core_x86_proto_rawDesc)))
	})
	return file_core_x86_proto_rawDescData
}

var file_core_x86_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_core_x86_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_core_x86_proto_goTypes = []any{
	(UserX86RegsMode)(0),       // 0: user_x86_regs_mode
	(*UserX86RegsEntry)(nil),   // 1: user_x86_regs_entry
	(*UserX86CetEntry)(nil),    // 2: user_x86_cet_entry
	(*UserX86XsaveEntry)(nil),  // 3: user_x86_xsave_entry
	(*UserX86FpregsEntry)(nil), // 4: user_x86_fpregs_entry
	(*UserDescT)(nil),          // 5: user_desc_t
	(*ThreadInfoX86)(nil),      // 6: thread_info_x86
}
var file_core_x86_proto_depIdxs = []int32{
	0, // 0: user_x86_regs_entry.mode:type_name -> user_x86_regs_mode
	2, // 1: user_x86_xsave_entry.cet:type_name -> user_x86_cet_entry
	3, // 2: user_x86_fpregs_entry.xsave:type_name -> user_x86_xsave_entry
	1, // 3: thread_info_x86.gpregs:type_name -> user_x86_regs_entry
	4, // 4: thread_info_x86.fpregs:type_name -> user_x86_fpregs_entry
	5, // 5: thread_info_x86.tls:type_name -> user_desc_t
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_core_x86_proto_init() }
func file_core_x86_proto_init() {
	if File_core_x86_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_x86_proto_rawDesc), len(file_core_x86_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_x86_proto_goTypes,
		DependencyIndexes: file_core_x86_proto_depIdxs,
		EnumInfos:         file_core_x86_proto_enumTypes,
		MessageInfos:      file_core_x86_proto_msgTypes,
	}.Build()
	File_core_x86_proto = out.File
	file_core_x86_proto_goTypes = nil
	file_core_x86_proto_depIdxs = nil
}
