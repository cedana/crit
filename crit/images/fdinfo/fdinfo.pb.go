// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: fdinfo.proto

package fdinfo

import (
	bpfmap_file "github.com/cedana/go-criu/v7/crit/images/bpfmap-file"
	eventfd "github.com/cedana/go-criu/v7/crit/images/eventfd"
	eventpoll "github.com/cedana/go-criu/v7/crit/images/eventpoll"
	ext_file "github.com/cedana/go-criu/v7/crit/images/ext-file"
	fifo "github.com/cedana/go-criu/v7/crit/images/fifo"
	fsnotify "github.com/cedana/go-criu/v7/crit/images/fsnotify"
	memfd "github.com/cedana/go-criu/v7/crit/images/memfd"
	ns "github.com/cedana/go-criu/v7/crit/images/ns"
	packet_sock "github.com/cedana/go-criu/v7/crit/images/packet-sock"
	pidfd "github.com/cedana/go-criu/v7/crit/images/pidfd"
	pipe "github.com/cedana/go-criu/v7/crit/images/pipe"
	regfile "github.com/cedana/go-criu/v7/crit/images/regfile"
	signalfd "github.com/cedana/go-criu/v7/crit/images/signalfd"
	sk_inet "github.com/cedana/go-criu/v7/crit/images/sk-inet"
	sk_netlink "github.com/cedana/go-criu/v7/crit/images/sk-netlink"
	sk_unix "github.com/cedana/go-criu/v7/crit/images/sk-unix"
	timerfd "github.com/cedana/go-criu/v7/crit/images/timerfd"
	tty "github.com/cedana/go-criu/v7/crit/images/tty"
	tun "github.com/cedana/go-criu/v7/crit/images/tun"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FdTypes int32

const (
	FdTypes_UND       FdTypes = 0
	FdTypes_REG       FdTypes = 1
	FdTypes_PIPE      FdTypes = 2
	FdTypes_FIFO      FdTypes = 3
	FdTypes_INETSK    FdTypes = 4
	FdTypes_UNIXSK    FdTypes = 5
	FdTypes_EVENTFD   FdTypes = 6
	FdTypes_EVENTPOLL FdTypes = 7
	FdTypes_INOTIFY   FdTypes = 8
	FdTypes_SIGNALFD  FdTypes = 9
	FdTypes_PACKETSK  FdTypes = 10
	FdTypes_TTY       FdTypes = 11
	FdTypes_FANOTIFY  FdTypes = 12
	FdTypes_NETLINKSK FdTypes = 13
	FdTypes_NS        FdTypes = 14
	FdTypes_TUNF      FdTypes = 15
	FdTypes_EXT       FdTypes = 16
	FdTypes_TIMERFD   FdTypes = 17
	FdTypes_MEMFD     FdTypes = 18
	FdTypes_BPFMAP    FdTypes = 19
	FdTypes_PIDFD     FdTypes = 20
	// Any number above the real used. Not stored to image
	FdTypes_CTL_TTY     FdTypes = 65534
	FdTypes_AUTOFS_PIPE FdTypes = 65535
)

// Enum value maps for FdTypes.
var (
	FdTypes_name = map[int32]string{
		0:     "UND",
		1:     "REG",
		2:     "PIPE",
		3:     "FIFO",
		4:     "INETSK",
		5:     "UNIXSK",
		6:     "EVENTFD",
		7:     "EVENTPOLL",
		8:     "INOTIFY",
		9:     "SIGNALFD",
		10:    "PACKETSK",
		11:    "TTY",
		12:    "FANOTIFY",
		13:    "NETLINKSK",
		14:    "NS",
		15:    "TUNF",
		16:    "EXT",
		17:    "TIMERFD",
		18:    "MEMFD",
		19:    "BPFMAP",
		20:    "PIDFD",
		65534: "CTL_TTY",
		65535: "AUTOFS_PIPE",
	}
	FdTypes_value = map[string]int32{
		"UND":         0,
		"REG":         1,
		"PIPE":        2,
		"FIFO":        3,
		"INETSK":      4,
		"UNIXSK":      5,
		"EVENTFD":     6,
		"EVENTPOLL":   7,
		"INOTIFY":     8,
		"SIGNALFD":    9,
		"PACKETSK":    10,
		"TTY":         11,
		"FANOTIFY":    12,
		"NETLINKSK":   13,
		"NS":          14,
		"TUNF":        15,
		"EXT":         16,
		"TIMERFD":     17,
		"MEMFD":       18,
		"BPFMAP":      19,
		"PIDFD":       20,
		"CTL_TTY":     65534,
		"AUTOFS_PIPE": 65535,
	}
)

func (x FdTypes) Enum() *FdTypes {
	p := new(FdTypes)
	*p = x
	return p
}

func (x FdTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FdTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_fdinfo_proto_enumTypes[0].Descriptor()
}

func (FdTypes) Type() protoreflect.EnumType {
	return &file_fdinfo_proto_enumTypes[0]
}

func (x FdTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FdTypes) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FdTypes(num)
	return nil
}

// Deprecated: Use FdTypes.Descriptor instead.
func (FdTypes) EnumDescriptor() ([]byte, []int) {
	return file_fdinfo_proto_rawDescGZIP(), []int{0}
}

type FdinfoEntry struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   *uint32                `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Flags                *uint32                `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	Type                 *FdTypes               `protobuf:"varint,3,req,name=type,enum=FdTypes" json:"type,omitempty"`
	Fd                   *uint32                `protobuf:"varint,4,req,name=fd" json:"fd,omitempty"`
	XattrSecuritySelinux *string                `protobuf:"bytes,5,opt,name=xattr_security_selinux,json=xattrSecuritySelinux" json:"xattr_security_selinux,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FdinfoEntry) Reset() {
	*x = FdinfoEntry{}
	mi := &file_fdinfo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FdinfoEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FdinfoEntry) ProtoMessage() {}

func (x *FdinfoEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fdinfo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FdinfoEntry.ProtoReflect.Descriptor instead.
func (*FdinfoEntry) Descriptor() ([]byte, []int) {
	return file_fdinfo_proto_rawDescGZIP(), []int{0}
}

func (x *FdinfoEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FdinfoEntry) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *FdinfoEntry) GetType() FdTypes {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return FdTypes_UND
}

func (x *FdinfoEntry) GetFd() uint32 {
	if x != nil && x.Fd != nil {
		return *x.Fd
	}
	return 0
}

func (x *FdinfoEntry) GetXattrSecuritySelinux() string {
	if x != nil && x.XattrSecuritySelinux != nil {
		return *x.XattrSecuritySelinux
	}
	return ""
}

type FileEntry struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Type          *FdTypes                      `protobuf:"varint,1,req,name=type,enum=FdTypes" json:"type,omitempty"`
	Id            *uint32                       `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Reg           *regfile.RegFileEntry         `protobuf:"bytes,3,opt,name=reg" json:"reg,omitempty"`
	Isk           *sk_inet.InetSkEntry          `protobuf:"bytes,4,opt,name=isk" json:"isk,omitempty"`
	Nsf           *ns.NsFileEntry               `protobuf:"bytes,5,opt,name=nsf" json:"nsf,omitempty"`
	Psk           *packet_sock.PacketSockEntry  `protobuf:"bytes,6,opt,name=psk" json:"psk,omitempty"`
	Nlsk          *sk_netlink.NetlinkSkEntry    `protobuf:"bytes,7,opt,name=nlsk" json:"nlsk,omitempty"`
	Efd           *eventfd.EventfdFileEntry     `protobuf:"bytes,8,opt,name=efd" json:"efd,omitempty"`
	Epfd          *eventpoll.EventpollFileEntry `protobuf:"bytes,9,opt,name=epfd" json:"epfd,omitempty"`
	Sgfd          *signalfd.SignalfdEntry       `protobuf:"bytes,10,opt,name=sgfd" json:"sgfd,omitempty"`
	Tunf          *tun.TunfileEntry             `protobuf:"bytes,11,opt,name=tunf" json:"tunf,omitempty"`
	Tfd           *timerfd.TimerfdEntry         `protobuf:"bytes,12,opt,name=tfd" json:"tfd,omitempty"`
	Ify           *fsnotify.InotifyFileEntry    `protobuf:"bytes,13,opt,name=ify" json:"ify,omitempty"`
	Ffy           *fsnotify.FanotifyFileEntry   `protobuf:"bytes,14,opt,name=ffy" json:"ffy,omitempty"`
	Ext           *ext_file.ExtFileEntry        `protobuf:"bytes,15,opt,name=ext" json:"ext,omitempty"`
	Usk           *sk_unix.UnixSkEntry          `protobuf:"bytes,16,opt,name=usk" json:"usk,omitempty"`
	Fifo          *fifo.FifoEntry               `protobuf:"bytes,17,opt,name=fifo" json:"fifo,omitempty"`
	Pipe          *pipe.PipeEntry               `protobuf:"bytes,18,opt,name=pipe" json:"pipe,omitempty"`
	Tty           *tty.TtyFileEntry             `protobuf:"bytes,19,opt,name=tty" json:"tty,omitempty"`
	Memfd         *memfd.MemfdFileEntry         `protobuf:"bytes,20,opt,name=memfd" json:"memfd,omitempty"`
	Bpf           *bpfmap_file.BpfmapFileEntry  `protobuf:"bytes,21,opt,name=bpf" json:"bpf,omitempty"`
	Pidfd         *pidfd.PidfdEntry             `protobuf:"bytes,22,opt,name=pidfd" json:"pidfd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileEntry) Reset() {
	*x = FileEntry{}
	mi := &file_fdinfo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEntry) ProtoMessage() {}

func (x *FileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fdinfo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEntry.ProtoReflect.Descriptor instead.
func (*FileEntry) Descriptor() ([]byte, []int) {
	return file_fdinfo_proto_rawDescGZIP(), []int{1}
}

func (x *FileEntry) GetType() FdTypes {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return FdTypes_UND
}

func (x *FileEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FileEntry) GetReg() *regfile.RegFileEntry {
	if x != nil {
		return x.Reg
	}
	return nil
}

func (x *FileEntry) GetIsk() *sk_inet.InetSkEntry {
	if x != nil {
		return x.Isk
	}
	return nil
}

func (x *FileEntry) GetNsf() *ns.NsFileEntry {
	if x != nil {
		return x.Nsf
	}
	return nil
}

func (x *FileEntry) GetPsk() *packet_sock.PacketSockEntry {
	if x != nil {
		return x.Psk
	}
	return nil
}

func (x *FileEntry) GetNlsk() *sk_netlink.NetlinkSkEntry {
	if x != nil {
		return x.Nlsk
	}
	return nil
}

func (x *FileEntry) GetEfd() *eventfd.EventfdFileEntry {
	if x != nil {
		return x.Efd
	}
	return nil
}

func (x *FileEntry) GetEpfd() *eventpoll.EventpollFileEntry {
	if x != nil {
		return x.Epfd
	}
	return nil
}

func (x *FileEntry) GetSgfd() *signalfd.SignalfdEntry {
	if x != nil {
		return x.Sgfd
	}
	return nil
}

func (x *FileEntry) GetTunf() *tun.TunfileEntry {
	if x != nil {
		return x.Tunf
	}
	return nil
}

func (x *FileEntry) GetTfd() *timerfd.TimerfdEntry {
	if x != nil {
		return x.Tfd
	}
	return nil
}

func (x *FileEntry) GetIfy() *fsnotify.InotifyFileEntry {
	if x != nil {
		return x.Ify
	}
	return nil
}

func (x *FileEntry) GetFfy() *fsnotify.FanotifyFileEntry {
	if x != nil {
		return x.Ffy
	}
	return nil
}

func (x *FileEntry) GetExt() *ext_file.ExtFileEntry {
	if x != nil {
		return x.Ext
	}
	return nil
}

func (x *FileEntry) GetUsk() *sk_unix.UnixSkEntry {
	if x != nil {
		return x.Usk
	}
	return nil
}

func (x *FileEntry) GetFifo() *fifo.FifoEntry {
	if x != nil {
		return x.Fifo
	}
	return nil
}

func (x *FileEntry) GetPipe() *pipe.PipeEntry {
	if x != nil {
		return x.Pipe
	}
	return nil
}

func (x *FileEntry) GetTty() *tty.TtyFileEntry {
	if x != nil {
		return x.Tty
	}
	return nil
}

func (x *FileEntry) GetMemfd() *memfd.MemfdFileEntry {
	if x != nil {
		return x.Memfd
	}
	return nil
}

func (x *FileEntry) GetBpf() *bpfmap_file.BpfmapFileEntry {
	if x != nil {
		return x.Bpf
	}
	return nil
}

func (x *FileEntry) GetPidfd() *pidfd.PidfdEntry {
	if x != nil {
		return x.Pidfd
	}
	return nil
}

var File_fdinfo_proto protoreflect.FileDescriptor

const file_fdinfo_proto_rawDesc = "" +
	"\n" +
	"\ffdinfo.proto\x1a\rregfile.proto\x1a\rsk-inet.proto\x1a\bns.proto\x1a\x11packet-sock.proto\x1a\x10sk-netlink.proto\x1a\reventfd.proto\x1a\x0feventpoll.proto\x1a\x0esignalfd.proto\x1a\ttun.proto\x1a\rtimerfd.proto\x1a\x0efsnotify.proto\x1a\x0eext-file.proto\x1a\rsk-unix.proto\x1a\n" +
	"fifo.proto\x1a\n" +
	"pipe.proto\x1a\vpidfd.proto\x1a\ttty.proto\x1a\vmemfd.proto\x1a\x11bpfmap-file.proto\"\x99\x01\n" +
	"\ffdinfo_entry\x12\x0e\n" +
	"\x02id\x18\x01 \x02(\rR\x02id\x12\x14\n" +
	"\x05flags\x18\x02 \x02(\rR\x05flags\x12\x1d\n" +
	"\x04type\x18\x03 \x02(\x0e2\t.fd_typesR\x04type\x12\x0e\n" +
	"\x02fd\x18\x04 \x02(\rR\x02fd\x124\n" +
	"\x16xattr_security_selinux\x18\x05 \x01(\tR\x14xattrSecuritySelinux\"\x98\x06\n" +
	"\n" +
	"file_entry\x12\x1d\n" +
	"\x04type\x18\x01 \x02(\x0e2\t.fd_typesR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x02(\rR\x02id\x12!\n" +
	"\x03reg\x18\x03 \x01(\v2\x0f.reg_file_entryR\x03reg\x12 \n" +
	"\x03isk\x18\x04 \x01(\v2\x0e.inet_sk_entryR\x03isk\x12 \n" +
	"\x03nsf\x18\x05 \x01(\v2\x0e.ns_file_entryR\x03nsf\x12$\n" +
	"\x03psk\x18\x06 \x01(\v2\x12.packet_sock_entryR\x03psk\x12%\n" +
	"\x04nlsk\x18\a \x01(\v2\x11.netlink_sk_entryR\x04nlsk\x12%\n" +
	"\x03efd\x18\b \x01(\v2\x13.eventfd_file_entryR\x03efd\x12)\n" +
	"\x04epfd\x18\t \x01(\v2\x15.eventpoll_file_entryR\x04epfd\x12#\n" +
	"\x04sgfd\x18\n" +
	" \x01(\v2\x0f.signalfd_entryR\x04sgfd\x12\"\n" +
	"\x04tunf\x18\v \x01(\v2\x0e.tunfile_entryR\x04tunf\x12 \n" +
	"\x03tfd\x18\f \x01(\v2\x0e.timerfd_entryR\x03tfd\x12%\n" +
	"\x03ify\x18\r \x01(\v2\x13.inotify_file_entryR\x03ify\x12&\n" +
	"\x03ffy\x18\x0e \x01(\v2\x14.fanotify_file_entryR\x03ffy\x12!\n" +
	"\x03ext\x18\x0f \x01(\v2\x0f.ext_file_entryR\x03ext\x12 \n" +
	"\x03usk\x18\x10 \x01(\v2\x0e.unix_sk_entryR\x03usk\x12\x1f\n" +
	"\x04fifo\x18\x11 \x01(\v2\v.fifo_entryR\x04fifo\x12\x1f\n" +
	"\x04pipe\x18\x12 \x01(\v2\v.pipe_entryR\x04pipe\x12!\n" +
	"\x03tty\x18\x13 \x01(\v2\x0f.tty_file_entryR\x03tty\x12'\n" +
	"\x05memfd\x18\x14 \x01(\v2\x11.memfd_file_entryR\x05memfd\x12$\n" +
	"\x03bpf\x18\x15 \x01(\v2\x12.bpfmap_file_entryR\x03bpf\x12\"\n" +
	"\x05pidfd\x18\x16 \x01(\v2\f.pidfd_entryR\x05pidfd*\x9f\x02\n" +
	"\bfd_types\x12\a\n" +
	"\x03UND\x10\x00\x12\a\n" +
	"\x03REG\x10\x01\x12\b\n" +
	"\x04PIPE\x10\x02\x12\b\n" +
	"\x04FIFO\x10\x03\x12\n" +
	"\n" +
	"\x06INETSK\x10\x04\x12\n" +
	"\n" +
	"\x06UNIXSK\x10\x05\x12\v\n" +
	"\aEVENTFD\x10\x06\x12\r\n" +
	"\tEVENTPOLL\x10\a\x12\v\n" +
	"\aINOTIFY\x10\b\x12\f\n" +
	"\bSIGNALFD\x10\t\x12\f\n" +
	"\bPACKETSK\x10\n" +
	"\x12\a\n" +
	"\x03TTY\x10\v\x12\f\n" +
	"\bFANOTIFY\x10\f\x12\r\n" +
	"\tNETLINKSK\x10\r\x12\x06\n" +
	"\x02NS\x10\x0e\x12\b\n" +
	"\x04TUNF\x10\x0f\x12\a\n" +
	"\x03EXT\x10\x10\x12\v\n" +
	"\aTIMERFD\x10\x11\x12\t\n" +
	"\x05MEMFD\x10\x12\x12\n" +
	"\n" +
	"\x06BPFMAP\x10\x13\x12\t\n" +
	"\x05PIDFD\x10\x14\x12\r\n" +
	"\aCTL_TTY\x10\xfe\xff\x03\x12\x11\n" +
	"\vAUTOFS_PIPE\x10\xff\xff\x03"

var (
	file_fdinfo_proto_rawDescOnce sync.Once
	file_fdinfo_proto_rawDescData []byte
)

func file_fdinfo_proto_rawDescGZIP() []byte {
	file_fdinfo_proto_rawDescOnce.Do(func() {
		file_fdinfo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fdinfo_proto_rawDesc), len(file_fdinfo_proto_rawDesc)))
	})
	return file_fdinfo_proto_rawDescData
}

var file_fdinfo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fdinfo_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fdinfo_proto_goTypes = []any{
	(FdTypes)(0),                         // 0: fd_types
	(*FdinfoEntry)(nil),                  // 1: fdinfo_entry
	(*FileEntry)(nil),                    // 2: file_entry
	(*regfile.RegFileEntry)(nil),         // 3: reg_file_entry
	(*sk_inet.InetSkEntry)(nil),          // 4: inet_sk_entry
	(*ns.NsFileEntry)(nil),               // 5: ns_file_entry
	(*packet_sock.PacketSockEntry)(nil),  // 6: packet_sock_entry
	(*sk_netlink.NetlinkSkEntry)(nil),    // 7: netlink_sk_entry
	(*eventfd.EventfdFileEntry)(nil),     // 8: eventfd_file_entry
	(*eventpoll.EventpollFileEntry)(nil), // 9: eventpoll_file_entry
	(*signalfd.SignalfdEntry)(nil),       // 10: signalfd_entry
	(*tun.TunfileEntry)(nil),             // 11: tunfile_entry
	(*timerfd.TimerfdEntry)(nil),         // 12: timerfd_entry
	(*fsnotify.InotifyFileEntry)(nil),    // 13: inotify_file_entry
	(*fsnotify.FanotifyFileEntry)(nil),   // 14: fanotify_file_entry
	(*ext_file.ExtFileEntry)(nil),        // 15: ext_file_entry
	(*sk_unix.UnixSkEntry)(nil),          // 16: unix_sk_entry
	(*fifo.FifoEntry)(nil),               // 17: fifo_entry
	(*pipe.PipeEntry)(nil),               // 18: pipe_entry
	(*tty.TtyFileEntry)(nil),             // 19: tty_file_entry
	(*memfd.MemfdFileEntry)(nil),         // 20: memfd_file_entry
	(*bpfmap_file.BpfmapFileEntry)(nil),  // 21: bpfmap_file_entry
	(*pidfd.PidfdEntry)(nil),             // 22: pidfd_entry
}
var file_fdinfo_proto_depIdxs = []int32{
	0,  // 0: fdinfo_entry.type:type_name -> fd_types
	0,  // 1: file_entry.type:type_name -> fd_types
	3,  // 2: file_entry.reg:type_name -> reg_file_entry
	4,  // 3: file_entry.isk:type_name -> inet_sk_entry
	5,  // 4: file_entry.nsf:type_name -> ns_file_entry
	6,  // 5: file_entry.psk:type_name -> packet_sock_entry
	7,  // 6: file_entry.nlsk:type_name -> netlink_sk_entry
	8,  // 7: file_entry.efd:type_name -> eventfd_file_entry
	9,  // 8: file_entry.epfd:type_name -> eventpoll_file_entry
	10, // 9: file_entry.sgfd:type_name -> signalfd_entry
	11, // 10: file_entry.tunf:type_name -> tunfile_entry
	12, // 11: file_entry.tfd:type_name -> timerfd_entry
	13, // 12: file_entry.ify:type_name -> inotify_file_entry
	14, // 13: file_entry.ffy:type_name -> fanotify_file_entry
	15, // 14: file_entry.ext:type_name -> ext_file_entry
	16, // 15: file_entry.usk:type_name -> unix_sk_entry
	17, // 16: file_entry.fifo:type_name -> fifo_entry
	18, // 17: file_entry.pipe:type_name -> pipe_entry
	19, // 18: file_entry.tty:type_name -> tty_file_entry
	20, // 19: file_entry.memfd:type_name -> memfd_file_entry
	21, // 20: file_entry.bpf:type_name -> bpfmap_file_entry
	22, // 21: file_entry.pidfd:type_name -> pidfd_entry
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_fdinfo_proto_init() }
func file_fdinfo_proto_init() {
	if File_fdinfo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fdinfo_proto_rawDesc), len(file_fdinfo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fdinfo_proto_goTypes,
		DependencyIndexes: file_fdinfo_proto_depIdxs,
		EnumInfos:         file_fdinfo_proto_enumTypes,
		MessageInfos:      file_fdinfo_proto_msgTypes,
	}.Build()
	File_fdinfo_proto = out.File
	file_fdinfo_proto_goTypes = nil
	file_fdinfo_proto_depIdxs = nil
}
