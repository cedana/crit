// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: eventpoll.proto

package eventpoll

import (
	fown "github.com/cedana/go-criu/v7/crit/images/fown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventpollTfdEntry struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     *uint32                `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Tfd    *uint32                `protobuf:"varint,2,req,name=tfd" json:"tfd,omitempty"`
	Events *uint32                `protobuf:"varint,3,req,name=events" json:"events,omitempty"`
	Data   *uint64                `protobuf:"varint,4,req,name=data" json:"data,omitempty"`
	// to find dup'ed target files
	Dev           *uint32 `protobuf:"varint,5,opt,name=dev" json:"dev,omitempty"`
	Inode         *uint64 `protobuf:"varint,6,opt,name=inode" json:"inode,omitempty"`
	Pos           *uint64 `protobuf:"varint,7,opt,name=pos" json:"pos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventpollTfdEntry) Reset() {
	*x = EventpollTfdEntry{}
	mi := &file_eventpoll_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventpollTfdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventpollTfdEntry) ProtoMessage() {}

func (x *EventpollTfdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_eventpoll_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventpollTfdEntry.ProtoReflect.Descriptor instead.
func (*EventpollTfdEntry) Descriptor() ([]byte, []int) {
	return file_eventpoll_proto_rawDescGZIP(), []int{0}
}

func (x *EventpollTfdEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EventpollTfdEntry) GetTfd() uint32 {
	if x != nil && x.Tfd != nil {
		return *x.Tfd
	}
	return 0
}

func (x *EventpollTfdEntry) GetEvents() uint32 {
	if x != nil && x.Events != nil {
		return *x.Events
	}
	return 0
}

func (x *EventpollTfdEntry) GetData() uint64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

func (x *EventpollTfdEntry) GetDev() uint32 {
	if x != nil && x.Dev != nil {
		return *x.Dev
	}
	return 0
}

func (x *EventpollTfdEntry) GetInode() uint64 {
	if x != nil && x.Inode != nil {
		return *x.Inode
	}
	return 0
}

func (x *EventpollTfdEntry) GetPos() uint64 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

type EventpollFileEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Flags         *uint32                `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	Fown          *fown.FownEntry        `protobuf:"bytes,3,req,name=fown" json:"fown,omitempty"`
	Tfd           []*EventpollTfdEntry   `protobuf:"bytes,4,rep,name=tfd" json:"tfd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventpollFileEntry) Reset() {
	*x = EventpollFileEntry{}
	mi := &file_eventpoll_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventpollFileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventpollFileEntry) ProtoMessage() {}

func (x *EventpollFileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_eventpoll_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventpollFileEntry.ProtoReflect.Descriptor instead.
func (*EventpollFileEntry) Descriptor() ([]byte, []int) {
	return file_eventpoll_proto_rawDescGZIP(), []int{1}
}

func (x *EventpollFileEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EventpollFileEntry) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *EventpollFileEntry) GetFown() *fown.FownEntry {
	if x != nil {
		return x.Fown
	}
	return nil
}

func (x *EventpollFileEntry) GetTfd() []*EventpollTfdEntry {
	if x != nil {
		return x.Tfd
	}
	return nil
}

var File_eventpoll_proto protoreflect.FileDescriptor

const file_eventpoll_proto_rawDesc = "" +
	"\n" +
	"\x0feventpoll.proto\x1a\n" +
	"fown.proto\"\x9d\x01\n" +
	"\x13eventpoll_tfd_entry\x12\x0e\n" +
	"\x02id\x18\x01 \x02(\rR\x02id\x12\x10\n" +
	"\x03tfd\x18\x02 \x02(\rR\x03tfd\x12\x16\n" +
	"\x06events\x18\x03 \x02(\rR\x06events\x12\x12\n" +
	"\x04data\x18\x04 \x02(\x04R\x04data\x12\x10\n" +
	"\x03dev\x18\x05 \x01(\rR\x03dev\x12\x14\n" +
	"\x05inode\x18\x06 \x01(\x04R\x05inode\x12\x10\n" +
	"\x03pos\x18\a \x01(\x04R\x03pos\"\x85\x01\n" +
	"\x14eventpoll_file_entry\x12\x0e\n" +
	"\x02id\x18\x01 \x02(\rR\x02id\x12\x14\n" +
	"\x05flags\x18\x02 \x02(\rR\x05flags\x12\x1f\n" +
	"\x04fown\x18\x03 \x02(\v2\v.fown_entryR\x04fown\x12&\n" +
	"\x03tfd\x18\x04 \x03(\v2\x14.eventpoll_tfd_entryR\x03tfd"

var (
	file_eventpoll_proto_rawDescOnce sync.Once
	file_eventpoll_proto_rawDescData []byte
)

func file_eventpoll_proto_rawDescGZIP() []byte {
	file_eventpoll_proto_rawDescOnce.Do(func() {
		file_eventpoll_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eventpoll_proto_rawDesc), len(file_eventpoll_proto_rawDesc)))
	})
	return file_eventpoll_proto_rawDescData
}

var file_eventpoll_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_eventpoll_proto_goTypes = []any{
	(*EventpollTfdEntry)(nil),  // 0: eventpoll_tfd_entry
	(*EventpollFileEntry)(nil), // 1: eventpoll_file_entry
	(*fown.FownEntry)(nil),     // 2: fown_entry
}
var file_eventpoll_proto_depIdxs = []int32{
	2, // 0: eventpoll_file_entry.fown:type_name -> fown_entry
	0, // 1: eventpoll_file_entry.tfd:type_name -> eventpoll_tfd_entry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_eventpoll_proto_init() }
func file_eventpoll_proto_init() {
	if File_eventpoll_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eventpoll_proto_rawDesc), len(file_eventpoll_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eventpoll_proto_goTypes,
		DependencyIndexes: file_eventpoll_proto_depIdxs,
		MessageInfos:      file_eventpoll_proto_msgTypes,
	}.Build()
	File_eventpoll_proto = out.File
	file_eventpoll_proto_goTypes = nil
	file_eventpoll_proto_depIdxs = nil
}
