// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: regfile.proto

package regfile

import (
	fown "github.com/cedana/go-criu/v7/crit/images/fown"
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegFileEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    *uint32                `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Flags *uint32                `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	Pos   *uint64                `protobuf:"varint,3,req,name=pos" json:"pos,omitempty"`
	Fown  *fown.FownEntry        `protobuf:"bytes,5,req,name=fown" json:"fown,omitempty"`
	Name  *string                `protobuf:"bytes,6,req,name=name" json:"name,omitempty"`
	MntId *int32                 `protobuf:"zigzag32,7,opt,name=mnt_id,json=mntId,def=-1" json:"mnt_id,omitempty"`
	Size  *uint64                `protobuf:"varint,8,opt,name=size" json:"size,omitempty"`
	Ext   *bool                  `protobuf:"varint,9,opt,name=ext" json:"ext,omitempty"`
	Mode  *uint32                `protobuf:"varint,10,opt,name=mode" json:"mode,omitempty"`
	// This field stores the build-ID of the file if it could be obtained.
	BuildId []uint32 `protobuf:"varint,11,rep,name=build_id,json=buildId" json:"build_id,omitempty"`
	// This field stores the CRC32C checksum of the file if it could be obtained.
	Checksum *uint32 `protobuf:"varint,12,opt,name=checksum" json:"checksum,omitempty"`
	// This field stores the configuration of bytes which were used in the
	// calculation of the checksum, if it could be obtained.
	ChecksumConfig *uint32 `protobuf:"varint,13,opt,name=checksum_config,json=checksumConfig" json:"checksum_config,omitempty"`
	// This field stores the checksum parameter if it was used in the calculation
	// of the checksum, if it could be obtained.
	ChecksumParameter *uint32 `protobuf:"varint,14,opt,name=checksum_parameter,json=checksumParameter" json:"checksum_parameter,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for RegFileEntry fields.
const (
	Default_RegFileEntry_MntId = int32(-1)
)

func (x *RegFileEntry) Reset() {
	*x = RegFileEntry{}
	mi := &file_regfile_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegFileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegFileEntry) ProtoMessage() {}

func (x *RegFileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_regfile_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegFileEntry.ProtoReflect.Descriptor instead.
func (*RegFileEntry) Descriptor() ([]byte, []int) {
	return file_regfile_proto_rawDescGZIP(), []int{0}
}

func (x *RegFileEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RegFileEntry) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *RegFileEntry) GetPos() uint64 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *RegFileEntry) GetFown() *fown.FownEntry {
	if x != nil {
		return x.Fown
	}
	return nil
}

func (x *RegFileEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RegFileEntry) GetMntId() int32 {
	if x != nil && x.MntId != nil {
		return *x.MntId
	}
	return Default_RegFileEntry_MntId
}

func (x *RegFileEntry) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *RegFileEntry) GetExt() bool {
	if x != nil && x.Ext != nil {
		return *x.Ext
	}
	return false
}

func (x *RegFileEntry) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *RegFileEntry) GetBuildId() []uint32 {
	if x != nil {
		return x.BuildId
	}
	return nil
}

func (x *RegFileEntry) GetChecksum() uint32 {
	if x != nil && x.Checksum != nil {
		return *x.Checksum
	}
	return 0
}

func (x *RegFileEntry) GetChecksumConfig() uint32 {
	if x != nil && x.ChecksumConfig != nil {
		return *x.ChecksumConfig
	}
	return 0
}

func (x *RegFileEntry) GetChecksumParameter() uint32 {
	if x != nil && x.ChecksumParameter != nil {
		return *x.ChecksumParameter
	}
	return 0
}

var File_regfile_proto protoreflect.FileDescriptor

const file_regfile_proto_rawDesc = "" +
	"\n" +
	"\rregfile.proto\x1a\n" +
	"opts.proto\x1a\n" +
	"fown.proto\"\xf3\x02\n" +
	"\x0ereg_file_entry\x12\x0e\n" +
	"\x02id\x18\x01 \x02(\rR\x02id\x12&\n" +
	"\x05flags\x18\x02 \x02(\rB\x10\x92~\r\x1a\vrfile.flagsR\x05flags\x12\x10\n" +
	"\x03pos\x18\x03 \x02(\x04R\x03pos\x12\x1f\n" +
	"\x04fown\x18\x05 \x02(\v2\v.fown_entryR\x04fown\x12\x12\n" +
	"\x04name\x18\x06 \x02(\tR\x04name\x12\x19\n" +
	"\x06mnt_id\x18\a \x01(\x11:\x02-1R\x05mntId\x12\x12\n" +
	"\x04size\x18\b \x01(\x04R\x04size\x12\x10\n" +
	"\x03ext\x18\t \x01(\bR\x03ext\x12\x12\n" +
	"\x04mode\x18\n" +
	" \x01(\rR\x04mode\x12\x19\n" +
	"\bbuild_id\x18\v \x03(\rR\abuildId\x12\x1a\n" +
	"\bchecksum\x18\f \x01(\rR\bchecksum\x12'\n" +
	"\x0fchecksum_config\x18\r \x01(\rR\x0echecksumConfig\x12-\n" +
	"\x12checksum_parameter\x18\x0e \x01(\rR\x11checksumParameter"

var (
	file_regfile_proto_rawDescOnce sync.Once
	file_regfile_proto_rawDescData []byte
)

func file_regfile_proto_rawDescGZIP() []byte {
	file_regfile_proto_rawDescOnce.Do(func() {
		file_regfile_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_regfile_proto_rawDesc), len(file_regfile_proto_rawDesc)))
	})
	return file_regfile_proto_rawDescData
}

var file_regfile_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_regfile_proto_goTypes = []any{
	(*RegFileEntry)(nil),   // 0: reg_file_entry
	(*fown.FownEntry)(nil), // 1: fown_entry
}
var file_regfile_proto_depIdxs = []int32{
	1, // 0: reg_file_entry.fown:type_name -> fown_entry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_regfile_proto_init() }
func file_regfile_proto_init() {
	if File_regfile_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_regfile_proto_rawDesc), len(file_regfile_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_regfile_proto_goTypes,
		DependencyIndexes: file_regfile_proto_depIdxs,
		MessageInfos:      file_regfile_proto_msgTypes,
	}.Build()
	File_regfile_proto = out.File
	file_regfile_proto_goTypes = nil
	file_regfile_proto_depIdxs = nil
}
