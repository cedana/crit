// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: timens.proto

package timens

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Timespec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TvSec         *uint64                `protobuf:"varint,1,req,name=tv_sec,json=tvSec" json:"tv_sec,omitempty"`
	TvNsec        *uint64                `protobuf:"varint,2,req,name=tv_nsec,json=tvNsec" json:"tv_nsec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timespec) Reset() {
	*x = Timespec{}
	mi := &file_timens_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timespec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timespec) ProtoMessage() {}

func (x *Timespec) ProtoReflect() protoreflect.Message {
	mi := &file_timens_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timespec.ProtoReflect.Descriptor instead.
func (*Timespec) Descriptor() ([]byte, []int) {
	return file_timens_proto_rawDescGZIP(), []int{0}
}

func (x *Timespec) GetTvSec() uint64 {
	if x != nil && x.TvSec != nil {
		return *x.TvSec
	}
	return 0
}

func (x *Timespec) GetTvNsec() uint64 {
	if x != nil && x.TvNsec != nil {
		return *x.TvNsec
	}
	return 0
}

type TimensEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Monotonic     *Timespec              `protobuf:"bytes,1,req,name=monotonic" json:"monotonic,omitempty"`
	Boottime      *Timespec              `protobuf:"bytes,2,req,name=boottime" json:"boottime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimensEntry) Reset() {
	*x = TimensEntry{}
	mi := &file_timens_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimensEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimensEntry) ProtoMessage() {}

func (x *TimensEntry) ProtoReflect() protoreflect.Message {
	mi := &file_timens_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimensEntry.ProtoReflect.Descriptor instead.
func (*TimensEntry) Descriptor() ([]byte, []int) {
	return file_timens_proto_rawDescGZIP(), []int{1}
}

func (x *TimensEntry) GetMonotonic() *Timespec {
	if x != nil {
		return x.Monotonic
	}
	return nil
}

func (x *TimensEntry) GetBoottime() *Timespec {
	if x != nil {
		return x.Boottime
	}
	return nil
}

var File_timens_proto protoreflect.FileDescriptor

const file_timens_proto_rawDesc = "" +
	"\n" +
	"\ftimens.proto\":\n" +
	"\btimespec\x12\x15\n" +
	"\x06tv_sec\x18\x01 \x02(\x04R\x05tvSec\x12\x17\n" +
	"\atv_nsec\x18\x02 \x02(\x04R\x06tvNsec\"^\n" +
	"\ftimens_entry\x12'\n" +
	"\tmonotonic\x18\x01 \x02(\v2\t.timespecR\tmonotonic\x12%\n" +
	"\bboottime\x18\x02 \x02(\v2\t.timespecR\bboottime"

var (
	file_timens_proto_rawDescOnce sync.Once
	file_timens_proto_rawDescData []byte
)

func file_timens_proto_rawDescGZIP() []byte {
	file_timens_proto_rawDescOnce.Do(func() {
		file_timens_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_timens_proto_rawDesc), len(file_timens_proto_rawDesc)))
	})
	return file_timens_proto_rawDescData
}

var file_timens_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_timens_proto_goTypes = []any{
	(*Timespec)(nil),    // 0: timespec
	(*TimensEntry)(nil), // 1: timens_entry
}
var file_timens_proto_depIdxs = []int32{
	0, // 0: timens_entry.monotonic:type_name -> timespec
	0, // 1: timens_entry.boottime:type_name -> timespec
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_timens_proto_init() }
func file_timens_proto_init() {
	if File_timens_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_timens_proto_rawDesc), len(file_timens_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_timens_proto_goTypes,
		DependencyIndexes: file_timens_proto_depIdxs,
		MessageInfos:      file_timens_proto_msgTypes,
	}.Build()
	File_timens_proto = out.File
	file_timens_proto_goTypes = nil
	file_timens_proto_depIdxs = nil
}
