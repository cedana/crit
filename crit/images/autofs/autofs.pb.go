// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: autofs.proto

package autofs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AutofsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fd            *int32                 `protobuf:"varint,1,req,name=fd" json:"fd,omitempty"`
	Pgrp          *int32                 `protobuf:"varint,2,req,name=pgrp" json:"pgrp,omitempty"`
	Timeout       *int32                 `protobuf:"varint,3,req,name=timeout" json:"timeout,omitempty"`
	Minproto      *int32                 `protobuf:"varint,4,req,name=minproto" json:"minproto,omitempty"`
	Maxproto      *int32                 `protobuf:"varint,5,req,name=maxproto" json:"maxproto,omitempty"`
	Mode          *int32                 `protobuf:"varint,6,req,name=mode" json:"mode,omitempty"`
	Uid           *int32                 `protobuf:"varint,7,opt,name=uid" json:"uid,omitempty"`
	Gid           *int32                 `protobuf:"varint,8,opt,name=gid" json:"gid,omitempty"`
	ReadFd        *int32                 `protobuf:"varint,9,opt,name=read_fd,json=readFd" json:"read_fd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutofsEntry) Reset() {
	*x = AutofsEntry{}
	mi := &file_autofs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutofsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutofsEntry) ProtoMessage() {}

func (x *AutofsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_autofs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutofsEntry.ProtoReflect.Descriptor instead.
func (*AutofsEntry) Descriptor() ([]byte, []int) {
	return file_autofs_proto_rawDescGZIP(), []int{0}
}

func (x *AutofsEntry) GetFd() int32 {
	if x != nil && x.Fd != nil {
		return *x.Fd
	}
	return 0
}

func (x *AutofsEntry) GetPgrp() int32 {
	if x != nil && x.Pgrp != nil {
		return *x.Pgrp
	}
	return 0
}

func (x *AutofsEntry) GetTimeout() int32 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

func (x *AutofsEntry) GetMinproto() int32 {
	if x != nil && x.Minproto != nil {
		return *x.Minproto
	}
	return 0
}

func (x *AutofsEntry) GetMaxproto() int32 {
	if x != nil && x.Maxproto != nil {
		return *x.Maxproto
	}
	return 0
}

func (x *AutofsEntry) GetMode() int32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *AutofsEntry) GetUid() int32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *AutofsEntry) GetGid() int32 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *AutofsEntry) GetReadFd() int32 {
	if x != nil && x.ReadFd != nil {
		return *x.ReadFd
	}
	return 0
}

var File_autofs_proto protoreflect.FileDescriptor

const file_autofs_proto_rawDesc = "" +
	"\n" +
	"\fautofs.proto\"\xd5\x01\n" +
	"\fautofs_entry\x12\x0e\n" +
	"\x02fd\x18\x01 \x02(\x05R\x02fd\x12\x12\n" +
	"\x04pgrp\x18\x02 \x02(\x05R\x04pgrp\x12\x18\n" +
	"\atimeout\x18\x03 \x02(\x05R\atimeout\x12\x1a\n" +
	"\bminproto\x18\x04 \x02(\x05R\bminproto\x12\x1a\n" +
	"\bmaxproto\x18\x05 \x02(\x05R\bmaxproto\x12\x12\n" +
	"\x04mode\x18\x06 \x02(\x05R\x04mode\x12\x10\n" +
	"\x03uid\x18\a \x01(\x05R\x03uid\x12\x10\n" +
	"\x03gid\x18\b \x01(\x05R\x03gid\x12\x17\n" +
	"\aread_fd\x18\t \x01(\x05R\x06readFd"

var (
	file_autofs_proto_rawDescOnce sync.Once
	file_autofs_proto_rawDescData []byte
)

func file_autofs_proto_rawDescGZIP() []byte {
	file_autofs_proto_rawDescOnce.Do(func() {
		file_autofs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_autofs_proto_rawDesc), len(file_autofs_proto_rawDesc)))
	})
	return file_autofs_proto_rawDescData
}

var file_autofs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_autofs_proto_goTypes = []any{
	(*AutofsEntry)(nil), // 0: autofs_entry
}
var file_autofs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_autofs_proto_init() }
func file_autofs_proto_init() {
	if File_autofs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_autofs_proto_rawDesc), len(file_autofs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_autofs_proto_goTypes,
		DependencyIndexes: file_autofs_proto_depIdxs,
		MessageInfos:      file_autofs_proto_msgTypes,
	}.Build()
	File_autofs_proto = out.File
	file_autofs_proto_goTypes = nil
	file_autofs_proto_depIdxs = nil
}
