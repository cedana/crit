// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: sysctl.proto

package sysctl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SysctlType int32

const (
	SysctlType_CTL_STR SysctlType = 5
	SysctlType_CTL_32  SysctlType = 6
)

// Enum value maps for SysctlType.
var (
	SysctlType_name = map[int32]string{
		5: "CTL_STR",
		6: "CTL_32",
	}
	SysctlType_value = map[string]int32{
		"CTL_STR": 5,
		"CTL_32":  6,
	}
)

func (x SysctlType) Enum() *SysctlType {
	p := new(SysctlType)
	*p = x
	return p
}

func (x SysctlType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SysctlType) Descriptor() protoreflect.EnumDescriptor {
	return file_sysctl_proto_enumTypes[0].Descriptor()
}

func (SysctlType) Type() protoreflect.EnumType {
	return &file_sysctl_proto_enumTypes[0]
}

func (x SysctlType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SysctlType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SysctlType(num)
	return nil
}

// Deprecated: Use SysctlType.Descriptor instead.
func (SysctlType) EnumDescriptor() ([]byte, []int) {
	return file_sysctl_proto_rawDescGZIP(), []int{0}
}

type SysctlEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *SysctlType            `protobuf:"varint,1,req,name=type,enum=SysctlType" json:"type,omitempty"`
	Iarg          *int32                 `protobuf:"varint,2,opt,name=iarg" json:"iarg,omitempty"`
	Sarg          *string                `protobuf:"bytes,3,opt,name=sarg" json:"sarg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SysctlEntry) Reset() {
	*x = SysctlEntry{}
	mi := &file_sysctl_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SysctlEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysctlEntry) ProtoMessage() {}

func (x *SysctlEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sysctl_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysctlEntry.ProtoReflect.Descriptor instead.
func (*SysctlEntry) Descriptor() ([]byte, []int) {
	return file_sysctl_proto_rawDescGZIP(), []int{0}
}

func (x *SysctlEntry) GetType() SysctlType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return SysctlType_CTL_STR
}

func (x *SysctlEntry) GetIarg() int32 {
	if x != nil && x.Iarg != nil {
		return *x.Iarg
	}
	return 0
}

func (x *SysctlEntry) GetSarg() string {
	if x != nil && x.Sarg != nil {
		return *x.Sarg
	}
	return ""
}

var File_sysctl_proto protoreflect.FileDescriptor

const file_sysctl_proto_rawDesc = "" +
	"\n" +
	"\fsysctl.proto\"W\n" +
	"\fsysctl_entry\x12\x1f\n" +
	"\x04type\x18\x01 \x02(\x0e2\v.SysctlTypeR\x04type\x12\x12\n" +
	"\x04iarg\x18\x02 \x01(\x05R\x04iarg\x12\x12\n" +
	"\x04sarg\x18\x03 \x01(\tR\x04sarg*%\n" +
	"\n" +
	"SysctlType\x12\v\n" +
	"\aCTL_STR\x10\x05\x12\n" +
	"\n" +
	"\x06CTL_32\x10\x06"

var (
	file_sysctl_proto_rawDescOnce sync.Once
	file_sysctl_proto_rawDescData []byte
)

func file_sysctl_proto_rawDescGZIP() []byte {
	file_sysctl_proto_rawDescOnce.Do(func() {
		file_sysctl_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sysctl_proto_rawDesc), len(file_sysctl_proto_rawDesc)))
	})
	return file_sysctl_proto_rawDescData
}

var file_sysctl_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sysctl_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sysctl_proto_goTypes = []any{
	(SysctlType)(0),     // 0: SysctlType
	(*SysctlEntry)(nil), // 1: sysctl_entry
}
var file_sysctl_proto_depIdxs = []int32{
	0, // 0: sysctl_entry.type:type_name -> SysctlType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sysctl_proto_init() }
func file_sysctl_proto_init() {
	if File_sysctl_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sysctl_proto_rawDesc), len(file_sysctl_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sysctl_proto_goTypes,
		DependencyIndexes: file_sysctl_proto_depIdxs,
		EnumInfos:         file_sysctl_proto_enumTypes,
		MessageInfos:      file_sysctl_proto_msgTypes,
	}.Build()
	File_sysctl_proto = out.File
	file_sysctl_proto_goTypes = nil
	file_sysctl_proto_depIdxs = nil
}
