// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: opts.proto

package opts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CRIU_Opts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hex           *bool                  `protobuf:"varint,1,opt,name=hex" json:"hex,omitempty"`     // Indicate that CRIT should treat this field as hex.
	Ipadd         *bool                  `protobuf:"varint,2,opt,name=ipadd" json:"ipadd,omitempty"` // The field is IPv4/v6 address
	Flags         *string                `protobuf:"bytes,3,opt,name=flags" json:"flags,omitempty"`
	Dev           *bool                  `protobuf:"varint,4,opt,name=dev" json:"dev,omitempty"`   // Device major:minor packed
	Odev          *bool                  `protobuf:"varint,5,opt,name=odev" json:"odev,omitempty"` // ... in old format
	Dict          *string                `protobuf:"bytes,6,opt,name=dict" json:"dict,omitempty"`
	Conv          *string                `protobuf:"bytes,7,opt,name=conv" json:"conv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRIU_Opts) Reset() {
	*x = CRIU_Opts{}
	mi := &file_opts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRIU_Opts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRIU_Opts) ProtoMessage() {}

func (x *CRIU_Opts) ProtoReflect() protoreflect.Message {
	mi := &file_opts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRIU_Opts.ProtoReflect.Descriptor instead.
func (*CRIU_Opts) Descriptor() ([]byte, []int) {
	return file_opts_proto_rawDescGZIP(), []int{0}
}

func (x *CRIU_Opts) GetHex() bool {
	if x != nil && x.Hex != nil {
		return *x.Hex
	}
	return false
}

func (x *CRIU_Opts) GetIpadd() bool {
	if x != nil && x.Ipadd != nil {
		return *x.Ipadd
	}
	return false
}

func (x *CRIU_Opts) GetFlags() string {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return ""
}

func (x *CRIU_Opts) GetDev() bool {
	if x != nil && x.Dev != nil {
		return *x.Dev
	}
	return false
}

func (x *CRIU_Opts) GetOdev() bool {
	if x != nil && x.Odev != nil {
		return *x.Odev
	}
	return false
}

func (x *CRIU_Opts) GetDict() string {
	if x != nil && x.Dict != nil {
		return *x.Dict
	}
	return ""
}

func (x *CRIU_Opts) GetConv() string {
	if x != nil && x.Conv != nil {
		return *x.Conv
	}
	return ""
}

var file_opts_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*CRIU_Opts)(nil),
		Field:         2018,
		Name:          "criu2",
		Tag:           "bytes,2018,opt,name=criu2",
		Filename:      "opts.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// Registered unique number to use for all kinds of custom options.
	//
	// optional CRIU_Opts criu2 = 2018;
	E_Criu2 = &file_opts_proto_extTypes[0]
)

var File_opts_proto protoreflect.FileDescriptor

const file_opts_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"opts.proto\x1a google/protobuf/descriptor.proto\"\x97\x01\n" +
	"\tCRIU_Opts\x12\x10\n" +
	"\x03hex\x18\x01 \x01(\bR\x03hex\x12\x14\n" +
	"\x05ipadd\x18\x02 \x01(\bR\x05ipadd\x12\x14\n" +
	"\x05flags\x18\x03 \x01(\tR\x05flags\x12\x10\n" +
	"\x03dev\x18\x04 \x01(\bR\x03dev\x12\x12\n" +
	"\x04odev\x18\x05 \x01(\bR\x04odev\x12\x12\n" +
	"\x04dict\x18\x06 \x01(\tR\x04dict\x12\x12\n" +
	"\x04conv\x18\a \x01(\tR\x04conv:@\n" +
	"\x05criu2\x12\x1d.google.protobuf.FieldOptions\x18\xe2\x0f \x01(\v2\n" +
	".CRIU_OptsR\x05criu2"

var (
	file_opts_proto_rawDescOnce sync.Once
	file_opts_proto_rawDescData []byte
)

func file_opts_proto_rawDescGZIP() []byte {
	file_opts_proto_rawDescOnce.Do(func() {
		file_opts_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_opts_proto_rawDesc), len(file_opts_proto_rawDesc)))
	})
	return file_opts_proto_rawDescData
}

var file_opts_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_opts_proto_goTypes = []any{
	(*CRIU_Opts)(nil),                 // 0: CRIU_Opts
	(*descriptorpb.FieldOptions)(nil), // 1: google.protobuf.FieldOptions
}
var file_opts_proto_depIdxs = []int32{
	1, // 0: criu2:extendee -> google.protobuf.FieldOptions
	0, // 1: criu2:type_name -> CRIU_Opts
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	1, // [1:2] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_opts_proto_init() }
func file_opts_proto_init() {
	if File_opts_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_opts_proto_rawDesc), len(file_opts_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_opts_proto_goTypes,
		DependencyIndexes: file_opts_proto_depIdxs,
		MessageInfos:      file_opts_proto_msgTypes,
		ExtensionInfos:    file_opts_proto_extTypes,
	}.Build()
	File_opts_proto = out.File
	file_opts_proto_goTypes = nil
	file_opts_proto_depIdxs = nil
}
