// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: core-ppc64.proto

package core_ppc64

import (
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserPpc64RegsEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Following is the list of registers starting at r0.
	Gpr      []uint64 `protobuf:"varint,1,rep,name=gpr" json:"gpr,omitempty"`
	Nip      *uint64  `protobuf:"varint,2,req,name=nip" json:"nip,omitempty"`
	Msr      *uint64  `protobuf:"varint,3,req,name=msr" json:"msr,omitempty"`
	OrigGpr3 *uint64  `protobuf:"varint,4,req,name=orig_gpr3,json=origGpr3" json:"orig_gpr3,omitempty"`
	Ctr      *uint64  `protobuf:"varint,5,req,name=ctr" json:"ctr,omitempty"`
	Link     *uint64  `protobuf:"varint,6,req,name=link" json:"link,omitempty"`
	Xer      *uint64  `protobuf:"varint,7,req,name=xer" json:"xer,omitempty"`
	Ccr      *uint64  `protobuf:"varint,8,req,name=ccr" json:"ccr,omitempty"`
	Trap     *uint64  `protobuf:"varint,9,req,name=trap" json:"trap,omitempty"`
	// For Transactional memory support since P8
	Texasr        *uint64 `protobuf:"varint,10,opt,name=texasr" json:"texasr,omitempty"`
	Tfhar         *uint64 `protobuf:"varint,11,opt,name=tfhar" json:"tfhar,omitempty"`
	Tfiar         *uint64 `protobuf:"varint,12,opt,name=tfiar" json:"tfiar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPpc64RegsEntry) Reset() {
	*x = UserPpc64RegsEntry{}
	mi := &file_core_ppc64_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPpc64RegsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64RegsEntry) ProtoMessage() {}

func (x *UserPpc64RegsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64RegsEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64RegsEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{0}
}

func (x *UserPpc64RegsEntry) GetGpr() []uint64 {
	if x != nil {
		return x.Gpr
	}
	return nil
}

func (x *UserPpc64RegsEntry) GetNip() uint64 {
	if x != nil && x.Nip != nil {
		return *x.Nip
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetMsr() uint64 {
	if x != nil && x.Msr != nil {
		return *x.Msr
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetOrigGpr3() uint64 {
	if x != nil && x.OrigGpr3 != nil {
		return *x.OrigGpr3
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetCtr() uint64 {
	if x != nil && x.Ctr != nil {
		return *x.Ctr
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetLink() uint64 {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetXer() uint64 {
	if x != nil && x.Xer != nil {
		return *x.Xer
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetCcr() uint64 {
	if x != nil && x.Ccr != nil {
		return *x.Ccr
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetTrap() uint64 {
	if x != nil && x.Trap != nil {
		return *x.Trap
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetTexasr() uint64 {
	if x != nil && x.Texasr != nil {
		return *x.Texasr
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetTfhar() uint64 {
	if x != nil && x.Tfhar != nil {
		return *x.Tfhar
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetTfiar() uint64 {
	if x != nil && x.Tfiar != nil {
		return *x.Tfiar
	}
	return 0
}

type UserPpc64FpstateEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Following is the list of registers starting at fpr0
	Fpregs        []uint64 `protobuf:"varint,1,rep,name=fpregs" json:"fpregs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPpc64FpstateEntry) Reset() {
	*x = UserPpc64FpstateEntry{}
	mi := &file_core_ppc64_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPpc64FpstateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64FpstateEntry) ProtoMessage() {}

func (x *UserPpc64FpstateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64FpstateEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64FpstateEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{1}
}

func (x *UserPpc64FpstateEntry) GetFpregs() []uint64 {
	if x != nil {
		return x.Fpregs
	}
	return nil
}

type UserPpc64VrstateEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Altivec registers
	// The vector registers are 128bit registers (VSR[32..63]).
	// The following vregs entry will store first the high part then the
	// low one:
	//
	//	VR0 = vrregs[0] << 64 | vrregs[1];
	//	VR1 = vrregs[2] << 64 | vrregs[3];
	//	..
	//
	// The last entry stores in a 128bit field the VSCR which is a 32bit
	// value returned by the kernel in a 128 field.
	Vrregs        []uint64 `protobuf:"varint,1,rep,name=vrregs" json:"vrregs,omitempty"`
	Vrsave        *uint32  `protobuf:"varint,2,req,name=vrsave" json:"vrsave,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPpc64VrstateEntry) Reset() {
	*x = UserPpc64VrstateEntry{}
	mi := &file_core_ppc64_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPpc64VrstateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64VrstateEntry) ProtoMessage() {}

func (x *UserPpc64VrstateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64VrstateEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64VrstateEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{2}
}

func (x *UserPpc64VrstateEntry) GetVrregs() []uint64 {
	if x != nil {
		return x.Vrregs
	}
	return nil
}

func (x *UserPpc64VrstateEntry) GetVrsave() uint32 {
	if x != nil && x.Vrsave != nil {
		return *x.Vrsave
	}
	return 0
}

type UserPpc64VsxstateEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// VSX registers
	// The vector-scale registers are 128bit registers (VSR[0..64]).
	// Since there is an overlapping over the VSX registers by the FPR and
	// the Altivec registers, only the lower part of the first 32 VSX
	// registers have to be saved.
	Vsxregs       []uint64 `protobuf:"varint,1,rep,name=vsxregs" json:"vsxregs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPpc64VsxstateEntry) Reset() {
	*x = UserPpc64VsxstateEntry{}
	mi := &file_core_ppc64_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPpc64VsxstateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64VsxstateEntry) ProtoMessage() {}

func (x *UserPpc64VsxstateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64VsxstateEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64VsxstateEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{3}
}

func (x *UserPpc64VsxstateEntry) GetVsxregs() []uint64 {
	if x != nil {
		return x.Vsxregs
	}
	return nil
}

// Transactional memory operation's state
type UserPpc64TmRegsEntry struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Gpregs        *UserPpc64RegsEntry     `protobuf:"bytes,1,req,name=gpregs" json:"gpregs,omitempty"`
	Fpstate       *UserPpc64FpstateEntry  `protobuf:"bytes,2,opt,name=fpstate" json:"fpstate,omitempty"`
	Vrstate       *UserPpc64VrstateEntry  `protobuf:"bytes,3,opt,name=vrstate" json:"vrstate,omitempty"`
	Vsxstate      *UserPpc64VsxstateEntry `protobuf:"bytes,4,opt,name=vsxstate" json:"vsxstate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPpc64TmRegsEntry) Reset() {
	*x = UserPpc64TmRegsEntry{}
	mi := &file_core_ppc64_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPpc64TmRegsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64TmRegsEntry) ProtoMessage() {}

func (x *UserPpc64TmRegsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64TmRegsEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64TmRegsEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{4}
}

func (x *UserPpc64TmRegsEntry) GetGpregs() *UserPpc64RegsEntry {
	if x != nil {
		return x.Gpregs
	}
	return nil
}

func (x *UserPpc64TmRegsEntry) GetFpstate() *UserPpc64FpstateEntry {
	if x != nil {
		return x.Fpstate
	}
	return nil
}

func (x *UserPpc64TmRegsEntry) GetVrstate() *UserPpc64VrstateEntry {
	if x != nil {
		return x.Vrstate
	}
	return nil
}

func (x *UserPpc64TmRegsEntry) GetVsxstate() *UserPpc64VsxstateEntry {
	if x != nil {
		return x.Vsxstate
	}
	return nil
}

type ThreadInfoPpc64 struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ClearTidAddr  *uint64                 `protobuf:"varint,1,req,name=clear_tid_addr,json=clearTidAddr" json:"clear_tid_addr,omitempty"`
	Gpregs        *UserPpc64RegsEntry     `protobuf:"bytes,2,req,name=gpregs" json:"gpregs,omitempty"`
	Fpstate       *UserPpc64FpstateEntry  `protobuf:"bytes,3,opt,name=fpstate" json:"fpstate,omitempty"`
	Vrstate       *UserPpc64VrstateEntry  `protobuf:"bytes,4,opt,name=vrstate" json:"vrstate,omitempty"`
	Vsxstate      *UserPpc64VsxstateEntry `protobuf:"bytes,5,opt,name=vsxstate" json:"vsxstate,omitempty"`
	Tmstate       *UserPpc64TmRegsEntry   `protobuf:"bytes,6,opt,name=tmstate" json:"tmstate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadInfoPpc64) Reset() {
	*x = ThreadInfoPpc64{}
	mi := &file_core_ppc64_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadInfoPpc64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadInfoPpc64) ProtoMessage() {}

func (x *ThreadInfoPpc64) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadInfoPpc64.ProtoReflect.Descriptor instead.
func (*ThreadInfoPpc64) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{5}
}

func (x *ThreadInfoPpc64) GetClearTidAddr() uint64 {
	if x != nil && x.ClearTidAddr != nil {
		return *x.ClearTidAddr
	}
	return 0
}

func (x *ThreadInfoPpc64) GetGpregs() *UserPpc64RegsEntry {
	if x != nil {
		return x.Gpregs
	}
	return nil
}

func (x *ThreadInfoPpc64) GetFpstate() *UserPpc64FpstateEntry {
	if x != nil {
		return x.Fpstate
	}
	return nil
}

func (x *ThreadInfoPpc64) GetVrstate() *UserPpc64VrstateEntry {
	if x != nil {
		return x.Vrstate
	}
	return nil
}

func (x *ThreadInfoPpc64) GetVsxstate() *UserPpc64VsxstateEntry {
	if x != nil {
		return x.Vsxstate
	}
	return nil
}

func (x *ThreadInfoPpc64) GetTmstate() *UserPpc64TmRegsEntry {
	if x != nil {
		return x.Tmstate
	}
	return nil
}

var File_core_ppc64_proto protoreflect.FileDescriptor

const file_core_ppc64_proto_rawDesc = "" +
	"\n" +
	"\x10core-ppc64.proto\x1a\n" +
	"opts.proto\"\x8c\x02\n" +
	"\x15user_ppc64_regs_entry\x12\x10\n" +
	"\x03gpr\x18\x01 \x03(\x04R\x03gpr\x12\x10\n" +
	"\x03nip\x18\x02 \x02(\x04R\x03nip\x12\x10\n" +
	"\x03msr\x18\x03 \x02(\x04R\x03msr\x12\x1b\n" +
	"\torig_gpr3\x18\x04 \x02(\x04R\borigGpr3\x12\x10\n" +
	"\x03ctr\x18\x05 \x02(\x04R\x03ctr\x12\x12\n" +
	"\x04link\x18\x06 \x02(\x04R\x04link\x12\x10\n" +
	"\x03xer\x18\a \x02(\x04R\x03xer\x12\x10\n" +
	"\x03ccr\x18\b \x02(\x04R\x03ccr\x12\x12\n" +
	"\x04trap\x18\t \x02(\x04R\x04trap\x12\x16\n" +
	"\x06texasr\x18\n" +
	" \x01(\x04R\x06texasr\x12\x14\n" +
	"\x05tfhar\x18\v \x01(\x04R\x05tfhar\x12\x14\n" +
	"\x05tfiar\x18\f \x01(\x04R\x05tfiar\"2\n" +
	"\x18user_ppc64_fpstate_entry\x12\x16\n" +
	"\x06fpregs\x18\x01 \x03(\x04R\x06fpregs\"J\n" +
	"\x18user_ppc64_vrstate_entry\x12\x16\n" +
	"\x06vrregs\x18\x01 \x03(\x04R\x06vrregs\x12\x16\n" +
	"\x06vrsave\x18\x02 \x02(\rR\x06vrsave\"5\n" +
	"\x19user_ppc64_vsxstate_entry\x12\x18\n" +
	"\avsxregs\x18\x01 \x03(\x04R\avsxregs\"\xec\x01\n" +
	"\x18user_ppc64_tm_regs_entry\x12.\n" +
	"\x06gpregs\x18\x01 \x02(\v2\x16.user_ppc64_regs_entryR\x06gpregs\x123\n" +
	"\afpstate\x18\x02 \x01(\v2\x19.user_ppc64_fpstate_entryR\afpstate\x123\n" +
	"\avrstate\x18\x03 \x01(\v2\x19.user_ppc64_vrstate_entryR\avrstate\x126\n" +
	"\bvsxstate\x18\x04 \x01(\v2\x1a.user_ppc64_vsxstate_entryR\bvsxstate\"\xce\x02\n" +
	"\x11thread_info_ppc64\x12+\n" +
	"\x0eclear_tid_addr\x18\x01 \x02(\x04B\x05\xd2?\x02\b\x01R\fclearTidAddr\x125\n" +
	"\x06gpregs\x18\x02 \x02(\v2\x16.user_ppc64_regs_entryB\x05\xd2?\x02\b\x01R\x06gpregs\x123\n" +
	"\afpstate\x18\x03 \x01(\v2\x19.user_ppc64_fpstate_entryR\afpstate\x123\n" +
	"\avrstate\x18\x04 \x01(\v2\x19.user_ppc64_vrstate_entryR\avrstate\x126\n" +
	"\bvsxstate\x18\x05 \x01(\v2\x1a.user_ppc64_vsxstate_entryR\bvsxstate\x123\n" +
	"\atmstate\x18\x06 \x01(\v2\x19.user_ppc64_tm_regs_entryR\atmstate"

var (
	file_core_ppc64_proto_rawDescOnce sync.Once
	file_core_ppc64_proto_rawDescData []byte
)

func file_core_ppc64_proto_rawDescGZIP() []byte {
	file_core_ppc64_proto_rawDescOnce.Do(func() {
		file_core_ppc64_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_ppc64_proto_rawDesc), len(file_core_ppc64_proto_rawDesc)))
	})
	return file_core_ppc64_proto_rawDescData
}

var file_core_ppc64_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_core_ppc64_proto_goTypes = []any{
	(*UserPpc64RegsEntry)(nil),     // 0: user_ppc64_regs_entry
	(*UserPpc64FpstateEntry)(nil),  // 1: user_ppc64_fpstate_entry
	(*UserPpc64VrstateEntry)(nil),  // 2: user_ppc64_vrstate_entry
	(*UserPpc64VsxstateEntry)(nil), // 3: user_ppc64_vsxstate_entry
	(*UserPpc64TmRegsEntry)(nil),   // 4: user_ppc64_tm_regs_entry
	(*ThreadInfoPpc64)(nil),        // 5: thread_info_ppc64
}
var file_core_ppc64_proto_depIdxs = []int32{
	0, // 0: user_ppc64_tm_regs_entry.gpregs:type_name -> user_ppc64_regs_entry
	1, // 1: user_ppc64_tm_regs_entry.fpstate:type_name -> user_ppc64_fpstate_entry
	2, // 2: user_ppc64_tm_regs_entry.vrstate:type_name -> user_ppc64_vrstate_entry
	3, // 3: user_ppc64_tm_regs_entry.vsxstate:type_name -> user_ppc64_vsxstate_entry
	0, // 4: thread_info_ppc64.gpregs:type_name -> user_ppc64_regs_entry
	1, // 5: thread_info_ppc64.fpstate:type_name -> user_ppc64_fpstate_entry
	2, // 6: thread_info_ppc64.vrstate:type_name -> user_ppc64_vrstate_entry
	3, // 7: thread_info_ppc64.vsxstate:type_name -> user_ppc64_vsxstate_entry
	4, // 8: thread_info_ppc64.tmstate:type_name -> user_ppc64_tm_regs_entry
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_core_ppc64_proto_init() }
func file_core_ppc64_proto_init() {
	if File_core_ppc64_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_ppc64_proto_rawDesc), len(file_core_ppc64_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_ppc64_proto_goTypes,
		DependencyIndexes: file_core_ppc64_proto_depIdxs,
		MessageInfos:      file_core_ppc64_proto_msgTypes,
	}.Build()
	File_core_ppc64_proto = out.File
	file_core_ppc64_proto_goTypes = nil
	file_core_ppc64_proto_depIdxs = nil
}
