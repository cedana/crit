// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: core-riscv64.proto

package core_riscv64

import (
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Refer to riscv-gnu-toolchain/linux-headers/include/asm/ptrace.h
type UserRiscv64RegsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pc            *uint64                `protobuf:"varint,1,req,name=pc" json:"pc,omitempty"`
	Ra            *uint64                `protobuf:"varint,2,req,name=ra" json:"ra,omitempty"`
	Sp            *uint64                `protobuf:"varint,3,req,name=sp" json:"sp,omitempty"`
	Gp            *uint64                `protobuf:"varint,4,req,name=gp" json:"gp,omitempty"`
	Tp            *uint64                `protobuf:"varint,5,req,name=tp" json:"tp,omitempty"`
	T0            *uint64                `protobuf:"varint,6,req,name=t0" json:"t0,omitempty"`
	T1            *uint64                `protobuf:"varint,7,req,name=t1" json:"t1,omitempty"`
	T2            *uint64                `protobuf:"varint,8,req,name=t2" json:"t2,omitempty"`
	S0            *uint64                `protobuf:"varint,9,req,name=s0" json:"s0,omitempty"`
	S1            *uint64                `protobuf:"varint,10,req,name=s1" json:"s1,omitempty"`
	A0            *uint64                `protobuf:"varint,11,req,name=a0" json:"a0,omitempty"`
	A1            *uint64                `protobuf:"varint,12,req,name=a1" json:"a1,omitempty"`
	A2            *uint64                `protobuf:"varint,13,req,name=a2" json:"a2,omitempty"`
	A3            *uint64                `protobuf:"varint,14,req,name=a3" json:"a3,omitempty"`
	A4            *uint64                `protobuf:"varint,15,req,name=a4" json:"a4,omitempty"`
	A5            *uint64                `protobuf:"varint,16,req,name=a5" json:"a5,omitempty"`
	A6            *uint64                `protobuf:"varint,17,req,name=a6" json:"a6,omitempty"`
	A7            *uint64                `protobuf:"varint,18,req,name=a7" json:"a7,omitempty"`
	S2            *uint64                `protobuf:"varint,19,req,name=s2" json:"s2,omitempty"`
	S3            *uint64                `protobuf:"varint,20,req,name=s3" json:"s3,omitempty"`
	S4            *uint64                `protobuf:"varint,21,req,name=s4" json:"s4,omitempty"`
	S5            *uint64                `protobuf:"varint,22,req,name=s5" json:"s5,omitempty"`
	S6            *uint64                `protobuf:"varint,23,req,name=s6" json:"s6,omitempty"`
	S7            *uint64                `protobuf:"varint,24,req,name=s7" json:"s7,omitempty"`
	S8            *uint64                `protobuf:"varint,25,req,name=s8" json:"s8,omitempty"`
	S9            *uint64                `protobuf:"varint,26,req,name=s9" json:"s9,omitempty"`
	S10           *uint64                `protobuf:"varint,27,req,name=s10" json:"s10,omitempty"`
	S11           *uint64                `protobuf:"varint,28,req,name=s11" json:"s11,omitempty"`
	T3            *uint64                `protobuf:"varint,29,req,name=t3" json:"t3,omitempty"`
	T4            *uint64                `protobuf:"varint,30,req,name=t4" json:"t4,omitempty"`
	T5            *uint64                `protobuf:"varint,31,req,name=t5" json:"t5,omitempty"`
	T6            *uint64                `protobuf:"varint,32,req,name=t6" json:"t6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRiscv64RegsEntry) Reset() {
	*x = UserRiscv64RegsEntry{}
	mi := &file_core_riscv64_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRiscv64RegsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRiscv64RegsEntry) ProtoMessage() {}

func (x *UserRiscv64RegsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_riscv64_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRiscv64RegsEntry.ProtoReflect.Descriptor instead.
func (*UserRiscv64RegsEntry) Descriptor() ([]byte, []int) {
	return file_core_riscv64_proto_rawDescGZIP(), []int{0}
}

func (x *UserRiscv64RegsEntry) GetPc() uint64 {
	if x != nil && x.Pc != nil {
		return *x.Pc
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetRa() uint64 {
	if x != nil && x.Ra != nil {
		return *x.Ra
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetSp() uint64 {
	if x != nil && x.Sp != nil {
		return *x.Sp
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetGp() uint64 {
	if x != nil && x.Gp != nil {
		return *x.Gp
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetTp() uint64 {
	if x != nil && x.Tp != nil {
		return *x.Tp
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetT0() uint64 {
	if x != nil && x.T0 != nil {
		return *x.T0
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetT1() uint64 {
	if x != nil && x.T1 != nil {
		return *x.T1
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetT2() uint64 {
	if x != nil && x.T2 != nil {
		return *x.T2
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS0() uint64 {
	if x != nil && x.S0 != nil {
		return *x.S0
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS1() uint64 {
	if x != nil && x.S1 != nil {
		return *x.S1
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetA0() uint64 {
	if x != nil && x.A0 != nil {
		return *x.A0
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetA1() uint64 {
	if x != nil && x.A1 != nil {
		return *x.A1
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetA2() uint64 {
	if x != nil && x.A2 != nil {
		return *x.A2
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetA3() uint64 {
	if x != nil && x.A3 != nil {
		return *x.A3
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetA4() uint64 {
	if x != nil && x.A4 != nil {
		return *x.A4
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetA5() uint64 {
	if x != nil && x.A5 != nil {
		return *x.A5
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetA6() uint64 {
	if x != nil && x.A6 != nil {
		return *x.A6
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetA7() uint64 {
	if x != nil && x.A7 != nil {
		return *x.A7
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS2() uint64 {
	if x != nil && x.S2 != nil {
		return *x.S2
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS3() uint64 {
	if x != nil && x.S3 != nil {
		return *x.S3
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS4() uint64 {
	if x != nil && x.S4 != nil {
		return *x.S4
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS5() uint64 {
	if x != nil && x.S5 != nil {
		return *x.S5
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS6() uint64 {
	if x != nil && x.S6 != nil {
		return *x.S6
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS7() uint64 {
	if x != nil && x.S7 != nil {
		return *x.S7
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS8() uint64 {
	if x != nil && x.S8 != nil {
		return *x.S8
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS9() uint64 {
	if x != nil && x.S9 != nil {
		return *x.S9
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS10() uint64 {
	if x != nil && x.S10 != nil {
		return *x.S10
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetS11() uint64 {
	if x != nil && x.S11 != nil {
		return *x.S11
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetT3() uint64 {
	if x != nil && x.T3 != nil {
		return *x.T3
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetT4() uint64 {
	if x != nil && x.T4 != nil {
		return *x.T4
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetT5() uint64 {
	if x != nil && x.T5 != nil {
		return *x.T5
	}
	return 0
}

func (x *UserRiscv64RegsEntry) GetT6() uint64 {
	if x != nil && x.T6 != nil {
		return *x.T6
	}
	return 0
}

type UserRiscv64DExtEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	F             []uint64               `protobuf:"varint,1,rep,name=f" json:"f,omitempty"`
	Fcsr          *uint32                `protobuf:"varint,2,req,name=fcsr" json:"fcsr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRiscv64DExtEntry) Reset() {
	*x = UserRiscv64DExtEntry{}
	mi := &file_core_riscv64_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRiscv64DExtEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRiscv64DExtEntry) ProtoMessage() {}

func (x *UserRiscv64DExtEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_riscv64_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRiscv64DExtEntry.ProtoReflect.Descriptor instead.
func (*UserRiscv64DExtEntry) Descriptor() ([]byte, []int) {
	return file_core_riscv64_proto_rawDescGZIP(), []int{1}
}

func (x *UserRiscv64DExtEntry) GetF() []uint64 {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *UserRiscv64DExtEntry) GetFcsr() uint32 {
	if x != nil && x.Fcsr != nil {
		return *x.Fcsr
	}
	return 0
}

type ThreadInfoRiscv64 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClearTidAddr  *uint64                `protobuf:"varint,1,req,name=clear_tid_addr,json=clearTidAddr" json:"clear_tid_addr,omitempty"`
	Tls           *uint64                `protobuf:"varint,2,req,name=tls" json:"tls,omitempty"`
	Gpregs        *UserRiscv64RegsEntry  `protobuf:"bytes,3,req,name=gpregs" json:"gpregs,omitempty"`
	Fpsimd        *UserRiscv64DExtEntry  `protobuf:"bytes,4,req,name=fpsimd" json:"fpsimd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadInfoRiscv64) Reset() {
	*x = ThreadInfoRiscv64{}
	mi := &file_core_riscv64_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadInfoRiscv64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadInfoRiscv64) ProtoMessage() {}

func (x *ThreadInfoRiscv64) ProtoReflect() protoreflect.Message {
	mi := &file_core_riscv64_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadInfoRiscv64.ProtoReflect.Descriptor instead.
func (*ThreadInfoRiscv64) Descriptor() ([]byte, []int) {
	return file_core_riscv64_proto_rawDescGZIP(), []int{2}
}

func (x *ThreadInfoRiscv64) GetClearTidAddr() uint64 {
	if x != nil && x.ClearTidAddr != nil {
		return *x.ClearTidAddr
	}
	return 0
}

func (x *ThreadInfoRiscv64) GetTls() uint64 {
	if x != nil && x.Tls != nil {
		return *x.Tls
	}
	return 0
}

func (x *ThreadInfoRiscv64) GetGpregs() *UserRiscv64RegsEntry {
	if x != nil {
		return x.Gpregs
	}
	return nil
}

func (x *ThreadInfoRiscv64) GetFpsimd() *UserRiscv64DExtEntry {
	if x != nil {
		return x.Fpsimd
	}
	return nil
}

var File_core_riscv64_proto protoreflect.FileDescriptor

const file_core_riscv64_proto_rawDesc = "" +
	"\n" +
	"\x12core-riscv64.proto\x1a\n" +
	"opts.proto\"\x9d\x04\n" +
	"\x17user_riscv64_regs_entry\x12\x0e\n" +
	"\x02pc\x18\x01 \x02(\x04R\x02pc\x12\x0e\n" +
	"\x02ra\x18\x02 \x02(\x04R\x02ra\x12\x0e\n" +
	"\x02sp\x18\x03 \x02(\x04R\x02sp\x12\x0e\n" +
	"\x02gp\x18\x04 \x02(\x04R\x02gp\x12\x0e\n" +
	"\x02tp\x18\x05 \x02(\x04R\x02tp\x12\x0e\n" +
	"\x02t0\x18\x06 \x02(\x04R\x02t0\x12\x0e\n" +
	"\x02t1\x18\a \x02(\x04R\x02t1\x12\x0e\n" +
	"\x02t2\x18\b \x02(\x04R\x02t2\x12\x0e\n" +
	"\x02s0\x18\t \x02(\x04R\x02s0\x12\x0e\n" +
	"\x02s1\x18\n" +
	" \x02(\x04R\x02s1\x12\x0e\n" +
	"\x02a0\x18\v \x02(\x04R\x02a0\x12\x0e\n" +
	"\x02a1\x18\f \x02(\x04R\x02a1\x12\x0e\n" +
	"\x02a2\x18\r \x02(\x04R\x02a2\x12\x0e\n" +
	"\x02a3\x18\x0e \x02(\x04R\x02a3\x12\x0e\n" +
	"\x02a4\x18\x0f \x02(\x04R\x02a4\x12\x0e\n" +
	"\x02a5\x18\x10 \x02(\x04R\x02a5\x12\x0e\n" +
	"\x02a6\x18\x11 \x02(\x04R\x02a6\x12\x0e\n" +
	"\x02a7\x18\x12 \x02(\x04R\x02a7\x12\x0e\n" +
	"\x02s2\x18\x13 \x02(\x04R\x02s2\x12\x0e\n" +
	"\x02s3\x18\x14 \x02(\x04R\x02s3\x12\x0e\n" +
	"\x02s4\x18\x15 \x02(\x04R\x02s4\x12\x0e\n" +
	"\x02s5\x18\x16 \x02(\x04R\x02s5\x12\x0e\n" +
	"\x02s6\x18\x17 \x02(\x04R\x02s6\x12\x0e\n" +
	"\x02s7\x18\x18 \x02(\x04R\x02s7\x12\x0e\n" +
	"\x02s8\x18\x19 \x02(\x04R\x02s8\x12\x0e\n" +
	"\x02s9\x18\x1a \x02(\x04R\x02s9\x12\x10\n" +
	"\x03s10\x18\x1b \x02(\x04R\x03s10\x12\x10\n" +
	"\x03s11\x18\x1c \x02(\x04R\x03s11\x12\x0e\n" +
	"\x02t3\x18\x1d \x02(\x04R\x02t3\x12\x0e\n" +
	"\x02t4\x18\x1e \x02(\x04R\x02t4\x12\x0e\n" +
	"\x02t5\x18\x1f \x02(\x04R\x02t5\x12\x0e\n" +
	"\x02t6\x18  \x02(\x04R\x02t6\"<\n" +
	"\x18user_riscv64_d_ext_entry\x12\f\n" +
	"\x01f\x18\x01 \x03(\x04R\x01f\x12\x12\n" +
	"\x04fcsr\x18\x02 \x02(\rR\x04fcsr\"\xc0\x01\n" +
	"\x13thread_info_riscv64\x12+\n" +
	"\x0eclear_tid_addr\x18\x01 \x02(\x04B\x05\xd2?\x02\b\x01R\fclearTidAddr\x12\x10\n" +
	"\x03tls\x18\x02 \x02(\x04R\x03tls\x127\n" +
	"\x06gpregs\x18\x03 \x02(\v2\x18.user_riscv64_regs_entryB\x05\xd2?\x02\b\x01R\x06gpregs\x121\n" +
	"\x06fpsimd\x18\x04 \x02(\v2\x19.user_riscv64_d_ext_entryR\x06fpsimd"

var (
	file_core_riscv64_proto_rawDescOnce sync.Once
	file_core_riscv64_proto_rawDescData []byte
)

func file_core_riscv64_proto_rawDescGZIP() []byte {
	file_core_riscv64_proto_rawDescOnce.Do(func() {
		file_core_riscv64_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_riscv64_proto_rawDesc), len(file_core_riscv64_proto_rawDesc)))
	})
	return file_core_riscv64_proto_rawDescData
}

var file_core_riscv64_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_core_riscv64_proto_goTypes = []any{
	(*UserRiscv64RegsEntry)(nil), // 0: user_riscv64_regs_entry
	(*UserRiscv64DExtEntry)(nil), // 1: user_riscv64_d_ext_entry
	(*ThreadInfoRiscv64)(nil),    // 2: thread_info_riscv64
}
var file_core_riscv64_proto_depIdxs = []int32{
	0, // 0: thread_info_riscv64.gpregs:type_name -> user_riscv64_regs_entry
	1, // 1: thread_info_riscv64.fpsimd:type_name -> user_riscv64_d_ext_entry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_core_riscv64_proto_init() }
func file_core_riscv64_proto_init() {
	if File_core_riscv64_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_riscv64_proto_rawDesc), len(file_core_riscv64_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_riscv64_proto_goTypes,
		DependencyIndexes: file_core_riscv64_proto_depIdxs,
		MessageInfos:      file_core_riscv64_proto_msgTypes,
	}.Build()
	File_core_riscv64_proto = out.File
	file_core_riscv64_proto_goTypes = nil
	file_core_riscv64_proto_depIdxs = nil
}
