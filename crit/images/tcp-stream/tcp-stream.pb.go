// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: tcp-stream.proto

package tcp_stream

import (
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TcpOptsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cork          *bool                  `protobuf:"varint,1,opt,name=cork" json:"cork,omitempty"`
	Nodelay       *bool                  `protobuf:"varint,2,opt,name=nodelay" json:"nodelay,omitempty"`
	Keepcnt       *uint32                `protobuf:"varint,3,opt,name=keepcnt" json:"keepcnt,omitempty"`
	Keepidle      *uint32                `protobuf:"varint,4,opt,name=keepidle" json:"keepidle,omitempty"`
	Keepintvl     *uint32                `protobuf:"varint,5,opt,name=keepintvl" json:"keepintvl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TcpOptsEntry) Reset() {
	*x = TcpOptsEntry{}
	mi := &file_tcp_stream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TcpOptsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpOptsEntry) ProtoMessage() {}

func (x *TcpOptsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_stream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpOptsEntry.ProtoReflect.Descriptor instead.
func (*TcpOptsEntry) Descriptor() ([]byte, []int) {
	return file_tcp_stream_proto_rawDescGZIP(), []int{0}
}

func (x *TcpOptsEntry) GetCork() bool {
	if x != nil && x.Cork != nil {
		return *x.Cork
	}
	return false
}

func (x *TcpOptsEntry) GetNodelay() bool {
	if x != nil && x.Nodelay != nil {
		return *x.Nodelay
	}
	return false
}

func (x *TcpOptsEntry) GetKeepcnt() uint32 {
	if x != nil && x.Keepcnt != nil {
		return *x.Keepcnt
	}
	return 0
}

func (x *TcpOptsEntry) GetKeepidle() uint32 {
	if x != nil && x.Keepidle != nil {
		return *x.Keepidle
	}
	return 0
}

func (x *TcpOptsEntry) GetKeepintvl() uint32 {
	if x != nil && x.Keepintvl != nil {
		return *x.Keepintvl
	}
	return 0
}

type TcpStreamEntry struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	InqLen    *uint32                `protobuf:"varint,1,req,name=inq_len,json=inqLen" json:"inq_len,omitempty"`
	InqSeq    *uint32                `protobuf:"varint,2,req,name=inq_seq,json=inqSeq" json:"inq_seq,omitempty"`
	OutqLen   *uint32                `protobuf:"varint,3,req,name=outq_len,json=outqLen" json:"outq_len,omitempty"` // unsent and sent data in the send queue
	OutqSeq   *uint32                `protobuf:"varint,4,req,name=outq_seq,json=outqSeq" json:"outq_seq,omitempty"`
	OptMask   *uint32                `protobuf:"varint,5,req,name=opt_mask,json=optMask" json:"opt_mask,omitempty"` // TCPI_OPT_ bits
	SndWscale *uint32                `protobuf:"varint,6,req,name=snd_wscale,json=sndWscale" json:"snd_wscale,omitempty"`
	MssClamp  *uint32                `protobuf:"varint,7,req,name=mss_clamp,json=mssClamp" json:"mss_clamp,omitempty"`
	RcvWscale *uint32                `protobuf:"varint,8,opt,name=rcv_wscale,json=rcvWscale" json:"rcv_wscale,omitempty"`
	Timestamp *uint32                `protobuf:"varint,9,opt,name=timestamp" json:"timestamp,omitempty"`
	// These two are deprecated, use tcp_opts_entry instead
	Cork          *bool   `protobuf:"varint,10,opt,name=cork" json:"cork,omitempty"`
	Nodelay       *bool   `protobuf:"varint,11,opt,name=nodelay" json:"nodelay,omitempty"`
	UnsqLen       *uint32 `protobuf:"varint,12,opt,name=unsq_len,json=unsqLen" json:"unsq_len,omitempty"` // unsent data in the send queue
	SndWl1        *uint32 `protobuf:"varint,13,opt,name=snd_wl1,json=sndWl1" json:"snd_wl1,omitempty"`
	SndWnd        *uint32 `protobuf:"varint,14,opt,name=snd_wnd,json=sndWnd" json:"snd_wnd,omitempty"`
	MaxWindow     *uint32 `protobuf:"varint,15,opt,name=max_window,json=maxWindow" json:"max_window,omitempty"`
	RcvWnd        *uint32 `protobuf:"varint,16,opt,name=rcv_wnd,json=rcvWnd" json:"rcv_wnd,omitempty"`
	RcvWup        *uint32 `protobuf:"varint,17,opt,name=rcv_wup,json=rcvWup" json:"rcv_wup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TcpStreamEntry) Reset() {
	*x = TcpStreamEntry{}
	mi := &file_tcp_stream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TcpStreamEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpStreamEntry) ProtoMessage() {}

func (x *TcpStreamEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_stream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpStreamEntry.ProtoReflect.Descriptor instead.
func (*TcpStreamEntry) Descriptor() ([]byte, []int) {
	return file_tcp_stream_proto_rawDescGZIP(), []int{1}
}

func (x *TcpStreamEntry) GetInqLen() uint32 {
	if x != nil && x.InqLen != nil {
		return *x.InqLen
	}
	return 0
}

func (x *TcpStreamEntry) GetInqSeq() uint32 {
	if x != nil && x.InqSeq != nil {
		return *x.InqSeq
	}
	return 0
}

func (x *TcpStreamEntry) GetOutqLen() uint32 {
	if x != nil && x.OutqLen != nil {
		return *x.OutqLen
	}
	return 0
}

func (x *TcpStreamEntry) GetOutqSeq() uint32 {
	if x != nil && x.OutqSeq != nil {
		return *x.OutqSeq
	}
	return 0
}

func (x *TcpStreamEntry) GetOptMask() uint32 {
	if x != nil && x.OptMask != nil {
		return *x.OptMask
	}
	return 0
}

func (x *TcpStreamEntry) GetSndWscale() uint32 {
	if x != nil && x.SndWscale != nil {
		return *x.SndWscale
	}
	return 0
}

func (x *TcpStreamEntry) GetMssClamp() uint32 {
	if x != nil && x.MssClamp != nil {
		return *x.MssClamp
	}
	return 0
}

func (x *TcpStreamEntry) GetRcvWscale() uint32 {
	if x != nil && x.RcvWscale != nil {
		return *x.RcvWscale
	}
	return 0
}

func (x *TcpStreamEntry) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *TcpStreamEntry) GetCork() bool {
	if x != nil && x.Cork != nil {
		return *x.Cork
	}
	return false
}

func (x *TcpStreamEntry) GetNodelay() bool {
	if x != nil && x.Nodelay != nil {
		return *x.Nodelay
	}
	return false
}

func (x *TcpStreamEntry) GetUnsqLen() uint32 {
	if x != nil && x.UnsqLen != nil {
		return *x.UnsqLen
	}
	return 0
}

func (x *TcpStreamEntry) GetSndWl1() uint32 {
	if x != nil && x.SndWl1 != nil {
		return *x.SndWl1
	}
	return 0
}

func (x *TcpStreamEntry) GetSndWnd() uint32 {
	if x != nil && x.SndWnd != nil {
		return *x.SndWnd
	}
	return 0
}

func (x *TcpStreamEntry) GetMaxWindow() uint32 {
	if x != nil && x.MaxWindow != nil {
		return *x.MaxWindow
	}
	return 0
}

func (x *TcpStreamEntry) GetRcvWnd() uint32 {
	if x != nil && x.RcvWnd != nil {
		return *x.RcvWnd
	}
	return 0
}

func (x *TcpStreamEntry) GetRcvWup() uint32 {
	if x != nil && x.RcvWup != nil {
		return *x.RcvWup
	}
	return 0
}

var File_tcp_stream_proto protoreflect.FileDescriptor

const file_tcp_stream_proto_rawDesc = "" +
	"\n" +
	"\x10tcp-stream.proto\x1a\n" +
	"opts.proto\"\x92\x01\n" +
	"\x0etcp_opts_entry\x12\x12\n" +
	"\x04cork\x18\x01 \x01(\bR\x04cork\x12\x18\n" +
	"\anodelay\x18\x02 \x01(\bR\anodelay\x12\x18\n" +
	"\akeepcnt\x18\x03 \x01(\rR\akeepcnt\x12\x1a\n" +
	"\bkeepidle\x18\x04 \x01(\rR\bkeepidle\x12\x1c\n" +
	"\tkeepintvl\x18\x05 \x01(\rR\tkeepintvl\"\xe1\x03\n" +
	"\x10tcp_stream_entry\x12\x17\n" +
	"\ainq_len\x18\x01 \x02(\rR\x06inqLen\x12\x17\n" +
	"\ainq_seq\x18\x02 \x02(\rR\x06inqSeq\x12\x19\n" +
	"\boutq_len\x18\x03 \x02(\rR\aoutqLen\x12\x19\n" +
	"\boutq_seq\x18\x04 \x02(\rR\aoutqSeq\x12 \n" +
	"\bopt_mask\x18\x05 \x02(\rB\x05\x92~\x02\b\x01R\aoptMask\x12\x1d\n" +
	"\n" +
	"snd_wscale\x18\x06 \x02(\rR\tsndWscale\x12\x1b\n" +
	"\tmss_clamp\x18\a \x02(\rR\bmssClamp\x12\x1d\n" +
	"\n" +
	"rcv_wscale\x18\b \x01(\rR\trcvWscale\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\rR\ttimestamp\x12\x12\n" +
	"\x04cork\x18\n" +
	" \x01(\bR\x04cork\x12\x18\n" +
	"\anodelay\x18\v \x01(\bR\anodelay\x12\x19\n" +
	"\bunsq_len\x18\f \x01(\rR\aunsqLen\x12\x17\n" +
	"\asnd_wl1\x18\r \x01(\rR\x06sndWl1\x12\x17\n" +
	"\asnd_wnd\x18\x0e \x01(\rR\x06sndWnd\x12\x1d\n" +
	"\n" +
	"max_window\x18\x0f \x01(\rR\tmaxWindow\x12\x17\n" +
	"\arcv_wnd\x18\x10 \x01(\rR\x06rcvWnd\x12\x17\n" +
	"\arcv_wup\x18\x11 \x01(\rR\x06rcvWup"

var (
	file_tcp_stream_proto_rawDescOnce sync.Once
	file_tcp_stream_proto_rawDescData []byte
)

func file_tcp_stream_proto_rawDescGZIP() []byte {
	file_tcp_stream_proto_rawDescOnce.Do(func() {
		file_tcp_stream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tcp_stream_proto_rawDesc), len(file_tcp_stream_proto_rawDesc)))
	})
	return file_tcp_stream_proto_rawDescData
}

var file_tcp_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tcp_stream_proto_goTypes = []any{
	(*TcpOptsEntry)(nil),   // 0: tcp_opts_entry
	(*TcpStreamEntry)(nil), // 1: tcp_stream_entry
}
var file_tcp_stream_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tcp_stream_proto_init() }
func file_tcp_stream_proto_init() {
	if File_tcp_stream_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tcp_stream_proto_rawDesc), len(file_tcp_stream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tcp_stream_proto_goTypes,
		DependencyIndexes: file_tcp_stream_proto_depIdxs,
		MessageInfos:      file_tcp_stream_proto_msgTypes,
	}.Build()
	File_tcp_stream_proto = out.File
	file_tcp_stream_proto_goTypes = nil
	file_tcp_stream_proto_depIdxs = nil
}
