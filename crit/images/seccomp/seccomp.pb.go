// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: seccomp.proto

package seccomp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeccompFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        []byte                 `protobuf:"bytes,1,req,name=filter" json:"filter,omitempty"`
	Prev          *uint32                `protobuf:"varint,2,opt,name=prev" json:"prev,omitempty"`
	Flags         *uint32                `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeccompFilter) Reset() {
	*x = SeccompFilter{}
	mi := &file_seccomp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeccompFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeccompFilter) ProtoMessage() {}

func (x *SeccompFilter) ProtoReflect() protoreflect.Message {
	mi := &file_seccomp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeccompFilter.ProtoReflect.Descriptor instead.
func (*SeccompFilter) Descriptor() ([]byte, []int) {
	return file_seccomp_proto_rawDescGZIP(), []int{0}
}

func (x *SeccompFilter) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SeccompFilter) GetPrev() uint32 {
	if x != nil && x.Prev != nil {
		return *x.Prev
	}
	return 0
}

func (x *SeccompFilter) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

type SeccompEntry struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SeccompFilters []*SeccompFilter       `protobuf:"bytes,1,rep,name=seccomp_filters,json=seccompFilters" json:"seccomp_filters,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SeccompEntry) Reset() {
	*x = SeccompEntry{}
	mi := &file_seccomp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeccompEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeccompEntry) ProtoMessage() {}

func (x *SeccompEntry) ProtoReflect() protoreflect.Message {
	mi := &file_seccomp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeccompEntry.ProtoReflect.Descriptor instead.
func (*SeccompEntry) Descriptor() ([]byte, []int) {
	return file_seccomp_proto_rawDescGZIP(), []int{1}
}

func (x *SeccompEntry) GetSeccompFilters() []*SeccompFilter {
	if x != nil {
		return x.SeccompFilters
	}
	return nil
}

var File_seccomp_proto protoreflect.FileDescriptor

const file_seccomp_proto_rawDesc = "" +
	"\n" +
	"\rseccomp.proto\"R\n" +
	"\x0eseccomp_filter\x12\x16\n" +
	"\x06filter\x18\x01 \x02(\fR\x06filter\x12\x12\n" +
	"\x04prev\x18\x02 \x01(\rR\x04prev\x12\x14\n" +
	"\x05flags\x18\x03 \x01(\rR\x05flags\"I\n" +
	"\rseccomp_entry\x128\n" +
	"\x0fseccomp_filters\x18\x01 \x03(\v2\x0f.seccomp_filterR\x0eseccompFilters"

var (
	file_seccomp_proto_rawDescOnce sync.Once
	file_seccomp_proto_rawDescData []byte
)

func file_seccomp_proto_rawDescGZIP() []byte {
	file_seccomp_proto_rawDescOnce.Do(func() {
		file_seccomp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_seccomp_proto_rawDesc), len(file_seccomp_proto_rawDesc)))
	})
	return file_seccomp_proto_rawDescData
}

var file_seccomp_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_seccomp_proto_goTypes = []any{
	(*SeccompFilter)(nil), // 0: seccomp_filter
	(*SeccompEntry)(nil),  // 1: seccomp_entry
}
var file_seccomp_proto_depIdxs = []int32{
	0, // 0: seccomp_entry.seccomp_filters:type_name -> seccomp_filter
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_seccomp_proto_init() }
func file_seccomp_proto_init() {
	if File_seccomp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_seccomp_proto_rawDesc), len(file_seccomp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_seccomp_proto_goTypes,
		DependencyIndexes: file_seccomp_proto_depIdxs,
		MessageInfos:      file_seccomp_proto_msgTypes,
	}.Build()
	File_seccomp_proto = out.File
	file_seccomp_proto_goTypes = nil
	file_seccomp_proto_depIdxs = nil
}
