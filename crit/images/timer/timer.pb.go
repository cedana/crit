// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: timer.proto

package timer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ItimerEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Isec          *uint64                `protobuf:"varint,1,req,name=isec" json:"isec,omitempty"`
	Iusec         *uint64                `protobuf:"varint,2,req,name=iusec" json:"iusec,omitempty"`
	Vsec          *uint64                `protobuf:"varint,3,req,name=vsec" json:"vsec,omitempty"`
	Vusec         *uint64                `protobuf:"varint,4,req,name=vusec" json:"vusec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItimerEntry) Reset() {
	*x = ItimerEntry{}
	mi := &file_timer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItimerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItimerEntry) ProtoMessage() {}

func (x *ItimerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItimerEntry.ProtoReflect.Descriptor instead.
func (*ItimerEntry) Descriptor() ([]byte, []int) {
	return file_timer_proto_rawDescGZIP(), []int{0}
}

func (x *ItimerEntry) GetIsec() uint64 {
	if x != nil && x.Isec != nil {
		return *x.Isec
	}
	return 0
}

func (x *ItimerEntry) GetIusec() uint64 {
	if x != nil && x.Iusec != nil {
		return *x.Iusec
	}
	return 0
}

func (x *ItimerEntry) GetVsec() uint64 {
	if x != nil && x.Vsec != nil {
		return *x.Vsec
	}
	return 0
}

func (x *ItimerEntry) GetVusec() uint64 {
	if x != nil && x.Vusec != nil {
		return *x.Vusec
	}
	return 0
}

type PosixTimerEntry struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ItId           *uint32                `protobuf:"varint,1,req,name=it_id,json=itId" json:"it_id,omitempty"`
	ClockId        *uint32                `protobuf:"varint,2,req,name=clock_id,json=clockId" json:"clock_id,omitempty"`
	SiSigno        *uint32                `protobuf:"varint,3,req,name=si_signo,json=siSigno" json:"si_signo,omitempty"`
	ItSigevNotify  *uint32                `protobuf:"varint,4,req,name=it_sigev_notify,json=itSigevNotify" json:"it_sigev_notify,omitempty"`
	SivalPtr       *uint64                `protobuf:"varint,5,req,name=sival_ptr,json=sivalPtr" json:"sival_ptr,omitempty"`
	Overrun        *uint32                `protobuf:"varint,6,req,name=overrun" json:"overrun,omitempty"`
	Isec           *uint64                `protobuf:"varint,7,req,name=isec" json:"isec,omitempty"`
	Insec          *uint64                `protobuf:"varint,8,req,name=insec" json:"insec,omitempty"`
	Vsec           *uint64                `protobuf:"varint,9,req,name=vsec" json:"vsec,omitempty"`
	Vnsec          *uint64                `protobuf:"varint,10,req,name=vnsec" json:"vnsec,omitempty"`
	NotifyThreadId *int32                 `protobuf:"varint,11,opt,name=notify_thread_id,json=notifyThreadId" json:"notify_thread_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PosixTimerEntry) Reset() {
	*x = PosixTimerEntry{}
	mi := &file_timer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PosixTimerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosixTimerEntry) ProtoMessage() {}

func (x *PosixTimerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosixTimerEntry.ProtoReflect.Descriptor instead.
func (*PosixTimerEntry) Descriptor() ([]byte, []int) {
	return file_timer_proto_rawDescGZIP(), []int{1}
}

func (x *PosixTimerEntry) GetItId() uint32 {
	if x != nil && x.ItId != nil {
		return *x.ItId
	}
	return 0
}

func (x *PosixTimerEntry) GetClockId() uint32 {
	if x != nil && x.ClockId != nil {
		return *x.ClockId
	}
	return 0
}

func (x *PosixTimerEntry) GetSiSigno() uint32 {
	if x != nil && x.SiSigno != nil {
		return *x.SiSigno
	}
	return 0
}

func (x *PosixTimerEntry) GetItSigevNotify() uint32 {
	if x != nil && x.ItSigevNotify != nil {
		return *x.ItSigevNotify
	}
	return 0
}

func (x *PosixTimerEntry) GetSivalPtr() uint64 {
	if x != nil && x.SivalPtr != nil {
		return *x.SivalPtr
	}
	return 0
}

func (x *PosixTimerEntry) GetOverrun() uint32 {
	if x != nil && x.Overrun != nil {
		return *x.Overrun
	}
	return 0
}

func (x *PosixTimerEntry) GetIsec() uint64 {
	if x != nil && x.Isec != nil {
		return *x.Isec
	}
	return 0
}

func (x *PosixTimerEntry) GetInsec() uint64 {
	if x != nil && x.Insec != nil {
		return *x.Insec
	}
	return 0
}

func (x *PosixTimerEntry) GetVsec() uint64 {
	if x != nil && x.Vsec != nil {
		return *x.Vsec
	}
	return 0
}

func (x *PosixTimerEntry) GetVnsec() uint64 {
	if x != nil && x.Vnsec != nil {
		return *x.Vnsec
	}
	return 0
}

func (x *PosixTimerEntry) GetNotifyThreadId() int32 {
	if x != nil && x.NotifyThreadId != nil {
		return *x.NotifyThreadId
	}
	return 0
}

type TaskTimersEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Real          *ItimerEntry           `protobuf:"bytes,1,req,name=real" json:"real,omitempty"`
	Virt          *ItimerEntry           `protobuf:"bytes,2,req,name=virt" json:"virt,omitempty"`
	Prof          *ItimerEntry           `protobuf:"bytes,3,req,name=prof" json:"prof,omitempty"`
	Posix         []*PosixTimerEntry     `protobuf:"bytes,4,rep,name=posix" json:"posix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskTimersEntry) Reset() {
	*x = TaskTimersEntry{}
	mi := &file_timer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskTimersEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTimersEntry) ProtoMessage() {}

func (x *TaskTimersEntry) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTimersEntry.ProtoReflect.Descriptor instead.
func (*TaskTimersEntry) Descriptor() ([]byte, []int) {
	return file_timer_proto_rawDescGZIP(), []int{2}
}

func (x *TaskTimersEntry) GetReal() *ItimerEntry {
	if x != nil {
		return x.Real
	}
	return nil
}

func (x *TaskTimersEntry) GetVirt() *ItimerEntry {
	if x != nil {
		return x.Virt
	}
	return nil
}

func (x *TaskTimersEntry) GetProf() *ItimerEntry {
	if x != nil {
		return x.Prof
	}
	return nil
}

func (x *TaskTimersEntry) GetPosix() []*PosixTimerEntry {
	if x != nil {
		return x.Posix
	}
	return nil
}

var File_timer_proto protoreflect.FileDescriptor

const file_timer_proto_rawDesc = "" +
	"\n" +
	"\vtimer.proto\"b\n" +
	"\fitimer_entry\x12\x12\n" +
	"\x04isec\x18\x01 \x02(\x04R\x04isec\x12\x14\n" +
	"\x05iusec\x18\x02 \x02(\x04R\x05iusec\x12\x12\n" +
	"\x04vsec\x18\x03 \x02(\x04R\x04vsec\x12\x14\n" +
	"\x05vusec\x18\x04 \x02(\x04R\x05vusec\"\xbb\x02\n" +
	"\x11posix_timer_entry\x12\x13\n" +
	"\x05it_id\x18\x01 \x02(\rR\x04itId\x12\x19\n" +
	"\bclock_id\x18\x02 \x02(\rR\aclockId\x12\x19\n" +
	"\bsi_signo\x18\x03 \x02(\rR\asiSigno\x12&\n" +
	"\x0fit_sigev_notify\x18\x04 \x02(\rR\ritSigevNotify\x12\x1b\n" +
	"\tsival_ptr\x18\x05 \x02(\x04R\bsivalPtr\x12\x18\n" +
	"\aoverrun\x18\x06 \x02(\rR\aoverrun\x12\x12\n" +
	"\x04isec\x18\a \x02(\x04R\x04isec\x12\x14\n" +
	"\x05insec\x18\b \x02(\x04R\x05insec\x12\x12\n" +
	"\x04vsec\x18\t \x02(\x04R\x04vsec\x12\x14\n" +
	"\x05vnsec\x18\n" +
	" \x02(\x04R\x05vnsec\x12(\n" +
	"\x10notify_thread_id\x18\v \x01(\x05R\x0enotifyThreadId\"\xa6\x01\n" +
	"\x11task_timers_entry\x12!\n" +
	"\x04real\x18\x01 \x02(\v2\r.itimer_entryR\x04real\x12!\n" +
	"\x04virt\x18\x02 \x02(\v2\r.itimer_entryR\x04virt\x12!\n" +
	"\x04prof\x18\x03 \x02(\v2\r.itimer_entryR\x04prof\x12(\n" +
	"\x05posix\x18\x04 \x03(\v2\x12.posix_timer_entryR\x05posix"

var (
	file_timer_proto_rawDescOnce sync.Once
	file_timer_proto_rawDescData []byte
)

func file_timer_proto_rawDescGZIP() []byte {
	file_timer_proto_rawDescOnce.Do(func() {
		file_timer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_timer_proto_rawDesc), len(file_timer_proto_rawDesc)))
	})
	return file_timer_proto_rawDescData
}

var file_timer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_timer_proto_goTypes = []any{
	(*ItimerEntry)(nil),     // 0: itimer_entry
	(*PosixTimerEntry)(nil), // 1: posix_timer_entry
	(*TaskTimersEntry)(nil), // 2: task_timers_entry
}
var file_timer_proto_depIdxs = []int32{
	0, // 0: task_timers_entry.real:type_name -> itimer_entry
	0, // 1: task_timers_entry.virt:type_name -> itimer_entry
	0, // 2: task_timers_entry.prof:type_name -> itimer_entry
	1, // 3: task_timers_entry.posix:type_name -> posix_timer_entry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_timer_proto_init() }
func file_timer_proto_init() {
	if File_timer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_timer_proto_rawDesc), len(file_timer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_timer_proto_goTypes,
		DependencyIndexes: file_timer_proto_depIdxs,
		MessageInfos:      file_timer_proto_msgTypes,
	}.Build()
	File_timer_proto = out.File
	file_timer_proto_goTypes = nil
	file_timer_proto_depIdxs = nil
}
