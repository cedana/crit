// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: sit.proto

package sit

import (
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SitEntry struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Link           *uint32                `protobuf:"varint,1,opt,name=link" json:"link,omitempty"`
	Local          []uint32               `protobuf:"varint,2,rep,name=local" json:"local,omitempty"`
	Remote         []uint32               `protobuf:"varint,3,rep,name=remote" json:"remote,omitempty"`
	Ttl            *uint32                `protobuf:"varint,4,opt,name=ttl" json:"ttl,omitempty"`
	Tos            *uint32                `protobuf:"varint,5,opt,name=tos" json:"tos,omitempty"`
	Pmtudisc       *bool                  `protobuf:"varint,6,opt,name=pmtudisc" json:"pmtudisc,omitempty"`
	Proto          *uint32                `protobuf:"varint,7,opt,name=proto" json:"proto,omitempty"`
	Flags          *uint32                `protobuf:"varint,8,opt,name=flags" json:"flags,omitempty"`
	EncapType      *uint32                `protobuf:"varint,9,opt,name=encap_type,json=encapType" json:"encap_type,omitempty"`
	EncapFlags     *uint32                `protobuf:"varint,10,opt,name=encap_flags,json=encapFlags" json:"encap_flags,omitempty"`
	EncapSport     *uint32                `protobuf:"varint,11,opt,name=encap_sport,json=encapSport" json:"encap_sport,omitempty"`
	EncapDport     *uint32                `protobuf:"varint,12,opt,name=encap_dport,json=encapDport" json:"encap_dport,omitempty"`
	RdPrefixlen    *uint32                `protobuf:"varint,13,opt,name=rd_prefixlen,json=rdPrefixlen" json:"rd_prefixlen,omitempty"`
	RdPrefix       []uint32               `protobuf:"varint,14,rep,name=rd_prefix,json=rdPrefix" json:"rd_prefix,omitempty"`
	RelayPrefixlen *uint32                `protobuf:"varint,15,opt,name=relay_prefixlen,json=relayPrefixlen" json:"relay_prefixlen,omitempty"`
	RelayPrefix    []uint32               `protobuf:"varint,16,rep,name=relay_prefix,json=relayPrefix" json:"relay_prefix,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SitEntry) Reset() {
	*x = SitEntry{}
	mi := &file_sit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SitEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SitEntry) ProtoMessage() {}

func (x *SitEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SitEntry.ProtoReflect.Descriptor instead.
func (*SitEntry) Descriptor() ([]byte, []int) {
	return file_sit_proto_rawDescGZIP(), []int{0}
}

func (x *SitEntry) GetLink() uint32 {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return 0
}

func (x *SitEntry) GetLocal() []uint32 {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *SitEntry) GetRemote() []uint32 {
	if x != nil {
		return x.Remote
	}
	return nil
}

func (x *SitEntry) GetTtl() uint32 {
	if x != nil && x.Ttl != nil {
		return *x.Ttl
	}
	return 0
}

func (x *SitEntry) GetTos() uint32 {
	if x != nil && x.Tos != nil {
		return *x.Tos
	}
	return 0
}

func (x *SitEntry) GetPmtudisc() bool {
	if x != nil && x.Pmtudisc != nil {
		return *x.Pmtudisc
	}
	return false
}

func (x *SitEntry) GetProto() uint32 {
	if x != nil && x.Proto != nil {
		return *x.Proto
	}
	return 0
}

func (x *SitEntry) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *SitEntry) GetEncapType() uint32 {
	if x != nil && x.EncapType != nil {
		return *x.EncapType
	}
	return 0
}

func (x *SitEntry) GetEncapFlags() uint32 {
	if x != nil && x.EncapFlags != nil {
		return *x.EncapFlags
	}
	return 0
}

func (x *SitEntry) GetEncapSport() uint32 {
	if x != nil && x.EncapSport != nil {
		return *x.EncapSport
	}
	return 0
}

func (x *SitEntry) GetEncapDport() uint32 {
	if x != nil && x.EncapDport != nil {
		return *x.EncapDport
	}
	return 0
}

func (x *SitEntry) GetRdPrefixlen() uint32 {
	if x != nil && x.RdPrefixlen != nil {
		return *x.RdPrefixlen
	}
	return 0
}

func (x *SitEntry) GetRdPrefix() []uint32 {
	if x != nil {
		return x.RdPrefix
	}
	return nil
}

func (x *SitEntry) GetRelayPrefixlen() uint32 {
	if x != nil && x.RelayPrefixlen != nil {
		return *x.RelayPrefixlen
	}
	return 0
}

func (x *SitEntry) GetRelayPrefix() []uint32 {
	if x != nil {
		return x.RelayPrefix
	}
	return nil
}

var File_sit_proto protoreflect.FileDescriptor

const file_sit_proto_rawDesc = "" +
	"\n" +
	"\tsit.proto\x1a\n" +
	"opts.proto\"\xe3\x03\n" +
	"\tsit_entry\x12\x12\n" +
	"\x04link\x18\x01 \x01(\rR\x04link\x12\x1b\n" +
	"\x05local\x18\x02 \x03(\rB\x05\x92~\x02\x10\x01R\x05local\x12\x1d\n" +
	"\x06remote\x18\x03 \x03(\rB\x05\x92~\x02\x10\x01R\x06remote\x12\x10\n" +
	"\x03ttl\x18\x04 \x01(\rR\x03ttl\x12\x10\n" +
	"\x03tos\x18\x05 \x01(\rR\x03tos\x12\x1a\n" +
	"\bpmtudisc\x18\x06 \x01(\bR\bpmtudisc\x12\x14\n" +
	"\x05proto\x18\a \x01(\rR\x05proto\x12\x14\n" +
	"\x05flags\x18\b \x01(\rR\x05flags\x12\x1d\n" +
	"\n" +
	"encap_type\x18\t \x01(\rR\tencapType\x12\x1f\n" +
	"\vencap_flags\x18\n" +
	" \x01(\rR\n" +
	"encapFlags\x12\x1f\n" +
	"\vencap_sport\x18\v \x01(\rR\n" +
	"encapSport\x12\x1f\n" +
	"\vencap_dport\x18\f \x01(\rR\n" +
	"encapDport\x12!\n" +
	"\frd_prefixlen\x18\r \x01(\rR\vrdPrefixlen\x12\"\n" +
	"\trd_prefix\x18\x0e \x03(\rB\x05\x92~\x02\x10\x01R\brdPrefix\x12'\n" +
	"\x0frelay_prefixlen\x18\x0f \x01(\rR\x0erelayPrefixlen\x12(\n" +
	"\frelay_prefix\x18\x10 \x03(\rB\x05\x92~\x02\x10\x01R\vrelayPrefix"

var (
	file_sit_proto_rawDescOnce sync.Once
	file_sit_proto_rawDescData []byte
)

func file_sit_proto_rawDescGZIP() []byte {
	file_sit_proto_rawDescOnce.Do(func() {
		file_sit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sit_proto_rawDesc), len(file_sit_proto_rawDesc)))
	})
	return file_sit_proto_rawDescData
}

var file_sit_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sit_proto_goTypes = []any{
	(*SitEntry)(nil), // 0: sit_entry
}
var file_sit_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sit_proto_init() }
func file_sit_proto_init() {
	if File_sit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sit_proto_rawDesc), len(file_sit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sit_proto_goTypes,
		DependencyIndexes: file_sit_proto_depIdxs,
		MessageInfos:      file_sit_proto_msgTypes,
	}.Build()
	File_sit_proto = out.File
	file_sit_proto_goTypes = nil
	file_sit_proto_depIdxs = nil
}
