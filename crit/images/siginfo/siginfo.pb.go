// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: siginfo.proto

package siginfo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SiginfoEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Siginfo       []byte                 `protobuf:"bytes,1,req,name=siginfo" json:"siginfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiginfoEntry) Reset() {
	*x = SiginfoEntry{}
	mi := &file_siginfo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiginfoEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiginfoEntry) ProtoMessage() {}

func (x *SiginfoEntry) ProtoReflect() protoreflect.Message {
	mi := &file_siginfo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiginfoEntry.ProtoReflect.Descriptor instead.
func (*SiginfoEntry) Descriptor() ([]byte, []int) {
	return file_siginfo_proto_rawDescGZIP(), []int{0}
}

func (x *SiginfoEntry) GetSiginfo() []byte {
	if x != nil {
		return x.Siginfo
	}
	return nil
}

type SignalQueueEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signals       []*SiginfoEntry        `protobuf:"bytes,1,rep,name=signals" json:"signals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalQueueEntry) Reset() {
	*x = SignalQueueEntry{}
	mi := &file_siginfo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalQueueEntry) ProtoMessage() {}

func (x *SignalQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_siginfo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalQueueEntry.ProtoReflect.Descriptor instead.
func (*SignalQueueEntry) Descriptor() ([]byte, []int) {
	return file_siginfo_proto_rawDescGZIP(), []int{1}
}

func (x *SignalQueueEntry) GetSignals() []*SiginfoEntry {
	if x != nil {
		return x.Signals
	}
	return nil
}

var File_siginfo_proto protoreflect.FileDescriptor

const file_siginfo_proto_rawDesc = "" +
	"\n" +
	"\rsiginfo.proto\")\n" +
	"\rsiginfo_entry\x12\x18\n" +
	"\asiginfo\x18\x01 \x02(\fR\asiginfo\">\n" +
	"\x12signal_queue_entry\x12(\n" +
	"\asignals\x18\x01 \x03(\v2\x0e.siginfo_entryR\asignals"

var (
	file_siginfo_proto_rawDescOnce sync.Once
	file_siginfo_proto_rawDescData []byte
)

func file_siginfo_proto_rawDescGZIP() []byte {
	file_siginfo_proto_rawDescOnce.Do(func() {
		file_siginfo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_siginfo_proto_rawDesc), len(file_siginfo_proto_rawDesc)))
	})
	return file_siginfo_proto_rawDescData
}

var file_siginfo_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_siginfo_proto_goTypes = []any{
	(*SiginfoEntry)(nil),     // 0: siginfo_entry
	(*SignalQueueEntry)(nil), // 1: signal_queue_entry
}
var file_siginfo_proto_depIdxs = []int32{
	0, // 0: signal_queue_entry.signals:type_name -> siginfo_entry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_siginfo_proto_init() }
func file_siginfo_proto_init() {
	if File_siginfo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_siginfo_proto_rawDesc), len(file_siginfo_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_siginfo_proto_goTypes,
		DependencyIndexes: file_siginfo_proto_depIdxs,
		MessageInfos:      file_siginfo_proto_msgTypes,
	}.Build()
	File_siginfo_proto = out.File
	file_siginfo_proto_goTypes = nil
	file_siginfo_proto_depIdxs = nil
}
