// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: cgroup.proto

package cgroup

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CgroupPerms struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          *uint32                `protobuf:"varint,1,req,name=mode" json:"mode,omitempty"`
	Uid           *uint32                `protobuf:"varint,2,req,name=uid" json:"uid,omitempty"`
	Gid           *uint32                `protobuf:"varint,3,req,name=gid" json:"gid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CgroupPerms) Reset() {
	*x = CgroupPerms{}
	mi := &file_cgroup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CgroupPerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgroupPerms) ProtoMessage() {}

func (x *CgroupPerms) ProtoReflect() protoreflect.Message {
	mi := &file_cgroup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgroupPerms.ProtoReflect.Descriptor instead.
func (*CgroupPerms) Descriptor() ([]byte, []int) {
	return file_cgroup_proto_rawDescGZIP(), []int{0}
}

func (x *CgroupPerms) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *CgroupPerms) GetUid() uint32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *CgroupPerms) GetGid() uint32 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

type CgroupPropEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value         *string                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	Perms         *CgroupPerms           `protobuf:"bytes,3,opt,name=perms" json:"perms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CgroupPropEntry) Reset() {
	*x = CgroupPropEntry{}
	mi := &file_cgroup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CgroupPropEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgroupPropEntry) ProtoMessage() {}

func (x *CgroupPropEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cgroup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgroupPropEntry.ProtoReflect.Descriptor instead.
func (*CgroupPropEntry) Descriptor() ([]byte, []int) {
	return file_cgroup_proto_rawDescGZIP(), []int{1}
}

func (x *CgroupPropEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CgroupPropEntry) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CgroupPropEntry) GetPerms() *CgroupPerms {
	if x != nil {
		return x.Perms
	}
	return nil
}

type CgroupDirEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DirName       *string                `protobuf:"bytes,1,req,name=dir_name,json=dirName" json:"dir_name,omitempty"`
	Children      []*CgroupDirEntry      `protobuf:"bytes,2,rep,name=children" json:"children,omitempty"`
	Properties    []*CgroupPropEntry     `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty"`
	DirPerms      *CgroupPerms           `protobuf:"bytes,4,opt,name=dir_perms,json=dirPerms" json:"dir_perms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CgroupDirEntry) Reset() {
	*x = CgroupDirEntry{}
	mi := &file_cgroup_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CgroupDirEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgroupDirEntry) ProtoMessage() {}

func (x *CgroupDirEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cgroup_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgroupDirEntry.ProtoReflect.Descriptor instead.
func (*CgroupDirEntry) Descriptor() ([]byte, []int) {
	return file_cgroup_proto_rawDescGZIP(), []int{2}
}

func (x *CgroupDirEntry) GetDirName() string {
	if x != nil && x.DirName != nil {
		return *x.DirName
	}
	return ""
}

func (x *CgroupDirEntry) GetChildren() []*CgroupDirEntry {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *CgroupDirEntry) GetProperties() []*CgroupPropEntry {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *CgroupDirEntry) GetDirPerms() *CgroupPerms {
	if x != nil {
		return x.DirPerms
	}
	return nil
}

type CgControllerEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cnames        []string               `protobuf:"bytes,1,rep,name=cnames" json:"cnames,omitempty"`
	Dirs          []*CgroupDirEntry      `protobuf:"bytes,2,rep,name=dirs" json:"dirs,omitempty"`
	IsThreaded    *bool                  `protobuf:"varint,3,opt,name=is_threaded,json=isThreaded" json:"is_threaded,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CgControllerEntry) Reset() {
	*x = CgControllerEntry{}
	mi := &file_cgroup_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CgControllerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgControllerEntry) ProtoMessage() {}

func (x *CgControllerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cgroup_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgControllerEntry.ProtoReflect.Descriptor instead.
func (*CgControllerEntry) Descriptor() ([]byte, []int) {
	return file_cgroup_proto_rawDescGZIP(), []int{3}
}

func (x *CgControllerEntry) GetCnames() []string {
	if x != nil {
		return x.Cnames
	}
	return nil
}

func (x *CgControllerEntry) GetDirs() []*CgroupDirEntry {
	if x != nil {
		return x.Dirs
	}
	return nil
}

func (x *CgControllerEntry) GetIsThreaded() bool {
	if x != nil && x.IsThreaded != nil {
		return *x.IsThreaded
	}
	return false
}

type CgMemberEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Path          *string                `protobuf:"bytes,2,req,name=path" json:"path,omitempty"`
	CgnsPrefix    *uint32                `protobuf:"varint,3,opt,name=cgns_prefix,json=cgnsPrefix" json:"cgns_prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CgMemberEntry) Reset() {
	*x = CgMemberEntry{}
	mi := &file_cgroup_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CgMemberEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgMemberEntry) ProtoMessage() {}

func (x *CgMemberEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cgroup_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgMemberEntry.ProtoReflect.Descriptor instead.
func (*CgMemberEntry) Descriptor() ([]byte, []int) {
	return file_cgroup_proto_rawDescGZIP(), []int{4}
}

func (x *CgMemberEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CgMemberEntry) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *CgMemberEntry) GetCgnsPrefix() uint32 {
	if x != nil && x.CgnsPrefix != nil {
		return *x.CgnsPrefix
	}
	return 0
}

type CgSetEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Ctls          []*CgMemberEntry       `protobuf:"bytes,2,rep,name=ctls" json:"ctls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CgSetEntry) Reset() {
	*x = CgSetEntry{}
	mi := &file_cgroup_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CgSetEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgSetEntry) ProtoMessage() {}

func (x *CgSetEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cgroup_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgSetEntry.ProtoReflect.Descriptor instead.
func (*CgSetEntry) Descriptor() ([]byte, []int) {
	return file_cgroup_proto_rawDescGZIP(), []int{5}
}

func (x *CgSetEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CgSetEntry) GetCtls() []*CgMemberEntry {
	if x != nil {
		return x.Ctls
	}
	return nil
}

type CgroupEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sets          []*CgSetEntry          `protobuf:"bytes,1,rep,name=sets" json:"sets,omitempty"`
	Controllers   []*CgControllerEntry   `protobuf:"bytes,2,rep,name=controllers" json:"controllers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CgroupEntry) Reset() {
	*x = CgroupEntry{}
	mi := &file_cgroup_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CgroupEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgroupEntry) ProtoMessage() {}

func (x *CgroupEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cgroup_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgroupEntry.ProtoReflect.Descriptor instead.
func (*CgroupEntry) Descriptor() ([]byte, []int) {
	return file_cgroup_proto_rawDescGZIP(), []int{6}
}

func (x *CgroupEntry) GetSets() []*CgSetEntry {
	if x != nil {
		return x.Sets
	}
	return nil
}

func (x *CgroupEntry) GetControllers() []*CgControllerEntry {
	if x != nil {
		return x.Controllers
	}
	return nil
}

var File_cgroup_proto protoreflect.FileDescriptor

const file_cgroup_proto_rawDesc = "" +
	"\n" +
	"\fcgroup.proto\"F\n" +
	"\fcgroup_perms\x12\x12\n" +
	"\x04mode\x18\x01 \x02(\rR\x04mode\x12\x10\n" +
	"\x03uid\x18\x02 \x02(\rR\x03uid\x12\x10\n" +
	"\x03gid\x18\x03 \x02(\rR\x03gid\"b\n" +
	"\x11cgroup_prop_entry\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x02(\tR\x05value\x12#\n" +
	"\x05perms\x18\x03 \x01(\v2\r.cgroup_permsR\x05perms\"\xbc\x01\n" +
	"\x10cgroup_dir_entry\x12\x19\n" +
	"\bdir_name\x18\x01 \x02(\tR\adirName\x12-\n" +
	"\bchildren\x18\x02 \x03(\v2\x11.cgroup_dir_entryR\bchildren\x122\n" +
	"\n" +
	"properties\x18\x03 \x03(\v2\x12.cgroup_prop_entryR\n" +
	"properties\x12*\n" +
	"\tdir_perms\x18\x04 \x01(\v2\r.cgroup_permsR\bdirPerms\"u\n" +
	"\x13cg_controller_entry\x12\x16\n" +
	"\x06cnames\x18\x01 \x03(\tR\x06cnames\x12%\n" +
	"\x04dirs\x18\x02 \x03(\v2\x11.cgroup_dir_entryR\x04dirs\x12\x1f\n" +
	"\vis_threaded\x18\x03 \x01(\bR\n" +
	"isThreaded\"Z\n" +
	"\x0fcg_member_entry\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x02(\tR\x04path\x12\x1f\n" +
	"\vcgns_prefix\x18\x03 \x01(\rR\n" +
	"cgnsPrefix\"D\n" +
	"\fcg_set_entry\x12\x0e\n" +
	"\x02id\x18\x01 \x02(\rR\x02id\x12$\n" +
	"\x04ctls\x18\x02 \x03(\v2\x10.cg_member_entryR\x04ctls\"i\n" +
	"\fcgroup_entry\x12!\n" +
	"\x04sets\x18\x01 \x03(\v2\r.cg_set_entryR\x04sets\x126\n" +
	"\vcontrollers\x18\x02 \x03(\v2\x14.cg_controller_entryR\vcontrollers"

var (
	file_cgroup_proto_rawDescOnce sync.Once
	file_cgroup_proto_rawDescData []byte
)

func file_cgroup_proto_rawDescGZIP() []byte {
	file_cgroup_proto_rawDescOnce.Do(func() {
		file_cgroup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cgroup_proto_rawDesc), len(file_cgroup_proto_rawDesc)))
	})
	return file_cgroup_proto_rawDescData
}

var file_cgroup_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_cgroup_proto_goTypes = []any{
	(*CgroupPerms)(nil),       // 0: cgroup_perms
	(*CgroupPropEntry)(nil),   // 1: cgroup_prop_entry
	(*CgroupDirEntry)(nil),    // 2: cgroup_dir_entry
	(*CgControllerEntry)(nil), // 3: cg_controller_entry
	(*CgMemberEntry)(nil),     // 4: cg_member_entry
	(*CgSetEntry)(nil),        // 5: cg_set_entry
	(*CgroupEntry)(nil),       // 6: cgroup_entry
}
var file_cgroup_proto_depIdxs = []int32{
	0, // 0: cgroup_prop_entry.perms:type_name -> cgroup_perms
	2, // 1: cgroup_dir_entry.children:type_name -> cgroup_dir_entry
	1, // 2: cgroup_dir_entry.properties:type_name -> cgroup_prop_entry
	0, // 3: cgroup_dir_entry.dir_perms:type_name -> cgroup_perms
	2, // 4: cg_controller_entry.dirs:type_name -> cgroup_dir_entry
	4, // 5: cg_set_entry.ctls:type_name -> cg_member_entry
	5, // 6: cgroup_entry.sets:type_name -> cg_set_entry
	3, // 7: cgroup_entry.controllers:type_name -> cg_controller_entry
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_cgroup_proto_init() }
func file_cgroup_proto_init() {
	if File_cgroup_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cgroup_proto_rawDesc), len(file_cgroup_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cgroup_proto_goTypes,
		DependencyIndexes: file_cgroup_proto_depIdxs,
		MessageInfos:      file_cgroup_proto_msgTypes,
	}.Build()
	File_cgroup_proto = out.File
	file_cgroup_proto_goTypes = nil
	file_cgroup_proto_depIdxs = nil
}
