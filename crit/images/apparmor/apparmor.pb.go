// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: apparmor.proto

package apparmor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AaPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Blob          []byte                 `protobuf:"bytes,2,req,name=blob" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AaPolicy) Reset() {
	*x = AaPolicy{}
	mi := &file_apparmor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AaPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaPolicy) ProtoMessage() {}

func (x *AaPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_apparmor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaPolicy.ProtoReflect.Descriptor instead.
func (*AaPolicy) Descriptor() ([]byte, []int) {
	return file_apparmor_proto_rawDescGZIP(), []int{0}
}

func (x *AaPolicy) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AaPolicy) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

type AaNamespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Policies      []*AaPolicy            `protobuf:"bytes,2,rep,name=policies" json:"policies,omitempty"`
	Namespaces    []*AaNamespace         `protobuf:"bytes,3,rep,name=namespaces" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AaNamespace) Reset() {
	*x = AaNamespace{}
	mi := &file_apparmor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AaNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaNamespace) ProtoMessage() {}

func (x *AaNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_apparmor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaNamespace.ProtoReflect.Descriptor instead.
func (*AaNamespace) Descriptor() ([]byte, []int) {
	return file_apparmor_proto_rawDescGZIP(), []int{1}
}

func (x *AaNamespace) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AaNamespace) GetPolicies() []*AaPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *AaNamespace) GetNamespaces() []*AaNamespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type ApparmorEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []*AaNamespace         `protobuf:"bytes,1,rep,name=namespaces" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApparmorEntry) Reset() {
	*x = ApparmorEntry{}
	mi := &file_apparmor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApparmorEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApparmorEntry) ProtoMessage() {}

func (x *ApparmorEntry) ProtoReflect() protoreflect.Message {
	mi := &file_apparmor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApparmorEntry.ProtoReflect.Descriptor instead.
func (*ApparmorEntry) Descriptor() ([]byte, []int) {
	return file_apparmor_proto_rawDescGZIP(), []int{2}
}

func (x *ApparmorEntry) GetNamespaces() []*AaNamespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

var File_apparmor_proto protoreflect.FileDescriptor

const file_apparmor_proto_rawDesc = "" +
	"\n" +
	"\x0eapparmor.proto\"3\n" +
	"\taa_policy\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12\x12\n" +
	"\x04blob\x18\x02 \x02(\fR\x04blob\"y\n" +
	"\faa_namespace\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12&\n" +
	"\bpolicies\x18\x02 \x03(\v2\n" +
	".aa_policyR\bpolicies\x12-\n" +
	"\n" +
	"namespaces\x18\x03 \x03(\v2\r.aa_namespaceR\n" +
	"namespaces\"?\n" +
	"\x0eapparmor_entry\x12-\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\v2\r.aa_namespaceR\n" +
	"namespaces"

var (
	file_apparmor_proto_rawDescOnce sync.Once
	file_apparmor_proto_rawDescData []byte
)

func file_apparmor_proto_rawDescGZIP() []byte {
	file_apparmor_proto_rawDescOnce.Do(func() {
		file_apparmor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apparmor_proto_rawDesc), len(file_apparmor_proto_rawDesc)))
	})
	return file_apparmor_proto_rawDescData
}

var file_apparmor_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_apparmor_proto_goTypes = []any{
	(*AaPolicy)(nil),      // 0: aa_policy
	(*AaNamespace)(nil),   // 1: aa_namespace
	(*ApparmorEntry)(nil), // 2: apparmor_entry
}
var file_apparmor_proto_depIdxs = []int32{
	0, // 0: aa_namespace.policies:type_name -> aa_policy
	1, // 1: aa_namespace.namespaces:type_name -> aa_namespace
	1, // 2: apparmor_entry.namespaces:type_name -> aa_namespace
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_apparmor_proto_init() }
func file_apparmor_proto_init() {
	if File_apparmor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apparmor_proto_rawDesc), len(file_apparmor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apparmor_proto_goTypes,
		DependencyIndexes: file_apparmor_proto_depIdxs,
		MessageInfos:      file_apparmor_proto_msgTypes,
	}.Build()
	File_apparmor_proto = out.File
	file_apparmor_proto_goTypes = nil
	file_apparmor_proto_depIdxs = nil
}
