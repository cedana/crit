// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: fh.proto

package fh

import (
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FhEntrySizes int32

const (
	FhEntrySizes_min_entries FhEntrySizes = 16
)

// Enum value maps for FhEntrySizes.
var (
	FhEntrySizes_name = map[int32]string{
		16: "min_entries",
	}
	FhEntrySizes_value = map[string]int32{
		"min_entries": 16,
	}
)

func (x FhEntrySizes) Enum() *FhEntrySizes {
	p := new(FhEntrySizes)
	*p = x
	return p
}

func (x FhEntrySizes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FhEntrySizes) Descriptor() protoreflect.EnumDescriptor {
	return file_fh_proto_enumTypes[0].Descriptor()
}

func (FhEntrySizes) Type() protoreflect.EnumType {
	return &file_fh_proto_enumTypes[0]
}

func (x FhEntrySizes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FhEntrySizes) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FhEntrySizes(num)
	return nil
}

// Deprecated: Use FhEntrySizes.Descriptor instead.
func (FhEntrySizes) EnumDescriptor() ([]byte, []int) {
	return file_fh_proto_rawDescGZIP(), []int{0}
}

type FhEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Bytes *uint32                `protobuf:"varint,1,req,name=bytes" json:"bytes,omitempty"`
	Type  *uint32                `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	// The minimum is fh_n_handle repetitions
	Handle        []uint64 `protobuf:"varint,3,rep,name=handle" json:"handle,omitempty"`
	Path          *string  `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
	MntId         *uint32  `protobuf:"varint,5,opt,name=mnt_id,json=mntId" json:"mnt_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FhEntry) Reset() {
	*x = FhEntry{}
	mi := &file_fh_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FhEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FhEntry) ProtoMessage() {}

func (x *FhEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fh_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FhEntry.ProtoReflect.Descriptor instead.
func (*FhEntry) Descriptor() ([]byte, []int) {
	return file_fh_proto_rawDescGZIP(), []int{0}
}

func (x *FhEntry) GetBytes() uint32 {
	if x != nil && x.Bytes != nil {
		return *x.Bytes
	}
	return 0
}

func (x *FhEntry) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FhEntry) GetHandle() []uint64 {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *FhEntry) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *FhEntry) GetMntId() uint32 {
	if x != nil && x.MntId != nil {
		return *x.MntId
	}
	return 0
}

type IrmapCacheEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dev           *uint32                `protobuf:"varint,1,req,name=dev" json:"dev,omitempty"`
	Inode         *uint64                `protobuf:"varint,2,req,name=inode" json:"inode,omitempty"`
	Path          *string                `protobuf:"bytes,3,req,name=path" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IrmapCacheEntry) Reset() {
	*x = IrmapCacheEntry{}
	mi := &file_fh_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IrmapCacheEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IrmapCacheEntry) ProtoMessage() {}

func (x *IrmapCacheEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fh_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IrmapCacheEntry.ProtoReflect.Descriptor instead.
func (*IrmapCacheEntry) Descriptor() ([]byte, []int) {
	return file_fh_proto_rawDescGZIP(), []int{1}
}

func (x *IrmapCacheEntry) GetDev() uint32 {
	if x != nil && x.Dev != nil {
		return *x.Dev
	}
	return 0
}

func (x *IrmapCacheEntry) GetInode() uint64 {
	if x != nil && x.Inode != nil {
		return *x.Inode
	}
	return 0
}

func (x *IrmapCacheEntry) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

var File_fh_proto protoreflect.FileDescriptor

const file_fh_proto_rawDesc = "" +
	"\n" +
	"\bfh.proto\x1a\n" +
	"opts.proto\"w\n" +
	"\bfh_entry\x12\x14\n" +
	"\x05bytes\x18\x01 \x02(\rR\x05bytes\x12\x12\n" +
	"\x04type\x18\x02 \x02(\rR\x04type\x12\x16\n" +
	"\x06handle\x18\x03 \x03(\x04R\x06handle\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12\x15\n" +
	"\x06mnt_id\x18\x05 \x01(\rR\x05mntId\"X\n" +
	"\x11irmap_cache_entry\x12\x19\n" +
	"\x03dev\x18\x01 \x02(\rB\a\x92~\x04 \x01(\x01R\x03dev\x12\x14\n" +
	"\x05inode\x18\x02 \x02(\x04R\x05inode\x12\x12\n" +
	"\x04path\x18\x03 \x02(\tR\x04path*!\n" +
	"\x0efh_entry_sizes\x12\x0f\n" +
	"\vmin_entries\x10\x10"

var (
	file_fh_proto_rawDescOnce sync.Once
	file_fh_proto_rawDescData []byte
)

func file_fh_proto_rawDescGZIP() []byte {
	file_fh_proto_rawDescOnce.Do(func() {
		file_fh_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fh_proto_rawDesc), len(file_fh_proto_rawDesc)))
	})
	return file_fh_proto_rawDescData
}

var file_fh_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fh_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fh_proto_goTypes = []any{
	(FhEntrySizes)(0),       // 0: fh_entry_sizes
	(*FhEntry)(nil),         // 1: fh_entry
	(*IrmapCacheEntry)(nil), // 2: irmap_cache_entry
}
var file_fh_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fh_proto_init() }
func file_fh_proto_init() {
	if File_fh_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fh_proto_rawDesc), len(file_fh_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fh_proto_goTypes,
		DependencyIndexes: file_fh_proto_depIdxs,
		EnumInfos:         file_fh_proto_enumTypes,
		MessageInfos:      file_fh_proto_msgTypes,
	}.Build()
	File_fh_proto = out.File
	file_fh_proto_goTypes = nil
	file_fh_proto_depIdxs = nil
}
