// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: criu-core.proto

package criu_core

import (
	core_aarch64 "github.com/cedana/go-criu/v7/crit/images/core-aarch64"
	core_arm "github.com/cedana/go-criu/v7/crit/images/core-arm"
	core_loongarch64 "github.com/cedana/go-criu/v7/crit/images/core-loongarch64"
	core_mips "github.com/cedana/go-criu/v7/crit/images/core-mips"
	core_ppc64 "github.com/cedana/go-criu/v7/crit/images/core-ppc64"
	core_riscv64 "github.com/cedana/go-criu/v7/crit/images/core-riscv64"
	core_s390 "github.com/cedana/go-criu/v7/crit/images/core-s390"
	core_x86 "github.com/cedana/go-criu/v7/crit/images/core-x86"
	creds "github.com/cedana/go-criu/v7/crit/images/creds"
	criu_sa "github.com/cedana/go-criu/v7/crit/images/criu-sa"
	_ "github.com/cedana/go-criu/v7/crit/images/opts"
	rlimit "github.com/cedana/go-criu/v7/crit/images/rlimit"
	rseq "github.com/cedana/go-criu/v7/crit/images/rseq"
	siginfo "github.com/cedana/go-criu/v7/crit/images/siginfo"
	timer "github.com/cedana/go-criu/v7/crit/images/timer"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// These match the SECCOMP_MODE_* flags from <linux/seccomp.h>.
type SeccompMode int32

const (
	SeccompMode_disabled SeccompMode = 0
	SeccompMode_strict   SeccompMode = 1
	SeccompMode_filter   SeccompMode = 2
)

// Enum value maps for SeccompMode.
var (
	SeccompMode_name = map[int32]string{
		0: "disabled",
		1: "strict",
		2: "filter",
	}
	SeccompMode_value = map[string]int32{
		"disabled": 0,
		"strict":   1,
		"filter":   2,
	}
)

func (x SeccompMode) Enum() *SeccompMode {
	p := new(SeccompMode)
	*p = x
	return p
}

func (x SeccompMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeccompMode) Descriptor() protoreflect.EnumDescriptor {
	return file_criu_core_proto_enumTypes[0].Descriptor()
}

func (SeccompMode) Type() protoreflect.EnumType {
	return &file_criu_core_proto_enumTypes[0]
}

func (x SeccompMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SeccompMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SeccompMode(num)
	return nil
}

// Deprecated: Use SeccompMode.Descriptor instead.
func (SeccompMode) EnumDescriptor() ([]byte, []int) {
	return file_criu_core_proto_rawDescGZIP(), []int{0}
}

type CoreEntryMarch int32

const (
	CoreEntry_UNKNOWN     CoreEntryMarch = 0
	CoreEntry_X86_64      CoreEntryMarch = 1
	CoreEntry_ARM         CoreEntryMarch = 2
	CoreEntry_AARCH64     CoreEntryMarch = 3
	CoreEntry_PPC64       CoreEntryMarch = 4
	CoreEntry_S390        CoreEntryMarch = 5
	CoreEntry_MIPS        CoreEntryMarch = 6
	CoreEntry_LOONGARCH64 CoreEntryMarch = 7
	CoreEntry_RISCV64     CoreEntryMarch = 8
)

// Enum value maps for CoreEntryMarch.
var (
	CoreEntryMarch_name = map[int32]string{
		0: "UNKNOWN",
		1: "X86_64",
		2: "ARM",
		3: "AARCH64",
		4: "PPC64",
		5: "S390",
		6: "MIPS",
		7: "LOONGARCH64",
		8: "RISCV64",
	}
	CoreEntryMarch_value = map[string]int32{
		"UNKNOWN":     0,
		"X86_64":      1,
		"ARM":         2,
		"AARCH64":     3,
		"PPC64":       4,
		"S390":        5,
		"MIPS":        6,
		"LOONGARCH64": 7,
		"RISCV64":     8,
	}
)

func (x CoreEntryMarch) Enum() *CoreEntryMarch {
	p := new(CoreEntryMarch)
	*p = x
	return p
}

func (x CoreEntryMarch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoreEntryMarch) Descriptor() protoreflect.EnumDescriptor {
	return file_criu_core_proto_enumTypes[1].Descriptor()
}

func (CoreEntryMarch) Type() protoreflect.EnumType {
	return &file_criu_core_proto_enumTypes[1]
}

func (x CoreEntryMarch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CoreEntryMarch) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CoreEntryMarch(num)
	return nil
}

// Deprecated: Use CoreEntryMarch.Descriptor instead.
func (CoreEntryMarch) EnumDescriptor() ([]byte, []int) {
	return file_criu_core_proto_rawDescGZIP(), []int{5, 0}
}

type TaskCoreEntry struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	TaskState   *uint32                `protobuf:"varint,1,req,name=task_state,json=taskState" json:"task_state,omitempty"`
	ExitCode    *uint32                `protobuf:"varint,2,req,name=exit_code,json=exitCode" json:"exit_code,omitempty"`
	Personality *uint32                `protobuf:"varint,3,req,name=personality" json:"personality,omitempty"`
	Flags       *uint32                `protobuf:"varint,4,req,name=flags" json:"flags,omitempty"`
	BlkSigset   *uint64                `protobuf:"varint,5,req,name=blk_sigset,json=blkSigset" json:"blk_sigset,omitempty"`
	Comm        *string                `protobuf:"bytes,6,req,name=comm" json:"comm,omitempty"`
	Timers      *timer.TaskTimersEntry `protobuf:"bytes,7,opt,name=timers" json:"timers,omitempty"`
	Rlimits     *TaskRlimitsEntry      `protobuf:"bytes,8,opt,name=rlimits" json:"rlimits,omitempty"`
	// This is deprecated, should be per-thread
	CgSet    *uint32                   `protobuf:"varint,9,opt,name=cg_set,json=cgSet" json:"cg_set,omitempty"`
	SignalsS *siginfo.SignalQueueEntry `protobuf:"bytes,10,opt,name=signals_s,json=signalsS" json:"signals_s,omitempty"`
	// These two are deprecated, should be per-thread
	OldSeccompMode   *SeccompMode       `protobuf:"varint,11,opt,name=old_seccomp_mode,json=oldSeccompMode,enum=SeccompMode" json:"old_seccomp_mode,omitempty"`
	OldSeccompFilter *uint32            `protobuf:"varint,12,opt,name=old_seccomp_filter,json=oldSeccompFilter" json:"old_seccomp_filter,omitempty"`
	Loginuid         *uint32            `protobuf:"varint,13,opt,name=loginuid" json:"loginuid,omitempty"`
	OomScoreAdj      *int32             `protobuf:"varint,14,opt,name=oom_score_adj,json=oomScoreAdj" json:"oom_score_adj,omitempty"`
	Sigactions       []*criu_sa.SaEntry `protobuf:"bytes,15,rep,name=sigactions" json:"sigactions,omitempty"`
	ChildSubreaper   *bool              `protobuf:"varint,18,opt,name=child_subreaper,json=childSubreaper" json:"child_subreaper,omitempty"`
	// Reserved for container relative start time
	// optional uint64		start_time	= 19;
	BlkSigsetExtended          *uint64 `protobuf:"varint,20,opt,name=blk_sigset_extended,json=blkSigsetExtended" json:"blk_sigset_extended,omitempty"`
	StopSigno                  *uint32 `protobuf:"varint,21,opt,name=stop_signo,json=stopSigno" json:"stop_signo,omitempty"`
	MembarrierRegistrationMask *uint32 `protobuf:"varint,22,opt,name=membarrier_registration_mask,json=membarrierRegistrationMask" json:"membarrier_registration_mask,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *TaskCoreEntry) Reset() {
	*x = TaskCoreEntry{}
	mi := &file_criu_core_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCoreEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCoreEntry) ProtoMessage() {}

func (x *TaskCoreEntry) ProtoReflect() protoreflect.Message {
	mi := &file_criu_core_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCoreEntry.ProtoReflect.Descriptor instead.
func (*TaskCoreEntry) Descriptor() ([]byte, []int) {
	return file_criu_core_proto_rawDescGZIP(), []int{0}
}

func (x *TaskCoreEntry) GetTaskState() uint32 {
	if x != nil && x.TaskState != nil {
		return *x.TaskState
	}
	return 0
}

func (x *TaskCoreEntry) GetExitCode() uint32 {
	if x != nil && x.ExitCode != nil {
		return *x.ExitCode
	}
	return 0
}

func (x *TaskCoreEntry) GetPersonality() uint32 {
	if x != nil && x.Personality != nil {
		return *x.Personality
	}
	return 0
}

func (x *TaskCoreEntry) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *TaskCoreEntry) GetBlkSigset() uint64 {
	if x != nil && x.BlkSigset != nil {
		return *x.BlkSigset
	}
	return 0
}

func (x *TaskCoreEntry) GetComm() string {
	if x != nil && x.Comm != nil {
		return *x.Comm
	}
	return ""
}

func (x *TaskCoreEntry) GetTimers() *timer.TaskTimersEntry {
	if x != nil {
		return x.Timers
	}
	return nil
}

func (x *TaskCoreEntry) GetRlimits() *TaskRlimitsEntry {
	if x != nil {
		return x.Rlimits
	}
	return nil
}

func (x *TaskCoreEntry) GetCgSet() uint32 {
	if x != nil && x.CgSet != nil {
		return *x.CgSet
	}
	return 0
}

func (x *TaskCoreEntry) GetSignalsS() *siginfo.SignalQueueEntry {
	if x != nil {
		return x.SignalsS
	}
	return nil
}

func (x *TaskCoreEntry) GetOldSeccompMode() SeccompMode {
	if x != nil && x.OldSeccompMode != nil {
		return *x.OldSeccompMode
	}
	return SeccompMode_disabled
}

func (x *TaskCoreEntry) GetOldSeccompFilter() uint32 {
	if x != nil && x.OldSeccompFilter != nil {
		return *x.OldSeccompFilter
	}
	return 0
}

func (x *TaskCoreEntry) GetLoginuid() uint32 {
	if x != nil && x.Loginuid != nil {
		return *x.Loginuid
	}
	return 0
}

func (x *TaskCoreEntry) GetOomScoreAdj() int32 {
	if x != nil && x.OomScoreAdj != nil {
		return *x.OomScoreAdj
	}
	return 0
}

func (x *TaskCoreEntry) GetSigactions() []*criu_sa.SaEntry {
	if x != nil {
		return x.Sigactions
	}
	return nil
}

func (x *TaskCoreEntry) GetChildSubreaper() bool {
	if x != nil && x.ChildSubreaper != nil {
		return *x.ChildSubreaper
	}
	return false
}

func (x *TaskCoreEntry) GetBlkSigsetExtended() uint64 {
	if x != nil && x.BlkSigsetExtended != nil {
		return *x.BlkSigsetExtended
	}
	return 0
}

func (x *TaskCoreEntry) GetStopSigno() uint32 {
	if x != nil && x.StopSigno != nil {
		return *x.StopSigno
	}
	return 0
}

func (x *TaskCoreEntry) GetMembarrierRegistrationMask() uint32 {
	if x != nil && x.MembarrierRegistrationMask != nil {
		return *x.MembarrierRegistrationMask
	}
	return 0
}

type TaskKobjIdsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmId          *uint32                `protobuf:"varint,1,req,name=vm_id,json=vmId" json:"vm_id,omitempty"`
	FilesId       *uint32                `protobuf:"varint,2,req,name=files_id,json=filesId" json:"files_id,omitempty"`
	FsId          *uint32                `protobuf:"varint,3,req,name=fs_id,json=fsId" json:"fs_id,omitempty"`
	SighandId     *uint32                `protobuf:"varint,4,req,name=sighand_id,json=sighandId" json:"sighand_id,omitempty"`
	PidNsId       *uint32                `protobuf:"varint,5,opt,name=pid_ns_id,json=pidNsId" json:"pid_ns_id,omitempty"`
	NetNsId       *uint32                `protobuf:"varint,6,opt,name=net_ns_id,json=netNsId" json:"net_ns_id,omitempty"`
	IpcNsId       *uint32                `protobuf:"varint,7,opt,name=ipc_ns_id,json=ipcNsId" json:"ipc_ns_id,omitempty"`
	UtsNsId       *uint32                `protobuf:"varint,8,opt,name=uts_ns_id,json=utsNsId" json:"uts_ns_id,omitempty"`
	MntNsId       *uint32                `protobuf:"varint,9,opt,name=mnt_ns_id,json=mntNsId" json:"mnt_ns_id,omitempty"`
	UserNsId      *uint32                `protobuf:"varint,10,opt,name=user_ns_id,json=userNsId" json:"user_ns_id,omitempty"`
	CgroupNsId    *uint32                `protobuf:"varint,11,opt,name=cgroup_ns_id,json=cgroupNsId" json:"cgroup_ns_id,omitempty"`
	TimeNsId      *uint32                `protobuf:"varint,12,opt,name=time_ns_id,json=timeNsId" json:"time_ns_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskKobjIdsEntry) Reset() {
	*x = TaskKobjIdsEntry{}
	mi := &file_criu_core_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskKobjIdsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskKobjIdsEntry) ProtoMessage() {}

func (x *TaskKobjIdsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_criu_core_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskKobjIdsEntry.ProtoReflect.Descriptor instead.
func (*TaskKobjIdsEntry) Descriptor() ([]byte, []int) {
	return file_criu_core_proto_rawDescGZIP(), []int{1}
}

func (x *TaskKobjIdsEntry) GetVmId() uint32 {
	if x != nil && x.VmId != nil {
		return *x.VmId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetFilesId() uint32 {
	if x != nil && x.FilesId != nil {
		return *x.FilesId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetFsId() uint32 {
	if x != nil && x.FsId != nil {
		return *x.FsId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetSighandId() uint32 {
	if x != nil && x.SighandId != nil {
		return *x.SighandId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetPidNsId() uint32 {
	if x != nil && x.PidNsId != nil {
		return *x.PidNsId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetNetNsId() uint32 {
	if x != nil && x.NetNsId != nil {
		return *x.NetNsId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetIpcNsId() uint32 {
	if x != nil && x.IpcNsId != nil {
		return *x.IpcNsId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetUtsNsId() uint32 {
	if x != nil && x.UtsNsId != nil {
		return *x.UtsNsId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetMntNsId() uint32 {
	if x != nil && x.MntNsId != nil {
		return *x.MntNsId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetUserNsId() uint32 {
	if x != nil && x.UserNsId != nil {
		return *x.UserNsId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetCgroupNsId() uint32 {
	if x != nil && x.CgroupNsId != nil {
		return *x.CgroupNsId
	}
	return 0
}

func (x *TaskKobjIdsEntry) GetTimeNsId() uint32 {
	if x != nil && x.TimeNsId != nil {
		return *x.TimeNsId
	}
	return 0
}

type ThreadSasEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SsSp          *uint64                `protobuf:"varint,1,req,name=ss_sp,json=ssSp" json:"ss_sp,omitempty"`
	SsSize        *uint64                `protobuf:"varint,2,req,name=ss_size,json=ssSize" json:"ss_size,omitempty"`
	SsFlags       *uint32                `protobuf:"varint,3,req,name=ss_flags,json=ssFlags" json:"ss_flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadSasEntry) Reset() {
	*x = ThreadSasEntry{}
	mi := &file_criu_core_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadSasEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadSasEntry) ProtoMessage() {}

func (x *ThreadSasEntry) ProtoReflect() protoreflect.Message {
	mi := &file_criu_core_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadSasEntry.ProtoReflect.Descriptor instead.
func (*ThreadSasEntry) Descriptor() ([]byte, []int) {
	return file_criu_core_proto_rawDescGZIP(), []int{2}
}

func (x *ThreadSasEntry) GetSsSp() uint64 {
	if x != nil && x.SsSp != nil {
		return *x.SsSp
	}
	return 0
}

func (x *ThreadSasEntry) GetSsSize() uint64 {
	if x != nil && x.SsSize != nil {
		return *x.SsSize
	}
	return 0
}

func (x *ThreadSasEntry) GetSsFlags() uint32 {
	if x != nil && x.SsFlags != nil {
		return *x.SsFlags
	}
	return 0
}

type ThreadCoreEntry struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	FutexRla          *uint64                   `protobuf:"varint,1,req,name=futex_rla,json=futexRla" json:"futex_rla,omitempty"`
	FutexRlaLen       *uint32                   `protobuf:"varint,2,req,name=futex_rla_len,json=futexRlaLen" json:"futex_rla_len,omitempty"`
	SchedNice         *int32                    `protobuf:"zigzag32,3,opt,name=sched_nice,json=schedNice" json:"sched_nice,omitempty"`
	SchedPolicy       *uint32                   `protobuf:"varint,4,opt,name=sched_policy,json=schedPolicy" json:"sched_policy,omitempty"`
	SchedPrio         *uint32                   `protobuf:"varint,5,opt,name=sched_prio,json=schedPrio" json:"sched_prio,omitempty"`
	BlkSigset         *uint64                   `protobuf:"varint,6,opt,name=blk_sigset,json=blkSigset" json:"blk_sigset,omitempty"`
	Sas               *ThreadSasEntry           `protobuf:"bytes,7,opt,name=sas" json:"sas,omitempty"`
	PdeathSig         *uint32                   `protobuf:"varint,8,opt,name=pdeath_sig,json=pdeathSig" json:"pdeath_sig,omitempty"`
	SignalsP          *siginfo.SignalQueueEntry `protobuf:"bytes,9,opt,name=signals_p,json=signalsP" json:"signals_p,omitempty"`
	Creds             *creds.CredsEntry         `protobuf:"bytes,10,opt,name=creds" json:"creds,omitempty"`
	SeccompMode       *SeccompMode              `protobuf:"varint,11,opt,name=seccomp_mode,json=seccompMode,enum=SeccompMode" json:"seccomp_mode,omitempty"`
	SeccompFilter     *uint32                   `protobuf:"varint,12,opt,name=seccomp_filter,json=seccompFilter" json:"seccomp_filter,omitempty"`
	Comm              *string                   `protobuf:"bytes,13,opt,name=comm" json:"comm,omitempty"`
	BlkSigsetExtended *uint64                   `protobuf:"varint,14,opt,name=blk_sigset_extended,json=blkSigsetExtended" json:"blk_sigset_extended,omitempty"`
	RseqEntry         *rseq.RseqEntry           `protobuf:"bytes,15,opt,name=rseq_entry,json=rseqEntry" json:"rseq_entry,omitempty"`
	CgSet             *uint32                   `protobuf:"varint,16,opt,name=cg_set,json=cgSet" json:"cg_set,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ThreadCoreEntry) Reset() {
	*x = ThreadCoreEntry{}
	mi := &file_criu_core_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadCoreEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadCoreEntry) ProtoMessage() {}

func (x *ThreadCoreEntry) ProtoReflect() protoreflect.Message {
	mi := &file_criu_core_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadCoreEntry.ProtoReflect.Descriptor instead.
func (*ThreadCoreEntry) Descriptor() ([]byte, []int) {
	return file_criu_core_proto_rawDescGZIP(), []int{3}
}

func (x *ThreadCoreEntry) GetFutexRla() uint64 {
	if x != nil && x.FutexRla != nil {
		return *x.FutexRla
	}
	return 0
}

func (x *ThreadCoreEntry) GetFutexRlaLen() uint32 {
	if x != nil && x.FutexRlaLen != nil {
		return *x.FutexRlaLen
	}
	return 0
}

func (x *ThreadCoreEntry) GetSchedNice() int32 {
	if x != nil && x.SchedNice != nil {
		return *x.SchedNice
	}
	return 0
}

func (x *ThreadCoreEntry) GetSchedPolicy() uint32 {
	if x != nil && x.SchedPolicy != nil {
		return *x.SchedPolicy
	}
	return 0
}

func (x *ThreadCoreEntry) GetSchedPrio() uint32 {
	if x != nil && x.SchedPrio != nil {
		return *x.SchedPrio
	}
	return 0
}

func (x *ThreadCoreEntry) GetBlkSigset() uint64 {
	if x != nil && x.BlkSigset != nil {
		return *x.BlkSigset
	}
	return 0
}

func (x *ThreadCoreEntry) GetSas() *ThreadSasEntry {
	if x != nil {
		return x.Sas
	}
	return nil
}

func (x *ThreadCoreEntry) GetPdeathSig() uint32 {
	if x != nil && x.PdeathSig != nil {
		return *x.PdeathSig
	}
	return 0
}

func (x *ThreadCoreEntry) GetSignalsP() *siginfo.SignalQueueEntry {
	if x != nil {
		return x.SignalsP
	}
	return nil
}

func (x *ThreadCoreEntry) GetCreds() *creds.CredsEntry {
	if x != nil {
		return x.Creds
	}
	return nil
}

func (x *ThreadCoreEntry) GetSeccompMode() SeccompMode {
	if x != nil && x.SeccompMode != nil {
		return *x.SeccompMode
	}
	return SeccompMode_disabled
}

func (x *ThreadCoreEntry) GetSeccompFilter() uint32 {
	if x != nil && x.SeccompFilter != nil {
		return *x.SeccompFilter
	}
	return 0
}

func (x *ThreadCoreEntry) GetComm() string {
	if x != nil && x.Comm != nil {
		return *x.Comm
	}
	return ""
}

func (x *ThreadCoreEntry) GetBlkSigsetExtended() uint64 {
	if x != nil && x.BlkSigsetExtended != nil {
		return *x.BlkSigsetExtended
	}
	return 0
}

func (x *ThreadCoreEntry) GetRseqEntry() *rseq.RseqEntry {
	if x != nil {
		return x.RseqEntry
	}
	return nil
}

func (x *ThreadCoreEntry) GetCgSet() uint32 {
	if x != nil && x.CgSet != nil {
		return *x.CgSet
	}
	return 0
}

type TaskRlimitsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rlimits       []*rlimit.RlimitEntry  `protobuf:"bytes,1,rep,name=rlimits" json:"rlimits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRlimitsEntry) Reset() {
	*x = TaskRlimitsEntry{}
	mi := &file_criu_core_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRlimitsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRlimitsEntry) ProtoMessage() {}

func (x *TaskRlimitsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_criu_core_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRlimitsEntry.ProtoReflect.Descriptor instead.
func (*TaskRlimitsEntry) Descriptor() ([]byte, []int) {
	return file_criu_core_proto_rawDescGZIP(), []int{4}
}

func (x *TaskRlimitsEntry) GetRlimits() []*rlimit.RlimitEntry {
	if x != nil {
		return x.Rlimits
	}
	return nil
}

type CoreEntry struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Mtype         *CoreEntryMarch                         `protobuf:"varint,1,req,name=mtype,enum=CoreEntryMarch" json:"mtype,omitempty"`
	ThreadInfo    *core_x86.ThreadInfoX86                 `protobuf:"bytes,2,opt,name=thread_info,json=threadInfo" json:"thread_info,omitempty"`
	TiArm         *core_arm.ThreadInfoArm                 `protobuf:"bytes,6,opt,name=ti_arm,json=tiArm" json:"ti_arm,omitempty"`
	TiAarch64     *core_aarch64.ThreadInfoAarch64         `protobuf:"bytes,8,opt,name=ti_aarch64,json=tiAarch64" json:"ti_aarch64,omitempty"`
	TiPpc64       *core_ppc64.ThreadInfoPpc64             `protobuf:"bytes,9,opt,name=ti_ppc64,json=tiPpc64" json:"ti_ppc64,omitempty"`
	TiS390        *core_s390.ThreadInfoS390               `protobuf:"bytes,10,opt,name=ti_s390,json=tiS390" json:"ti_s390,omitempty"`
	TiMips        *core_mips.ThreadInfoMips               `protobuf:"bytes,11,opt,name=ti_mips,json=tiMips" json:"ti_mips,omitempty"`
	TiLoongarch64 *core_loongarch64.ThreadInfoLoongarch64 `protobuf:"bytes,12,opt,name=ti_loongarch64,json=tiLoongarch64" json:"ti_loongarch64,omitempty"`
	TiRiscv64     *core_riscv64.ThreadInfoRiscv64         `protobuf:"bytes,13,opt,name=ti_riscv64,json=tiRiscv64" json:"ti_riscv64,omitempty"`
	Tc            *TaskCoreEntry                          `protobuf:"bytes,3,opt,name=tc" json:"tc,omitempty"`
	Ids           *TaskKobjIdsEntry                       `protobuf:"bytes,4,opt,name=ids" json:"ids,omitempty"`
	ThreadCore    *ThreadCoreEntry                        `protobuf:"bytes,5,opt,name=thread_core,json=threadCore" json:"thread_core,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoreEntry) Reset() {
	*x = CoreEntry{}
	mi := &file_criu_core_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoreEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreEntry) ProtoMessage() {}

func (x *CoreEntry) ProtoReflect() protoreflect.Message {
	mi := &file_criu_core_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreEntry.ProtoReflect.Descriptor instead.
func (*CoreEntry) Descriptor() ([]byte, []int) {
	return file_criu_core_proto_rawDescGZIP(), []int{5}
}

func (x *CoreEntry) GetMtype() CoreEntryMarch {
	if x != nil && x.Mtype != nil {
		return *x.Mtype
	}
	return CoreEntry_UNKNOWN
}

func (x *CoreEntry) GetThreadInfo() *core_x86.ThreadInfoX86 {
	if x != nil {
		return x.ThreadInfo
	}
	return nil
}

func (x *CoreEntry) GetTiArm() *core_arm.ThreadInfoArm {
	if x != nil {
		return x.TiArm
	}
	return nil
}

func (x *CoreEntry) GetTiAarch64() *core_aarch64.ThreadInfoAarch64 {
	if x != nil {
		return x.TiAarch64
	}
	return nil
}

func (x *CoreEntry) GetTiPpc64() *core_ppc64.ThreadInfoPpc64 {
	if x != nil {
		return x.TiPpc64
	}
	return nil
}

func (x *CoreEntry) GetTiS390() *core_s390.ThreadInfoS390 {
	if x != nil {
		return x.TiS390
	}
	return nil
}

func (x *CoreEntry) GetTiMips() *core_mips.ThreadInfoMips {
	if x != nil {
		return x.TiMips
	}
	return nil
}

func (x *CoreEntry) GetTiLoongarch64() *core_loongarch64.ThreadInfoLoongarch64 {
	if x != nil {
		return x.TiLoongarch64
	}
	return nil
}

func (x *CoreEntry) GetTiRiscv64() *core_riscv64.ThreadInfoRiscv64 {
	if x != nil {
		return x.TiRiscv64
	}
	return nil
}

func (x *CoreEntry) GetTc() *TaskCoreEntry {
	if x != nil {
		return x.Tc
	}
	return nil
}

func (x *CoreEntry) GetIds() *TaskKobjIdsEntry {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CoreEntry) GetThreadCore() *ThreadCoreEntry {
	if x != nil {
		return x.ThreadCore
	}
	return nil
}

var File_criu_core_proto protoreflect.FileDescriptor

const file_criu_core_proto_rawDesc = "" +
	"\n" +
	"\x0fcriu-core.proto\x1a\x0ecore-x86.proto\x1a\x0ecore-arm.proto\x1a\x12core-aarch64.proto\x1a\x10core-ppc64.proto\x1a\x0fcore-s390.proto\x1a\x0fcore-mips.proto\x1a\x16core-loongarch64.proto\x1a\x12core-riscv64.proto\x1a\frlimit.proto\x1a\vtimer.proto\x1a\vcreds.proto\x1a\rcriu-sa.proto\x1a\rsiginfo.proto\x1a\n" +
	"rseq.proto\x1a\n" +
	"opts.proto\"\x87\x06\n" +
	"\x0ftask_core_entry\x12'\n" +
	"\n" +
	"task_state\x18\x01 \x02(\rB\b\x92~\x052\x03genR\ttaskState\x12\x1b\n" +
	"\texit_code\x18\x02 \x02(\rR\bexitCode\x12 \n" +
	"\vpersonality\x18\x03 \x02(\rR\vpersonality\x12\x14\n" +
	"\x05flags\x18\x04 \x02(\rR\x05flags\x12$\n" +
	"\n" +
	"blk_sigset\x18\x05 \x02(\x04B\x05\x92~\x02\b\x01R\tblkSigset\x12\x12\n" +
	"\x04comm\x18\x06 \x02(\tR\x04comm\x12*\n" +
	"\x06timers\x18\a \x01(\v2\x12.task_timers_entryR\x06timers\x12-\n" +
	"\arlimits\x18\b \x01(\v2\x13.task_rlimits_entryR\arlimits\x12\x15\n" +
	"\x06cg_set\x18\t \x01(\rR\x05cgSet\x120\n" +
	"\tsignals_s\x18\n" +
	" \x01(\v2\x13.signal_queue_entryR\bsignalsS\x127\n" +
	"\x10old_seccomp_mode\x18\v \x01(\x0e2\r.seccomp_modeR\x0eoldSeccompMode\x12,\n" +
	"\x12old_seccomp_filter\x18\f \x01(\rR\x10oldSeccompFilter\x12\x1a\n" +
	"\bloginuid\x18\r \x01(\rR\bloginuid\x12\"\n" +
	"\room_score_adj\x18\x0e \x01(\x05R\voomScoreAdj\x12)\n" +
	"\n" +
	"sigactions\x18\x0f \x03(\v2\t.sa_entryR\n" +
	"sigactions\x12'\n" +
	"\x0fchild_subreaper\x18\x12 \x01(\bR\x0echildSubreaper\x125\n" +
	"\x13blk_sigset_extended\x18\x14 \x01(\x04B\x05\x92~\x02\b\x01R\x11blkSigsetExtended\x12\x1d\n" +
	"\n" +
	"stop_signo\x18\x15 \x01(\rR\tstopSigno\x12G\n" +
	"\x1cmembarrier_registration_mask\x18\x16 \x01(\rB\x05\x92~\x02\b\x01R\x1amembarrierRegistrationMask\"\xe3\x02\n" +
	"\x13task_kobj_ids_entry\x12\x13\n" +
	"\x05vm_id\x18\x01 \x02(\rR\x04vmId\x12\x19\n" +
	"\bfiles_id\x18\x02 \x02(\rR\afilesId\x12\x13\n" +
	"\x05fs_id\x18\x03 \x02(\rR\x04fsId\x12\x1d\n" +
	"\n" +
	"sighand_id\x18\x04 \x02(\rR\tsighandId\x12\x1a\n" +
	"\tpid_ns_id\x18\x05 \x01(\rR\apidNsId\x12\x1a\n" +
	"\tnet_ns_id\x18\x06 \x01(\rR\anetNsId\x12\x1a\n" +
	"\tipc_ns_id\x18\a \x01(\rR\aipcNsId\x12\x1a\n" +
	"\tuts_ns_id\x18\b \x01(\rR\autsNsId\x12\x1a\n" +
	"\tmnt_ns_id\x18\t \x01(\rR\amntNsId\x12\x1c\n" +
	"\n" +
	"user_ns_id\x18\n" +
	" \x01(\rR\buserNsId\x12 \n" +
	"\fcgroup_ns_id\x18\v \x01(\rR\n" +
	"cgroupNsId\x12\x1c\n" +
	"\n" +
	"time_ns_id\x18\f \x01(\rR\btimeNsId\"[\n" +
	"\x10thread_sas_entry\x12\x13\n" +
	"\x05ss_sp\x18\x01 \x02(\x04R\x04ssSp\x12\x17\n" +
	"\ass_size\x18\x02 \x02(\x04R\x06ssSize\x12\x19\n" +
	"\bss_flags\x18\x03 \x02(\rR\assFlags\"\xce\x04\n" +
	"\x11thread_core_entry\x12\x1b\n" +
	"\tfutex_rla\x18\x01 \x02(\x04R\bfutexRla\x12\"\n" +
	"\rfutex_rla_len\x18\x02 \x02(\rR\vfutexRlaLen\x12\x1d\n" +
	"\n" +
	"sched_nice\x18\x03 \x01(\x11R\tschedNice\x12!\n" +
	"\fsched_policy\x18\x04 \x01(\rR\vschedPolicy\x12\x1d\n" +
	"\n" +
	"sched_prio\x18\x05 \x01(\rR\tschedPrio\x12\x1d\n" +
	"\n" +
	"blk_sigset\x18\x06 \x01(\x04R\tblkSigset\x12#\n" +
	"\x03sas\x18\a \x01(\v2\x11.thread_sas_entryR\x03sas\x12\x1d\n" +
	"\n" +
	"pdeath_sig\x18\b \x01(\rR\tpdeathSig\x120\n" +
	"\tsignals_p\x18\t \x01(\v2\x13.signal_queue_entryR\bsignalsP\x12\"\n" +
	"\x05creds\x18\n" +
	" \x01(\v2\f.creds_entryR\x05creds\x120\n" +
	"\fseccomp_mode\x18\v \x01(\x0e2\r.seccomp_modeR\vseccompMode\x12%\n" +
	"\x0eseccomp_filter\x18\f \x01(\rR\rseccompFilter\x12\x12\n" +
	"\x04comm\x18\r \x01(\tR\x04comm\x12.\n" +
	"\x13blk_sigset_extended\x18\x0e \x01(\x04R\x11blkSigsetExtended\x12*\n" +
	"\n" +
	"rseq_entry\x18\x0f \x01(\v2\v.rseq_entryR\trseqEntry\x12\x15\n" +
	"\x06cg_set\x18\x10 \x01(\rR\x05cgSet\"=\n" +
	"\x12task_rlimits_entry\x12'\n" +
	"\arlimits\x18\x01 \x03(\v2\r.rlimit_entryR\arlimits\"\xb7\x05\n" +
	"\n" +
	"core_entry\x12'\n" +
	"\x05mtype\x18\x01 \x02(\x0e2\x11.core_entry.marchR\x05mtype\x121\n" +
	"\vthread_info\x18\x02 \x01(\v2\x10.thread_info_x86R\n" +
	"threadInfo\x12'\n" +
	"\x06ti_arm\x18\x06 \x01(\v2\x10.thread_info_armR\x05tiArm\x123\n" +
	"\n" +
	"ti_aarch64\x18\b \x01(\v2\x14.thread_info_aarch64R\ttiAarch64\x12-\n" +
	"\bti_ppc64\x18\t \x01(\v2\x12.thread_info_ppc64R\atiPpc64\x12*\n" +
	"\ati_s390\x18\n" +
	" \x01(\v2\x11.thread_info_s390R\x06tiS390\x12*\n" +
	"\ati_mips\x18\v \x01(\v2\x11.thread_info_mipsR\x06tiMips\x12?\n" +
	"\x0eti_loongarch64\x18\f \x01(\v2\x18.thread_info_loongarch64R\rtiLoongarch64\x123\n" +
	"\n" +
	"ti_riscv64\x18\r \x01(\v2\x14.thread_info_riscv64R\ttiRiscv64\x12 \n" +
	"\x02tc\x18\x03 \x01(\v2\x10.task_core_entryR\x02tc\x12&\n" +
	"\x03ids\x18\x04 \x01(\v2\x14.task_kobj_ids_entryR\x03ids\x123\n" +
	"\vthread_core\x18\x05 \x01(\v2\x12.thread_core_entryR\n" +
	"threadCore\"s\n" +
	"\x05march\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06X86_64\x10\x01\x12\a\n" +
	"\x03ARM\x10\x02\x12\v\n" +
	"\aAARCH64\x10\x03\x12\t\n" +
	"\x05PPC64\x10\x04\x12\b\n" +
	"\x04S390\x10\x05\x12\b\n" +
	"\x04MIPS\x10\x06\x12\x0f\n" +
	"\vLOONGARCH64\x10\a\x12\v\n" +
	"\aRISCV64\x10\b*4\n" +
	"\fseccomp_mode\x12\f\n" +
	"\bdisabled\x10\x00\x12\n" +
	"\n" +
	"\x06strict\x10\x01\x12\n" +
	"\n" +
	"\x06filter\x10\x02"

var (
	file_criu_core_proto_rawDescOnce sync.Once
	file_criu_core_proto_rawDescData []byte
)

func file_criu_core_proto_rawDescGZIP() []byte {
	file_criu_core_proto_rawDescOnce.Do(func() {
		file_criu_core_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_criu_core_proto_rawDesc), len(file_criu_core_proto_rawDesc)))
	})
	return file_criu_core_proto_rawDescData
}

var file_criu_core_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_criu_core_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_criu_core_proto_goTypes = []any{
	(SeccompMode)(0),                               // 0: seccomp_mode
	(CoreEntryMarch)(0),                            // 1: core_entry.march
	(*TaskCoreEntry)(nil),                          // 2: task_core_entry
	(*TaskKobjIdsEntry)(nil),                       // 3: task_kobj_ids_entry
	(*ThreadSasEntry)(nil),                         // 4: thread_sas_entry
	(*ThreadCoreEntry)(nil),                        // 5: thread_core_entry
	(*TaskRlimitsEntry)(nil),                       // 6: task_rlimits_entry
	(*CoreEntry)(nil),                              // 7: core_entry
	(*timer.TaskTimersEntry)(nil),                  // 8: task_timers_entry
	(*siginfo.SignalQueueEntry)(nil),               // 9: signal_queue_entry
	(*criu_sa.SaEntry)(nil),                        // 10: sa_entry
	(*creds.CredsEntry)(nil),                       // 11: creds_entry
	(*rseq.RseqEntry)(nil),                         // 12: rseq_entry
	(*rlimit.RlimitEntry)(nil),                     // 13: rlimit_entry
	(*core_x86.ThreadInfoX86)(nil),                 // 14: thread_info_x86
	(*core_arm.ThreadInfoArm)(nil),                 // 15: thread_info_arm
	(*core_aarch64.ThreadInfoAarch64)(nil),         // 16: thread_info_aarch64
	(*core_ppc64.ThreadInfoPpc64)(nil),             // 17: thread_info_ppc64
	(*core_s390.ThreadInfoS390)(nil),               // 18: thread_info_s390
	(*core_mips.ThreadInfoMips)(nil),               // 19: thread_info_mips
	(*core_loongarch64.ThreadInfoLoongarch64)(nil), // 20: thread_info_loongarch64
	(*core_riscv64.ThreadInfoRiscv64)(nil),         // 21: thread_info_riscv64
}
var file_criu_core_proto_depIdxs = []int32{
	8,  // 0: task_core_entry.timers:type_name -> task_timers_entry
	6,  // 1: task_core_entry.rlimits:type_name -> task_rlimits_entry
	9,  // 2: task_core_entry.signals_s:type_name -> signal_queue_entry
	0,  // 3: task_core_entry.old_seccomp_mode:type_name -> seccomp_mode
	10, // 4: task_core_entry.sigactions:type_name -> sa_entry
	4,  // 5: thread_core_entry.sas:type_name -> thread_sas_entry
	9,  // 6: thread_core_entry.signals_p:type_name -> signal_queue_entry
	11, // 7: thread_core_entry.creds:type_name -> creds_entry
	0,  // 8: thread_core_entry.seccomp_mode:type_name -> seccomp_mode
	12, // 9: thread_core_entry.rseq_entry:type_name -> rseq_entry
	13, // 10: task_rlimits_entry.rlimits:type_name -> rlimit_entry
	1,  // 11: core_entry.mtype:type_name -> core_entry.march
	14, // 12: core_entry.thread_info:type_name -> thread_info_x86
	15, // 13: core_entry.ti_arm:type_name -> thread_info_arm
	16, // 14: core_entry.ti_aarch64:type_name -> thread_info_aarch64
	17, // 15: core_entry.ti_ppc64:type_name -> thread_info_ppc64
	18, // 16: core_entry.ti_s390:type_name -> thread_info_s390
	19, // 17: core_entry.ti_mips:type_name -> thread_info_mips
	20, // 18: core_entry.ti_loongarch64:type_name -> thread_info_loongarch64
	21, // 19: core_entry.ti_riscv64:type_name -> thread_info_riscv64
	2,  // 20: core_entry.tc:type_name -> task_core_entry
	3,  // 21: core_entry.ids:type_name -> task_kobj_ids_entry
	5,  // 22: core_entry.thread_core:type_name -> thread_core_entry
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_criu_core_proto_init() }
func file_criu_core_proto_init() {
	if File_criu_core_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_criu_core_proto_rawDesc), len(file_criu_core_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_criu_core_proto_goTypes,
		DependencyIndexes: file_criu_core_proto_depIdxs,
		EnumInfos:         file_criu_core_proto_enumTypes,
		MessageInfos:      file_criu_core_proto_msgTypes,
	}.Build()
	File_criu_core_proto = out.File
	file_criu_core_proto_goTypes = nil
	file_criu_core_proto_depIdxs = nil
}
