// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: file-lock.proto

package file_lock

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileLockEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flag          *uint32                `protobuf:"varint,1,req,name=flag" json:"flag,omitempty"`
	Type          *uint32                `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Pid           *int32                 `protobuf:"varint,3,req,name=pid" json:"pid,omitempty"`
	Fd            *int32                 `protobuf:"varint,4,req,name=fd" json:"fd,omitempty"`
	Start         *int64                 `protobuf:"varint,5,req,name=start" json:"start,omitempty"`
	Len           *int64                 `protobuf:"varint,6,req,name=len" json:"len,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileLockEntry) Reset() {
	*x = FileLockEntry{}
	mi := &file_file_lock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileLockEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLockEntry) ProtoMessage() {}

func (x *FileLockEntry) ProtoReflect() protoreflect.Message {
	mi := &file_file_lock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLockEntry.ProtoReflect.Descriptor instead.
func (*FileLockEntry) Descriptor() ([]byte, []int) {
	return file_file_lock_proto_rawDescGZIP(), []int{0}
}

func (x *FileLockEntry) GetFlag() uint32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *FileLockEntry) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FileLockEntry) GetPid() int32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *FileLockEntry) GetFd() int32 {
	if x != nil && x.Fd != nil {
		return *x.Fd
	}
	return 0
}

func (x *FileLockEntry) GetStart() int64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *FileLockEntry) GetLen() int64 {
	if x != nil && x.Len != nil {
		return *x.Len
	}
	return 0
}

var File_file_lock_proto protoreflect.FileDescriptor

const file_file_lock_proto_rawDesc = "" +
	"\n" +
	"\x0ffile-lock.proto\"\x83\x01\n" +
	"\x0ffile_lock_entry\x12\x12\n" +
	"\x04flag\x18\x01 \x02(\rR\x04flag\x12\x12\n" +
	"\x04type\x18\x02 \x02(\rR\x04type\x12\x10\n" +
	"\x03pid\x18\x03 \x02(\x05R\x03pid\x12\x0e\n" +
	"\x02fd\x18\x04 \x02(\x05R\x02fd\x12\x14\n" +
	"\x05start\x18\x05 \x02(\x03R\x05start\x12\x10\n" +
	"\x03len\x18\x06 \x02(\x03R\x03len"

var (
	file_file_lock_proto_rawDescOnce sync.Once
	file_file_lock_proto_rawDescData []byte
)

func file_file_lock_proto_rawDescGZIP() []byte {
	file_file_lock_proto_rawDescOnce.Do(func() {
		file_file_lock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_lock_proto_rawDesc), len(file_file_lock_proto_rawDesc)))
	})
	return file_file_lock_proto_rawDescData
}

var file_file_lock_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_file_lock_proto_goTypes = []any{
	(*FileLockEntry)(nil), // 0: file_lock_entry
}
var file_file_lock_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_file_lock_proto_init() }
func file_file_lock_proto_init() {
	if File_file_lock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_lock_proto_rawDesc), len(file_file_lock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_file_lock_proto_goTypes,
		DependencyIndexes: file_file_lock_proto_depIdxs,
		MessageInfos:      file_file_lock_proto_msgTypes,
	}.Build()
	File_file_lock_proto = out.File
	file_file_lock_proto_goTypes = nil
	file_file_lock_proto_depIdxs = nil
}
