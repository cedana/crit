name: Codecov

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Code coverage
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        # needed for codecov
        fetch-depth: 0

    - name: Build CRIU criu-dev
      run: |
        sudo apt-get install -y libprotobuf-dev libprotobuf-c-dev protobuf-c-compiler protobuf-compiler python3-protobuf libnl-3-dev libnet-dev libcap-dev uuid-dev curl unzip
        git clone --depth=1 --single-branch -b criu-dev https://github.com/checkpoint-restore/criu.git
        make -j"$(nproc)" -C criu
        sudo make -C criu install-criu PREFIX=/usr

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        check-latest: true

    - name: Install protoc-gen-go
      run: sudo env "GOBIN=/usr/bin" go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

    - name: Run tests and collect coverage
      run: |
        sudo -E make test
        sudo -E make -C scripts/magic-gen test
        # First update protobuf. It is too old in the Ubuntu image.
        curl -Lo protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v23.4/protoc-23.4-linux-x86_64.zip
        sudo unzip -o protoc.zip -d /usr
        # We need to use the protobuf definitions from the criu-dev
        # branch as it might have changed.
        sudo -E make -C scripts/proto-gen proto-update GIT_BRANCH=criu-dev
        sudo -E make -C scripts/proto-gen
        sudo -E make -C crit clean bin/crit
        sudo -E make -C crit unit-test
        sudo -E make -C test crit-test
        # Run actual test as root as it uses CRIU.
        sudo -E make coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        file: test/.coverage/coverage.out
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
